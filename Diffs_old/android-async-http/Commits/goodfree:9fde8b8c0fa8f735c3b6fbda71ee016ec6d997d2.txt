diff --git a/android-app-frame/AndroidManifest.xml b/android-app-frame/AndroidManifest.xml
index 3bde42d3..8dffb33d 100644
--- a/android-app-frame/AndroidManifest.xml
+++ b/android-app-frame/AndroidManifest.xml
@@ -12,7 +12,7 @@
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
-        android:theme="@style/AppTheme" >
+      >
         <activity
             android:name="com.example.android_app_frame.MainActivity"
             android:label="@string/app_name" >
diff --git a/android-app-frame/res/drawable-hdpi/app_arrow_left.png b/android-app-frame/res/drawable-hdpi/app_arrow_left.png
new file mode 100644
index 00000000..5a42e874
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_arrow_left.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_arrow_left_focus.png b/android-app-frame/res/drawable-hdpi/app_arrow_left_focus.png
new file mode 100644
index 00000000..121b8916
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_arrow_left_focus.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_arrow_right.png b/android-app-frame/res/drawable-hdpi/app_arrow_right.png
new file mode 100644
index 00000000..0a404204
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_arrow_right.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_arrow_right_focus.png b/android-app-frame/res/drawable-hdpi/app_arrow_right_focus.png
new file mode 100644
index 00000000..2b5a7e68
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_arrow_right_focus.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_icon.png b/android-app-frame/res/drawable-hdpi/app_icon.png
new file mode 100644
index 00000000..3b9bb6e3
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_icon.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_icon_alert.png b/android-app-frame/res/drawable-hdpi/app_icon_alert.png
new file mode 100644
index 00000000..b6bdc03e
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_icon_alert.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_icon_back.png b/android-app-frame/res/drawable-hdpi/app_icon_back.png
new file mode 100644
index 00000000..c0c59fef
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_icon_back.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_icon_back_focus.png b/android-app-frame/res/drawable-hdpi/app_icon_back_focus.png
new file mode 100644
index 00000000..afe088d8
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_icon_back_focus.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_scroll_indicate.png b/android-app-frame/res/drawable-hdpi/app_scroll_indicate.png
new file mode 100644
index 00000000..e6495d69
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_scroll_indicate.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_scroll_indicate_focus.png b/android-app-frame/res/drawable-hdpi/app_scroll_indicate_focus.png
new file mode 100644
index 00000000..15f2a9e4
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_scroll_indicate_focus.png differ
diff --git a/android-app-frame/res/drawable-hdpi/app_tab_indicate_bg.png b/android-app-frame/res/drawable-hdpi/app_tab_indicate_bg.png
new file mode 100644
index 00000000..dd165f7a
Binary files /dev/null and b/android-app-frame/res/drawable-hdpi/app_tab_indicate_bg.png differ
diff --git a/android-app-frame/res/drawable-hdpi/ic_launcher.png b/android-app-frame/res/drawable-hdpi/ic_launcher.png
deleted file mode 100644
index 288b6655..00000000
Binary files a/android-app-frame/res/drawable-hdpi/ic_launcher.png and /dev/null differ
diff --git a/android-app-frame/res/drawable-xhdpi/ic_launcher.png b/android-app-frame/res/drawable-xhdpi/ic_launcher.png
deleted file mode 100644
index d4fb7cd9..00000000
Binary files a/android-app-frame/res/drawable-xhdpi/ic_launcher.png and /dev/null differ
diff --git a/android-app-frame/res/drawable-xxhdpi/ic_launcher.png b/android-app-frame/res/drawable-xxhdpi/ic_launcher.png
deleted file mode 100644
index 85a60815..00000000
Binary files a/android-app-frame/res/drawable-xxhdpi/ic_launcher.png and /dev/null differ
diff --git a/android-app-frame/res/drawable/app_arrow_left_selector.xml b/android-app-frame/res/drawable/app_arrow_left_selector.xml
new file mode 100644
index 00000000..353771f6
--- /dev/null
+++ b/android-app-frame/res/drawable/app_arrow_left_selector.xml
@@ -0,0 +1,8 @@
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:drawable="@drawable/app_arrow_left_focus" android:state_pressed="true"/>
+    <item android:drawable="@drawable/app_arrow_left_focus" android:state_selected="true"/>
+    <item android:drawable="@drawable/app_arrow_left_focus" android:state_focused="true"/>
+    <item android:drawable="@drawable/app_arrow_left"/>
+
+</selector>
\ No newline at end of file
diff --git a/android-app-frame/res/drawable/app_arrow_right_selector.xml b/android-app-frame/res/drawable/app_arrow_right_selector.xml
new file mode 100644
index 00000000..041bc02b
--- /dev/null
+++ b/android-app-frame/res/drawable/app_arrow_right_selector.xml
@@ -0,0 +1,8 @@
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:drawable="@drawable/app_arrow_right_focus" android:state_pressed="true"/>
+    <item android:drawable="@drawable/app_arrow_right_focus" android:state_selected="true"/>
+    <item android:drawable="@drawable/app_arrow_right_focus" android:state_focused="true"/>
+    <item android:drawable="@drawable/app_arrow_right"/>
+
+</selector>
\ No newline at end of file
diff --git a/android-app-frame/res/drawable/app_button_selector.xml b/android-app-frame/res/drawable/app_button_selector.xml
new file mode 100644
index 00000000..8ccc1ecb
--- /dev/null
+++ b/android-app-frame/res/drawable/app_button_selector.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_pressed="true"><shape>
+            <gradient android:angle="270" android:centerColor="#ffa838" android:centerY="0.95" android:endColor="#bb7c2a" android:startColor="#ffa838" />
+        </shape></item>
+    <item android:state_pressed="false"><shape>
+            <gradient android:angle="270" android:centerColor="#01d1cf" android:centerY="0.95" android:endColor="#02a4a2" android:startColor="#01d1cf" />
+        </shape></item>
+
+</selector>
\ No newline at end of file
diff --git a/android-app-frame/res/drawable/app_dialog_button_selector.xml b/android-app-frame/res/drawable/app_dialog_button_selector.xml
new file mode 100644
index 00000000..a6164a77
--- /dev/null
+++ b/android-app-frame/res/drawable/app_dialog_button_selector.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_pressed="false"><shape>
+            <solid android:color="#ffffff"></solid>
+        </shape></item>
+    <item android:state_pressed="true"><shape>
+            <solid android:color="#26000000"></solid>
+        </shape></item>
+
+</selector>
\ No newline at end of file
diff --git a/android-app-frame/res/drawable/app_edittext_selector.xml b/android-app-frame/res/drawable/app_edittext_selector.xml
new file mode 100644
index 00000000..5bfbfa10
--- /dev/null
+++ b/android-app-frame/res/drawable/app_edittext_selector.xml
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector
+	xmlns:android="http://schemas.android.com/apk/res/android">
+	<item android:state_focused="true">
+        <shape>
+        	<stroke android:width="1dp" android:color="#ff8800" />
+            <solid android:color="#ffffff" />
+        </shape>
+    </item>
+    <item android:state_pressed="true">
+        <shape>
+        	<stroke android:width="1dp" android:color="#ff8800" />
+            <solid android:color="#ffffff" />
+        </shape>
+    </item>
+   <item>
+        <shape>
+        	<stroke android:width="1dp" android:color="#b7b8b9" />
+            <solid android:color="#ffffff" />
+        </shape>
+    </item>
+</selector>
diff --git a/android-app-frame/res/drawable/app_progress_selector.xml b/android-app-frame/res/drawable/app_progress_selector.xml
new file mode 100644
index 00000000..cd8cb0cd
--- /dev/null
+++ b/android-app-frame/res/drawable/app_progress_selector.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <!-- 设置背景色（黑色） -->
+
+    <item android:id="@android:id/background">
+        <shape>
+            <corners android:radius="1dip" />
+            <stroke android:width="1px" android:color="#e1e1e1"/>	 
+	        <solid android:color="#ffffff" />
+        </shape>
+    </item>
+
+    <!-- 设置进度条颜色（白色） -->
+
+    <item android:id="@android:id/progress">
+        <clip>
+            <shape>
+                <corners android:radius="1dip" />
+                <stroke android:width="1px" android:color="#e1e1e1"/>	 
+                <gradient
+                    android:endColor="#ffa200"
+                    android:startColor="#ffa200" />
+            </shape>
+        </clip>
+    </item>
+
+</layer-list>
\ No newline at end of file
diff --git a/android-app-frame/res/drawable/app_title_back_selector.xml b/android-app-frame/res/drawable/app_title_back_selector.xml
new file mode 100644
index 00000000..1ae79de9
--- /dev/null
+++ b/android-app-frame/res/drawable/app_title_back_selector.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:drawable="@drawable/app_icon_back_focus" android:state_pressed="true"/>
+    <item android:drawable="@drawable/app_icon_back_focus" android:state_selected="true"/>
+    <item android:drawable="@drawable/app_icon_back_focus" android:state_focused="true"/>
+    <item android:drawable="@drawable/app_icon_back"/>
+
+</selector>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/activity_main.xml b/android-app-frame/res/layout/activity_main.xml
deleted file mode 100644
index 91ba12a9..00000000
--- a/android-app-frame/res/layout/activity_main.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:paddingBottom="@dimen/activity_vertical_margin"
-    android:paddingLeft="@dimen/activity_horizontal_margin"
-    android:paddingRight="@dimen/activity_horizontal_margin"
-    android:paddingTop="@dimen/activity_vertical_margin"
-    tools:context=".MainActivity" >
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/hello_world" />
-
-</RelativeLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_dialog_layout.xml b/android-app-frame/res/layout/app_dialog_layout.xml
new file mode 100644
index 00000000..a5aed0e0
--- /dev/null
+++ b/android-app-frame/res/layout/app_dialog_layout.xml
@@ -0,0 +1,111 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="#cccccc"
+    android:orientation="vertical" >
+
+    <LinearLayout
+        android:id="@+id/top_layout"
+        android:layout_width="match_parent"
+        android:layout_height="45dp"
+        android:orientation="vertical" >
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="43dp"
+            android:gravity="center_vertical"
+            android:orientation="horizontal" >
+
+            <ImageView
+                android:id="@+id/icon_image"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="10dp"
+                android:paddingLeft="10dp"
+                android:src="@drawable/app_icon_alert" />
+
+            <TextView
+                android:id="@+id/title_text"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:paddingLeft="10dp"
+                android:text="TextView"
+                android:textColor="@color/frame"
+                android:textSize="24sp" />
+        </LinearLayout>
+
+        <View
+            android:layout_width="wrap_content"
+            android:layout_height="2dp"
+            android:background="@color/frame" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/content_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center_vertical"
+        android:minHeight="60dp"
+        android:orientation="vertical" >
+
+        <TextView
+            android:id="@+id/message_text"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:text="TextView"
+            android:textColor="@color/title"
+            android:textSize="18sp" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/button_layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:orientation="vertical" >
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="0.5dp"
+            android:background="#e1e1e1" />
+
+        <LinearLayout
+            android:layout_width="fill_parent"
+            android:layout_height="45dp"
+            android:background="#f4f4f4"
+            android:gravity="center"
+            android:minHeight="51dp" >
+
+            <Button
+                android:id="@+id/cancel_button"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="0.5"
+                android:background="@drawable/app_dialog_button_selector"
+                android:text="TextView"
+                android:textColor="@color/title"
+                android:textSize="16sp"
+                android:textStyle="bold" />
+
+            <View
+                android:layout_width="0.5dp"
+                android:layout_height="fill_parent"
+                android:background="#e1e1e1" />
+
+            <Button
+                android:id="@+id/confirm_button"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_weight="0.5"
+                android:background="@drawable/app_dialog_button_selector"
+                android:text="TextView"
+                android:textColor="@color/title"
+                android:textSize="16sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_dialog_spinner_item.xml b/android-app-frame/res/layout/app_dialog_spinner_item.xml
new file mode 100644
index 00000000..3d81bcfd
--- /dev/null
+++ b/android-app-frame/res/layout/app_dialog_spinner_item.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/title_text"
+    android:layout_width="fill_parent"
+    android:layout_height="52dp"
+    android:ellipsize="marquee"
+    android:gravity="center_vertical"
+    android:minHeight="52dp"
+    android:paddingLeft="10dp"
+    android:singleLine="true"
+    android:text="TextView"
+    android:textColor="@color/title"
+    android:textSize="16sp" />
diff --git a/android-app-frame/res/layout/app_dialog_spinner_layout.xml b/android-app-frame/res/layout/app_dialog_spinner_layout.xml
new file mode 100644
index 00000000..b4c6a587
--- /dev/null
+++ b/android-app-frame/res/layout/app_dialog_spinner_layout.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ListView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginLeft="10dp"
+    android:layout_marginRight="10dp"
+    android:background="@color/white"
+    android:cacheColorHint="@color/transparent"
+    android:divider="@color/divider"
+    android:dividerHeight="0.5dp"
+    android:fadingEdge="none" >
+
+</ListView>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_dialog_text_layout.xml b/android-app-frame/res/layout/app_dialog_text_layout.xml
new file mode 100644
index 00000000..4389f08e
--- /dev/null
+++ b/android-app-frame/res/layout/app_dialog_text_layout.xml
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content" >
+
+    <TextView
+        android:id="@+id/message"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="10dp"
+        android:layout_marginRight="10dp"
+        android:gravity="center_horizontal"
+        android:text="TextView"
+        android:textColor="@color/title"
+        android:textSize="18sp" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_dialog_update_layout.xml b/android-app-frame/res/layout/app_dialog_update_layout.xml
new file mode 100644
index 00000000..b0737a1f
--- /dev/null
+++ b/android-app-frame/res/layout/app_dialog_update_layout.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical" >
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center" >
+
+        <TextView
+            android:id="@+id/dialog_message"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="5dp"
+            android:text="TextView"
+            android:textColor="@color/title"
+            android:textSize="18sp" />
+
+        <TextView
+            android:id="@+id/pct_message"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginRight="5dp"
+            android:gravity="center"
+            android:text="0%"
+            android:textColor="@color/title"
+            android:textSize="18sp" />
+    </LinearLayout>
+
+    <ProgressBar
+        android:id="@+id/pct_progressbar"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:layout_width="match_parent"
+        android:layout_height="12dp"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:layout_marginTop="5dp"
+        android:progressDrawable="@drawable/app_progress_selector" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_scroll_indicate_layout.xml b/android-app-frame/res/layout/app_scroll_indicate_layout.xml
new file mode 100644
index 00000000..463e341d
--- /dev/null
+++ b/android-app-frame/res/layout/app_scroll_indicate_layout.xml
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical" >
+
+    <android.support.v4.view.ViewPager
+        android:id="@+id/view_pager"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" />
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:layout_alignParentLeft="true"
+        android:layout_centerVertical="true"
+        android:gravity="bottom" >
+
+        <Button
+            android:id="@+id/left_button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:background="@drawable/app_arrow_left_selector" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:layout_alignParentRight="true"
+        android:layout_centerVertical="true"
+        android:gravity="bottom" >
+
+        <Button
+            android:id="@+id/right_button"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:background="@drawable/app_arrow_right_selector" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/indicater_layout"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_alignParentBottom="true"
+        android:layout_marginBottom="10dp"
+        android:gravity="center"
+        android:minHeight="10dp"
+        android:minWidth="60dp"
+        android:orientation="horizontal" >
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_tab_indicate_abs_layout.xml b/android-app-frame/res/layout/app_tab_indicate_abs_layout.xml
new file mode 100644
index 00000000..04e8fa92
--- /dev/null
+++ b/android-app-frame/res/layout/app_tab_indicate_abs_layout.xml
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="45dp"
+    android:background="@drawable/app_tab_indicate_bg"
+    android:orientation="vertical" >
+
+    <LinearLayout
+        android:id="@+id/tab_host"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1" />
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="@color/frame" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_tab_indicate_abs_line.xml b/android-app-frame/res/layout/app_tab_indicate_abs_line.xml
new file mode 100644
index 00000000..aa20fca5
--- /dev/null
+++ b/android-app-frame/res/layout/app_tab_indicate_abs_line.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="44dp"
+    android:gravity="center" >
+
+    <View
+        android:layout_width="1dp"
+        android:layout_height="23dp"
+        android:background="@color/divider" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_tab_indicate_text_item.xml b/android-app-frame/res/layout/app_tab_indicate_text_item.xml
new file mode 100644
index 00000000..47bd8b20
--- /dev/null
+++ b/android-app-frame/res/layout/app_tab_indicate_text_item.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="44dp"
+    android:orientation="vertical" >
+
+    <TextView
+        android:id="@+id/indicator_text"
+        android:layout_width="fill_parent"
+        android:layout_height="40dp"
+        android:gravity="center"
+        android:text="TextView"
+        android:textColor="@color/frame"
+        android:textSize="16sp" />
+
+    <!-- 线条 -->
+
+    <LinearLayout
+        android:id="@+id/bottom_line"
+        android:layout_width="fill_parent"
+        android:layout_height="4dp"
+        android:background="@color/frame"
+        android:visibility="invisible" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/app_title_layout.xml b/android-app-frame/res/layout/app_title_layout.xml
new file mode 100644
index 00000000..00f3faaa
--- /dev/null
+++ b/android-app-frame/res/layout/app_title_layout.xml
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="52dp"
+    android:background="@color/titlebar"
+    android:orientation="vertical" >
+
+    <LinearLayout
+        android:id="@+id/app_left_view"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:layout_alignParentLeft="true"
+        android:background="@drawable/app_title_back_selector"
+        android:clickable="true"
+        android:minWidth="45dp"
+        android:visibility="gone" >
+    </LinearLayout>
+
+    <TextView
+        android:id="@+id/app_title_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_centerVertical="true"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:ellipsize="end"
+        android:singleLine="true"
+        android:text="TextView"
+        android:textColor="@color/white"
+        android:textSize="22sp" >
+    </TextView>
+
+    <LinearLayout
+        android:id="@+id/app_right_view"
+        android:layout_width="wrap_content"
+        android:layout_height="fill_parent"
+        android:layout_alignParentRight="true"
+        android:layout_toRightOf="@id/app_title_text"
+        android:gravity="right|center_vertical"
+        android:minWidth="20dp"
+         >
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/listview.xml b/android-app-frame/res/layout/listview.xml
deleted file mode 100644
index ece9fe65..00000000
--- a/android-app-frame/res/layout/listview.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <GridView
-        android:id="@+id/listView1"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent" 
-        android:cacheColorHint="#00000000"
-        android:horizontalSpacing="5dp"
-        android:verticalSpacing="5dp"
-        android:numColumns="3">
-    </GridView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/layout/listview_item.xml b/android-app-frame/res/layout/listview_item.xml
deleted file mode 100644
index 3868a87a..00000000
--- a/android-app-frame/res/layout/listview_item.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:gravity="center" >
-
-    <com.allthelucky.net.WebImageView
-        android:id="@+id/imageView1"
-        android:layout_width="63dp"
-        android:layout_height="63dp"
-        android:src="@drawable/ic_launcher" 
-        android:scaleType="fitXY"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/android-app-frame/res/menu/main.xml b/android-app-frame/res/menu/main.xml
deleted file mode 100644
index ea3dd190..00000000
--- a/android-app-frame/res/menu/main.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<menu xmlns:android="http://schemas.android.com/apk/res/android" >
-
-    <item
-        android:id="@+id/action_settings"
-        android:orderInCategory="100"
-        android:showAsAction="never"
-        android:title="@string/action_settings"/>
-
-</menu>
\ No newline at end of file
diff --git a/android-app-frame/res/values-sw600dp/dimens.xml b/android-app-frame/res/values-sw600dp/dimens.xml
deleted file mode 100644
index 8088d347..00000000
--- a/android-app-frame/res/values-sw600dp/dimens.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<resources>
-
-    <!--
-         Customize dimensions originally defined in res/values/dimens.xml (such as
-         screen margins) for sw600dp devices (e.g. 7" tablets) here.
-    -->
-
-</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values-sw720dp-land/dimens.xml b/android-app-frame/res/values-sw720dp-land/dimens.xml
deleted file mode 100644
index 15679d4b..00000000
--- a/android-app-frame/res/values-sw720dp-land/dimens.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<resources>
-
-    <!--
-         Customize dimensions originally defined in res/values/dimens.xml (such as
-         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
-    -->
-    <dimen name="activity_horizontal_margin">128dp</dimen>
-
-</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values-v11/styles.xml b/android-app-frame/res/values-v11/styles.xml
deleted file mode 100644
index 9643ba15..00000000
--- a/android-app-frame/res/values-v11/styles.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<resources>
-
-    <!--
-        Base application theme for API 11+. This theme completely replaces
-        AppBaseTheme from res/values/styles.xml on API 11+ devices.
-    -->
-    <style name="AppBaseTheme" parent="android:Theme.Holo.Light">
-        <!-- API 11 theme customizations can go here. -->
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values-v14/styles.xml b/android-app-frame/res/values-v14/styles.xml
deleted file mode 100644
index 50251a1c..00000000
--- a/android-app-frame/res/values-v14/styles.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<resources>
-
-    <!--
-        Base application theme for API 14+. This theme completely replaces
-        AppBaseTheme from BOTH res/values/styles.xml and
-        res/values-v11/styles.xml on API 14+ devices.
-    -->
-    <style name="AppBaseTheme" parent="android:Theme.Holo.Light.DarkActionBar">
-        <!-- API 14 theme customizations can go here. -->
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values/app_colors.xml b/android-app-frame/res/values/app_colors.xml
new file mode 100644
index 00000000..4a14ab4d
--- /dev/null
+++ b/android-app-frame/res/values/app_colors.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <!-- 透明色 -->
+    <color name="transparent">#00000000</color>
+
+    <!-- 黑色 -->
+    <color name="black">#ff000000</color>
+
+    <!-- 灰色 -->
+    <color name="gray">#ff888888</color>
+
+    <!-- 深灰色 -->
+    <color name="dkgray">#ffff4444</color>
+
+    <!-- 浅灰色 -->
+    <color name="ltgray">#ffcccccc</color>
+
+    <!-- 白色 -->
+    <color name="white">#ffffffff</color>
+
+    <!-- 红色 -->
+    <color name="red">#ffff0000</color>
+
+    <!-- 绿色 -->
+    <color name="green">#ff00ff00</color>
+
+    <!-- 蓝色 -->
+    <color name="blue">#ff0000ff</color>
+
+    <!-- 黄色 -->
+    <color name="yellow">#ffffff00</color>
+
+    <!-- 青色 -->
+    <color name="cyan">#ff00ffff</color>
+
+    <!-- 粉色 -->
+    <color name="magenta">#ff888888</color>
+
+     <!-- 标题背景 -->
+    <color name="titlebar">#2181cb</color>
+    
+    <!-- 布局背景 -->
+    <color name="bg">#ffffffff</color>
+
+    <!-- 深黑，常用文字颜色 -->
+    <color name="title">#ff333333</color>
+
+    <!-- 灰色，常用浅色文字颜色 -->
+    <color name="content">#ff999999</color>
+
+    <!-- 浅灰，常用list风格分隔线条颜色 -->
+    <color name="divider">#e6e6e6</color>
+
+    <!-- 对话框，Indicator分隔线 -->
+    <color name="frame">#61a716</color>
+
+</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values/app_styles.xml b/android-app-frame/res/values/app_styles.xml
new file mode 100644
index 00000000..4a602182
--- /dev/null
+++ b/android-app-frame/res/values/app_styles.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+        <style name="dialog_style" parent="@android:style/Theme.Dialog">
+        <item name="android:windowFrame">@null</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:windowIsTranslucent">false</item>
+        <item name="android:windowNoTitle">true</item>
+        <!-- <item name="android:background">@android:color/white</item> -->
+        <item name="android:windowBackground">@android:color/transparent</item>
+        <item name="android:backgroundDimEnabled">true</item>
+    </style>
+</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values/dimens.xml b/android-app-frame/res/values/dimens.xml
deleted file mode 100644
index 71be7032..00000000
--- a/android-app-frame/res/values/dimens.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<resources>
-
-    <!-- Default screen margins, per the Android Design guidelines. -->
-    <dimen name="activity_horizontal_margin">16dp</dimen>
-    <dimen name="activity_vertical_margin">16dp</dimen>
-
-</resources>
\ No newline at end of file
diff --git a/android-app-frame/res/values/styles.xml b/android-app-frame/res/values/styles.xml
deleted file mode 100644
index 79a39afc..00000000
--- a/android-app-frame/res/values/styles.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<resources>
-
-    <!--
-        Base application theme, dependent on API level. This theme is replaced
-        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
-    -->
-    <style name="AppBaseTheme" parent="android:Theme.Light">
-        <!--
-            Theme customizations available in newer API levels can go in
-            res/values-vXX/styles.xml, while customizations related to
-            backward-compatibility can go here.
-        -->
-    </style>
-
-    <!-- Application theme. -->
-    <style name="AppTheme" parent="AppBaseTheme">
-        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/android-app-frame/src/com/allthelucky/framework/BaseActivity.java b/android-app-frame/src/com/allthelucky/framework/BaseActivity.java
deleted file mode 100644
index a47f2e15..00000000
--- a/android-app-frame/src/com/allthelucky/framework/BaseActivity.java
+++ /dev/null
@@ -1,64 +0,0 @@
-package com.allthelucky.framework;
-
-import android.app.Activity;
-import android.app.ProgressDialog;
-import android.os.Bundle;
-import android.view.Window;
-import android.widget.Toast;
-
-/**
- * base activity with dialog
- * 
- * @author savant
- * 
- */
-public class BaseActivity extends Activity {
-
-	private ProgressDialog progressDialog=null;
-
-	@Override
-	protected void onCreate(Bundle savedInstanceState) {
-		super.onCreate(savedInstanceState);
-		requestWindowFeature(Window.FEATURE_NO_TITLE);
-	}
-
-	public void showDialog() {
-		showDialog("正在加载，请稍候...", true);
-	}
-
-	public void showDialog(String message) {
-		showDialog(message, true);
-	}
-
-	public void showDialog(String message, boolean cancel) {
-		if (null == progressDialog) {
-			progressDialog = ProgressDialog.show(BaseActivity.this, "", "正在加载，请稍候...");
-			progressDialog.setCancelable(cancel);
-			progressDialog.setCanceledOnTouchOutside(false);
-		} else {
-			progressDialog.show();
-		}
-	}
-
-	public void dismissDialog() {
-		if (isFinishing()) {
-			return;
-		}
-		if (null != progressDialog && progressDialog.isShowing()) {
-			progressDialog.dismiss();
-		}
-	}
-
-	public void showToast(final String message) {
-		Toast.makeText(BaseActivity.this, message, Toast.LENGTH_SHORT).show();
-	}
-
-	@Override
-	public void onBackPressed() {
-		if (progressDialog != null && progressDialog.isShowing()) {
-			dismissDialog();
-		} else {
-			super.onBackPressed();
-		}
-	}
-}
diff --git a/android-app-frame/src/com/allthelucky/framework/BaseUtils.java b/android-app-frame/src/com/allthelucky/framework/BaseUtils.java
deleted file mode 100644
index 8a67463b..00000000
--- a/android-app-frame/src/com/allthelucky/framework/BaseUtils.java
+++ /dev/null
@@ -1,59 +0,0 @@
-package com.allthelucky.framework;
-
-import java.io.UnsupportedEncodingException;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-/**
- * Utils　for Application
- * 
- * @author savant
- * 
- */
-public class BaseUtils {
-	/**
-	 * 字节码数据 转 字符串工具
-	 */
-	public static String bytesToString(byte[] data) {
-		if (data == null)
-			return null;
-		try {
-			return new String(data, "utf-8");
-		} catch (UnsupportedEncodingException e) {
-			e.printStackTrace();
-			return null;
-		}
-	}
-	
-	/**
-	 * 字节码数据(字符)转JSONObject JSONObject
-	 * 
-	 * @param data
-	 * @return
-	 */
-	public static JSONObject bytesToJSONObject(byte[] data) {
-		if (data == null)
-			return null;
-		return stringToJSONObject(bytesToString(data));
-	}
-
-	/**
-	 * 字符串转JSONObject工具
-	 * 
-	 * @param json
-	 * @return
-	 */
-	public static JSONObject stringToJSONObject(String json) {
-		if (json == null)
-			return null;
-		try {
-			return new JSONObject(json);
-		} catch (JSONException e) {
-			e.printStackTrace();
-			return null;
-		}
-	}
-
-
-}
diff --git a/android-app-frame/src/com/allthelucky/framework/DebugLogger.java b/android-app-frame/src/com/allthelucky/framework/DebugLogger.java
deleted file mode 100644
index 01a51a3e..00000000
--- a/android-app-frame/src/com/allthelucky/framework/DebugLogger.java
+++ /dev/null
@@ -1,41 +0,0 @@
-package com.allthelucky.framework;
-
-/**
- * @description: overide Log utils
- * 
- * @author savant-pan
- * 
- */
-public final class DebugLogger {
-
-	private static boolean mDebug = false;
-
-	public static void init(final boolean debug) {
-		mDebug = debug;
-	}
-
-	public static void e(final String tag, final String msg) {
-		if (mDebug) {
-			android.util.Log.e(tag, msg);
-		}
-	}
-
-	public static void e(final String tag, final String msg, final Throwable tr) {
-		if (mDebug) {
-			android.util.Log.e(tag, msg, tr);
-		}
-	}
-
-	public static void d(final String tag, final String msg) {
-		if (mDebug) {
-			android.util.Log.d(tag, msg);
-		}
-	}
-
-	public static void d(final String tag, final String msg, final Throwable tr) {
-		if (mDebug) {
-			android.util.Log.d(tag, msg, tr);
-		}
-	}
-
-}
diff --git a/android-app-frame/src/com/app/library/LibraryConfig.java b/android-app-frame/src/com/app/library/LibraryConfig.java
new file mode 100644
index 00000000..064b930d
--- /dev/null
+++ b/android-app-frame/src/com/app/library/LibraryConfig.java
@@ -0,0 +1,62 @@
+package com.app.library;
+
+import android.content.Context;
+
+import com.app.library.common.DebugLogger;
+import com.app.library.common.ResourceUtils;
+
+/**
+ * 基本库配置工具类
+ * 
+ * @author savant-pan
+ * 
+ */
+public final class LibraryConfig {
+	/**
+	 * class中所用“确定”
+	 */
+	public static final String CONFIRM_TEXT = "确 定";
+
+	/**
+	 * class中所用“取 消”
+	 */
+	public static final String CANCEL_TEXT = "取 消";
+
+	/**
+	 * class中所用“提 示”
+	 */
+	public static final String ALERT_TEXT = "提 示";
+
+	/**
+	 * class中所用“正在加载，请稍候...”
+	 */
+	public static final String LOADING_TEXT = "正在加载，请稍候...";
+
+	/**
+	 * class中所用“正在下载，请稍候...”
+	 */
+	public static final String DOWNLOADING_TEXT = "正在下载，请稍候...";
+
+	/**
+	 * class中所用“程序下载失败...”
+	 */
+	public static final String DOWNLOAD_ERR_TEXT = "程序下载失败...";
+
+	/**
+	 * class中所用“网络请求失败，请稍候再试...”
+	 */
+	public static final String NETWORK_ERR_TEXT = "网络请求失败，请稍候再试...";
+
+	/**
+	 * 初始化基本库（建议在Application子类中进行）
+	 * 
+	 * @param context
+	 *            上下文对象
+	 * @param debug
+	 *            调试开关标志
+	 */
+	public static void init(Context context, boolean debug) {
+		DebugLogger.init(debug);
+		ResourceUtils.init(context);
+	}
+}
diff --git a/android-app-frame/src/com/app/library/common/BaseActivity.java b/android-app-frame/src/com/app/library/common/BaseActivity.java
new file mode 100644
index 00000000..ab5d65ea
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/BaseActivity.java
@@ -0,0 +1,87 @@
+package com.app.library.common;
+
+import com.app.library.LibraryConfig;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.os.Bundle;
+import android.view.Window;
+import android.widget.Toast;
+
+/**
+ * Base Activity for all other page
+ * 
+ * @author savant-pan
+ * 
+ */
+public class BaseActivity extends Activity {
+	private ProgressDialog progressDialog = null;
+
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		this.requestWindowFeature(Window.FEATURE_NO_TITLE);
+	}
+
+	protected void showToast(int resId) {
+		Toast.makeText(this, resId, Toast.LENGTH_SHORT).show();
+	}
+
+	protected void showToast(String text) {
+		Toast.makeText(this, text, Toast.LENGTH_SHORT).show();
+	}
+
+	protected void showDialog() {
+		showDialog(true);
+	}
+
+	protected void showDialog(boolean cancel) {
+		showDialog(LibraryConfig.LOADING_TEXT, cancel);
+	}
+
+	protected void showDialog(String message, boolean cancel) {
+		if (isFinishing()) {
+			return;
+		}
+		if (progressDialog == null) {
+			progressDialog = ProgressDialog.show(this, "", message);
+			progressDialog.setCanceledOnTouchOutside(false);
+		} else {
+			progressDialog.setMessage(message);
+			progressDialog.show();
+		}
+		progressDialog.setCancelable(cancel);
+	}
+
+	protected void updateMessage(String message) {
+		if (isFinishing()) {
+			return;
+		}
+		if (progressDialog != null) {
+			progressDialog.setMessage(message);
+		}
+	}
+
+	protected boolean isShowingDialog() {
+		return (progressDialog != null && progressDialog.isShowing());
+	}
+
+	protected void dismissDialog() {
+		if (isFinishing()) {
+			return;
+		}
+		if (progressDialog != null && progressDialog.isShowing()) {
+			progressDialog.dismiss();
+		}
+	}
+
+	@Override
+	public void onBackPressed() {
+		if (progressDialog != null && progressDialog.isShowing()) {
+			dismissDialog();
+		} else {
+			super.onBackPressed();
+		}
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/BaseDialog.java b/android-app-frame/src/com/app/library/common/BaseDialog.java
new file mode 100644
index 00000000..b777c13d
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/BaseDialog.java
@@ -0,0 +1,183 @@
+package com.app.library.common;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.graphics.Color;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.app.library.LibraryConfig;
+
+/**
+ * Base class for Dialog
+ * 
+ * @author savant-pan
+ * 
+ */
+public class BaseDialog {
+	private final Dialog dialog;
+	private boolean cancelable = false;
+	private Context context;
+
+	private ImageView iconImageVeiw;
+	private TextView titleTextView;
+	private TextView messageTextView;
+	private Button postiveBtn;
+	private Button negativeBtn;
+
+	private LinearLayout titleLayout;
+	private LinearLayout contentLayout;
+	private LinearLayout buttonLayout;
+
+	private boolean showTitleLayout = false;
+	private boolean showContentLayout = false;
+	private boolean showButtonLayout = false;
+	final LinearLayout root;
+
+	public BaseDialog(Context context) {
+		this.context = context;
+		this.root = new LinearLayout(context);
+		this.dialog = new Dialog(context, ResourceUtils.getStyleId("dialog_style"));
+		this.init();
+	}
+
+	private void init() {
+		final View layout = LayoutInflater.from(context).inflate(ResourceUtils.getLayoutId("app_dialog_layout"), null);
+		titleLayout = (LinearLayout) layout.findViewById(ResourceUtils.getId("top_layout"));
+		contentLayout = (LinearLayout) layout.findViewById(ResourceUtils.getId("content_layout"));
+		buttonLayout = (LinearLayout) layout.findViewById(ResourceUtils.getId("button_layout"));
+
+		iconImageVeiw = (ImageView) layout.findViewById(ResourceUtils.getId("icon_image"));
+		titleTextView = (TextView) layout.findViewById(ResourceUtils.getId("title_text"));
+		messageTextView = (TextView) layout.findViewById(ResourceUtils.getId("message_text"));
+		postiveBtn = (Button) layout.findViewById(ResourceUtils.getId("confirm_button"));
+		negativeBtn = (Button) layout.findViewById(ResourceUtils.getId("cancel_button"));
+
+		titleTextView.setText(LibraryConfig.ALERT_TEXT);
+		postiveBtn.setText(LibraryConfig.CONFIRM_TEXT);
+		negativeBtn.setText(LibraryConfig.CANCEL_TEXT);
+
+		titleLayout.setVisibility(View.GONE);
+		contentLayout.setVisibility(View.GONE);
+		buttonLayout.setVisibility(View.GONE);
+		postiveBtn.setVisibility(View.GONE);
+		negativeBtn.setVisibility(View.GONE);
+
+		setContentLayout(null);// show default textView
+		root.setBackgroundColor(Color.TRANSPARENT);
+		root.setPadding(15, 5, 15, 5);
+		root.addView(layout);
+
+		dialog.setContentView(root);
+	}
+
+	public void setContentLayout(View contentView) {
+		if (contentView != null) {
+			contentLayout.removeAllViews();
+			contentLayout.addView(contentView);
+			contentLayout.setVisibility(View.VISIBLE);
+		}
+	}
+
+	protected Context getContext() {
+		return context;
+	}
+
+	public void setCancelable(boolean cancel) {
+		this.cancelable = cancel;
+	}
+
+	public void setIcon(int drawable) {
+		this.iconImageVeiw.setImageLevel(drawable);
+	}
+
+	public void setTitle() {
+		this.setTitle(LibraryConfig.ALERT_TEXT);
+	}
+
+	public void setTitle(CharSequence title) {
+		this.showTitleLayout = true;
+		this.titleTextView.setText(title);
+	}
+
+	public void setMessage(CharSequence message) {
+		this.setMessage(message, Gravity.CENTER_HORIZONTAL);
+	}
+
+	public void setMessage(CharSequence message, int gravity) {
+		this.showContentLayout = true;
+		this.messageTextView.setGravity(gravity);
+		this.messageTextView.setText(message);
+	}
+
+	public void setPositiveButton(DialogInterface.OnClickListener onClickListener) {
+		this.setPositiveButton(LibraryConfig.CONFIRM_TEXT, onClickListener);
+	}
+
+	public void setPositiveButton(CharSequence text, DialogInterface.OnClickListener onClickListener) {
+		this.showButtonLayout = true;
+		this.postiveBtn.setText(text);
+		this.postiveBtn.setOnClickListener(new ClickListener(postiveBtn, onClickListener));
+		this.postiveBtn.setVisibility(View.VISIBLE);
+	}
+
+	public void setNegativeButton(DialogInterface.OnClickListener onClickListener) {
+		this.setNegativeButton(LibraryConfig.CANCEL_TEXT, onClickListener);
+	}
+
+	public void setNegativeButton(CharSequence text, DialogInterface.OnClickListener onClickListener) {
+		this.showButtonLayout = true;
+		this.negativeBtn.setText(text);
+		this.negativeBtn.setOnClickListener(new ClickListener(negativeBtn, onClickListener));
+		this.negativeBtn.setVisibility(View.VISIBLE);
+	}
+
+	private class ClickListener implements OnClickListener {
+		private Button button;
+		private DialogInterface.OnClickListener onClickListener;
+
+		public ClickListener(Button button, DialogInterface.OnClickListener onClickListener) {
+			this.button = button;
+			this.onClickListener = onClickListener;
+		}
+
+		@Override
+		public void onClick(View v) {
+			dismiss();
+			if (onClickListener == null)
+				return;
+			if (button == postiveBtn) {
+				onClickListener.onClick(dialog, DialogInterface.BUTTON_POSITIVE);
+			} else {
+				onClickListener.onClick(dialog, DialogInterface.BUTTON_NEGATIVE);
+			}
+		}
+	}
+	
+	public void show() {
+		dialog.setCancelable(cancelable);
+		if (showTitleLayout) {
+			this.titleLayout.setVisibility(View.VISIBLE);
+		}
+		if (showContentLayout) {
+			this.contentLayout.setVisibility(View.VISIBLE);
+		}
+		if (showButtonLayout) {
+			this.buttonLayout.setVisibility(View.VISIBLE);
+		}
+		dialog.show();
+	}
+
+	public void dismiss() {
+		if (dialog != null && dialog.isShowing()) {
+			dialog.dismiss();
+		}
+	}
+}
diff --git a/android-app-frame/src/com/app/library/common/DebugLogger.java b/android-app-frame/src/com/app/library/common/DebugLogger.java
new file mode 100644
index 00000000..109d3458
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/DebugLogger.java
@@ -0,0 +1,18 @@
+package com.app.library.common;
+
+/**
+ * 调试LOG
+ */
+public final class DebugLogger {
+	private static boolean DEBUG = false;
+
+	public static void init(boolean debug) {
+		DEBUG = debug;
+	}
+
+	public static void d(String tag, String messag) {
+		if (DEBUG) {
+			android.util.Log.d(tag, messag);
+		}
+	}
+}
\ No newline at end of file
diff --git a/android-app-frame/src/com/app/library/common/ResourceUtils.java b/android-app-frame/src/com/app/library/common/ResourceUtils.java
new file mode 100644
index 00000000..71a61fff
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/ResourceUtils.java
@@ -0,0 +1,146 @@
+package com.app.library.common;
+
+import java.lang.reflect.Field;
+
+import android.content.Context;
+
+/**
+ * R资源解析器
+ * 
+ * @author savant-pan
+ * 
+ */
+public class ResourceUtils {
+
+	/**
+	 * 默认资源包名
+	 */
+	private final static String DEFAULT_PKG_NAME = "com.base.framework.common.R";
+
+	/**
+	 * 资源包名
+	 */
+	private static String packageNameR = DEFAULT_PKG_NAME;
+
+	/**
+	 * 初始化R资源解析器包名
+	 * 
+	 * @param context
+	 */
+	public static void init(Context context) {
+		packageNameR = context.getPackageName() + ".R";
+	}
+
+	/**
+	 * 获取String资源ID
+	 * 
+	 * @param stringName
+	 *            String资源名
+	 * @return
+	 */
+	public static int getStringId(String stringName) {
+		return getResourceId("string", stringName);
+	}
+
+	/**
+	 * 获取Color资源ID
+	 * 
+	 * @param colorName
+	 *            Color资源名
+	 * @return
+	 */
+	public static int getColorId(String colorName) {
+		return getResourceId("color", colorName);
+	}
+
+	/**
+	 * 获取Layout资源ID
+	 * 
+	 * @param layoutName
+	 *            Layout资源名（文件名）
+	 * @return
+	 */
+	public static int getLayoutId(String layoutName) {
+		return getResourceId("layout", layoutName);
+	}
+
+	/**
+	 * 获取Drawable资源ID
+	 * 
+	 * @param drawableName
+	 *            Drawable资源名（文件名）
+	 * @return
+	 */
+	public static int getDrawableId(String drawableName) {
+		return getResourceId("drawable", drawableName);
+	}
+
+	/**
+	 * 获取Raw资源ID
+	 * 
+	 * @param rawName
+	 *            Raw资源名（文件名）
+	 * @return
+	 */
+	public static int getRawId(String rawName) {
+		return getResourceId("raw", rawName);
+	}
+
+	/**
+	 * 获取Layout资源ID
+	 * 
+	 * @param styleName
+	 *            Style资源名
+	 * @return
+	 */
+	public static int getStyleId(String styleName) {
+		return getResourceId("style", styleName);
+	}
+
+	/**
+	 * 获取Attr资源ID
+	 * 
+	 * @param attrName
+	 *            Attr资源名
+	 * @return
+	 */
+	public static int getAttrId(String attrName) {
+		return getResourceId("attr", attrName);
+	}
+
+	/**
+	 * 获取id资源ID值
+	 * 
+	 * @param idName
+	 *            ID资源名
+	 * @return
+	 */
+	public static int getId(String idName) {
+		return getResourceId("id", idName);
+	}
+
+	/**
+	 * 取资源ID
+	 * 
+	 * @param resType
+	 *            资源类型
+	 * @param resName
+	 *            资源名（文件名）
+	 * @return
+	 */
+	public static int getResourceId(String resType, String resName) {
+		if (packageNameR == null) {
+			packageNameR = DEFAULT_PKG_NAME;
+		}
+		if ((resType != null) && (resName != null))
+			try {
+				Class<?> localClass = Class.forName(packageNameR + "$" + resType);
+				Field localField = localClass.getField(resName);
+				Object localObject = localField.get(localClass.newInstance());
+				return Integer.parseInt(localObject.toString());
+			} catch (Exception localException) {
+				localException.printStackTrace();
+			}
+		return -1;
+	}
+}
diff --git a/android-app-frame/src/com/app/library/common/SoftwareUtils.java b/android-app-frame/src/com/app/library/common/SoftwareUtils.java
new file mode 100644
index 00000000..ebdc2a14
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/SoftwareUtils.java
@@ -0,0 +1,171 @@
+package com.app.library.common;
+
+import java.io.File;
+
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.PackageManager.NameNotFoundException;
+import android.net.Uri;
+import android.os.Environment;
+import android.text.TextUtils;
+
+/**
+ * 软件更新工具类
+ * 
+ * @author savant-pan
+ * 
+ */
+public class SoftwareUtils {
+	private static final String FILE_DIR = "/temp";
+
+	/**
+	 * 判断程序是否安装
+	 * 
+	 * @param context
+	 *            上下文
+	 * @param pkgName
+	 *            程序包名
+	 * @return
+	 */
+	public static boolean isApplicationInstalled(final Context context, final String pkgName) {
+		if (TextUtils.isEmpty(pkgName)) {
+			return false;
+		}
+		if (null == context) {
+			throw new IllegalArgumentException("context may not be null.");
+		}
+		try {
+			context.getPackageManager().getPackageInfo(pkgName, 0);
+			return true;
+		} catch (final NameNotFoundException e) {
+			// Application not installed.
+		}
+		return false;
+	}
+
+	/**
+	 * 取软件版本号
+	 * 
+	 * @param context
+	 * @return
+	 */
+	public static int getVersionCode(Context context) {
+		return getVersionCode(context, context.getPackageName());
+	}
+
+	/**
+	 * 取软件版本号
+	 * 
+	 * @param context
+	 * @param pkgName
+	 * @return
+	 */
+	public static int getVersionCode(Context context, String pkgName) {
+		return getPackageInfo(context, pkgName).versionCode;
+	}
+
+	/**
+	 * 取软件版名
+	 * 
+	 * @param context
+	 * @return
+	 */
+	public static String getVersionName(Context context) {
+		return getVersionName(context, context.getPackageName());
+	}
+
+	/**
+	 * 取软件版名
+	 * 
+	 * @param context
+	 * @param pkgName
+	 * @return
+	 */
+	public static String getVersionName(Context context, String pkgName) {
+		return getPackageInfo(context, pkgName).versionName;
+	}
+
+	/**
+	 * 判断是版本是否更新
+	 * 
+	 * @param context
+	 * @param pkgName
+	 * @param versionCodeNew
+	 * @return
+	 */
+	public static boolean hasNewVersion(Context context, String pkgName, int versionCodeNew) {
+		if (null == context) {
+			throw new IllegalArgumentException("context may not be null.");
+		}
+		try {
+			int versionCode = getVersionCode(context, pkgName);
+			if (versionCode < versionCodeNew) {
+				return true;
+			}
+		} catch (Exception e) {
+		}
+		return false;
+	}
+
+	private static PackageInfo getPackageInfo(Context context, String pkgName) {
+		PackageInfo packageInfo = null;
+		try {
+			PackageManager pm = context.getPackageManager();
+			packageInfo = pm.getPackageInfo(pkgName, 0);
+		} catch (NameNotFoundException e) {
+			e.printStackTrace();
+			packageInfo = new PackageInfo();
+			packageInfo.versionCode = 1;
+			packageInfo.versionName = "1.0";
+		}
+		return packageInfo;
+	}
+
+	/**
+	 * 更新文件路径
+	 */
+	public static String getSdcardFileName(String fileName) {
+		return Environment.getExternalStorageDirectory() + FILE_DIR + "/" + fileName;
+	}
+
+	/**
+	 * 检测是否有SD卡[有测清空程序目录下文件]
+	 * 
+	 * @param context
+	 * @return
+	 */
+	public static boolean hasSDCard(Context context) {
+		if (android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)) {
+			String dir = Environment.getExternalStorageDirectory() + FILE_DIR;
+			File f = new File(dir);
+			if (!f.exists()) {
+				f.mkdir();
+			} else {
+				try {
+					for (File t : f.listFiles()) {
+						t.delete();
+					}
+				} catch (Exception e) {
+					e.printStackTrace();
+				}
+			}
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	 * 启动安装
+	 */
+	public static void startInstall(final Context context, String fileName) {
+		Intent intent = new Intent();
+		intent.setAction(android.content.Intent.ACTION_VIEW);
+		intent.setDataAndType(Uri.parse("file://" + getSdcardFileName(fileName)),
+				"application/vnd.android.package-archive");
+		intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+		context.startActivity(intent);
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/manager/AppTitleManager.java b/android-app-frame/src/com/app/library/common/manager/AppTitleManager.java
new file mode 100644
index 00000000..229bc96f
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/AppTitleManager.java
@@ -0,0 +1,151 @@
+package com.app.library.common.manager;
+
+import com.app.library.common.ResourceUtils;
+
+import android.app.Activity;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.view.ViewGroup.LayoutParams;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+/**
+ * 顶部标题及Button设置工具
+ * 
+ * @author savant-pan
+ * 
+ */
+public class AppTitleManager {
+	private TextView titleView;
+	private LinearLayout leftLayout;
+	private LinearLayout rightLayout;
+	private boolean showLeftLayout = false;
+	private Activity activity;
+
+	/**
+	 * 仅设置标题-静态方法
+	 * 
+	 * @param activity
+	 *            活动
+	 * @param title
+	 *            标题文字
+	 */
+	public static void setTitle(Activity activity, String title) {
+		new AppTitleManager(activity).setTitle(title).show();
+	}
+
+	/**
+	 * 仅设置标题-静态方法
+	 * 
+	 * @param activity
+	 *            活动
+	 * @param titleRes
+	 *            标题文字资源ID
+	 */
+	public static void setTitle(Activity activity, int titleRes) {
+		new AppTitleManager(activity).setTitle(titleRes).show();
+	}
+
+	/**
+	 * 初始化构建
+	 */
+	protected AppTitleManager(Activity activity) {
+		this.activity = activity;
+		this.leftLayout = (LinearLayout) activity.findViewById(ResourceUtils.getId("app_left_view"));
+		this.rightLayout = (LinearLayout) activity.findViewById(ResourceUtils.getId("app_right_view"));
+		this.titleView = (TextView) activity.findViewById(ResourceUtils.getId("app_title_text"));
+
+		// set gone as default
+		this.titleView.setVisibility(View.GONE);
+		this.leftLayout.setVisibility(View.GONE);
+		this.rightLayout.setVisibility(View.GONE);
+
+	}
+
+	/**
+	 * builder
+	 * 
+	 * @param activity
+	 * @return
+	 */
+	public static AppTitleManager create(Activity activity) {
+		return new AppTitleManager(activity);
+	}
+
+	/**
+	 * 显示左边后退按键,关闭页面
+	 * 
+	 * @param leftView
+	 * @return
+	 */
+	public AppTitleManager setLeftButton() {
+		setLeftButton(new OnClickListener() {
+			@Override
+			public void onClick(View v) {
+				try {
+					activity.finish();
+				} catch (Exception e) {
+					e.printStackTrace();
+				}
+			}
+		});
+		return this;
+	}
+
+	/**
+	 * 显示左边后退按键,自写监听
+	 * 
+	 * @param leftView
+	 * @return
+	 */
+	public AppTitleManager setLeftButton(OnClickListener li) {
+		this.showLeftLayout = true;
+		this.leftLayout.setVisibility(View.VISIBLE);
+		this.leftLayout.setOnClickListener(li);
+		return this;
+	}
+
+	/**
+	 * 添加自定义右上方布局,并自行处理事件
+	 * 
+	 * @param rightView
+	 * @return
+	 */
+	public AppTitleManager setRightView(View rightView) {
+		if (rightView != null) {
+			this.rightLayout.addView(rightView, new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
+			this.rightLayout.setVisibility(View.VISIBLE);
+		}
+		return this;
+	}
+
+	/**
+	 * 显示标题
+	 */
+	public AppTitleManager setTitle(CharSequence title) {
+		titleView.setVisibility(View.VISIBLE);
+		titleView.setText(title);
+		return this;
+	}
+
+	/**
+	 * 显示标题
+	 */
+	public AppTitleManager setTitle(int titleRes) {
+		titleView.setVisibility(View.VISIBLE);
+		titleView.setText(titleRes);
+		return this;
+	}
+
+	/**
+	 * 显示
+	 */
+	public void show() {
+		if (showLeftLayout) {
+			this.leftLayout.setVisibility(View.VISIBLE);
+		}
+		this.rightLayout.setVisibility(View.VISIBLE);
+		this.titleView.setVisibility(View.VISIBLE);
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/manager/DialogManager.java b/android-app-frame/src/com/app/library/common/manager/DialogManager.java
new file mode 100644
index 00000000..88a22ecb
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/DialogManager.java
@@ -0,0 +1,156 @@
+package com.app.library.common.manager;
+
+import java.util.Arrays;
+import java.util.List;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.DialogInterface.OnClickListener;
+import android.view.Gravity;
+
+import com.app.library.common.BaseDialog;
+
+/**
+ * 对话框工具类
+ * 
+ * @author savant-pan
+ * 
+ */
+public class DialogManager {
+
+	/**
+	 * 显示对话框，确定和取消自定义文字
+	 * 
+	 * @param context
+	 * @param message
+	 * @param onClickListener
+	 */
+	public static void showDialog(Activity context, String confirmText, String cancelText, CharSequence message,
+			OnClickListener onClickListener) {
+		showDialog(context, confirmText, cancelText, message, Gravity.CENTER_HORIZONTAL, onClickListener);
+	}
+
+	/**
+	 * 显示对话框，确定和取消自定义文字
+	 * 
+	 * @param context
+	 * @param confirmText
+	 * @param cancelText
+	 * @param message
+	 * @param gravity
+	 *            文字对齐方式
+	 * @param onClickListener
+	 */
+	public static void showDialog(Activity context, String confirmText, String cancelText, CharSequence message,
+			int gravity, OnClickListener onClickListener) {
+		BaseDialog dialog = new BaseDialog(context);
+		dialog.setCancelable(false);
+		dialog.setTitle();
+		dialog.setMessage(message, gravity);
+		dialog.setPositiveButton(confirmText, onClickListener);
+		dialog.setNegativeButton(cancelText, onClickListener);
+		dialog.show();
+	}
+
+	/**
+	 * 显示对“确定”+“取消”话框，
+	 * 
+	 * @param context
+	 * @param message
+	 *            提示信息
+	 * @param onClickListener
+	 */
+	public static void showDialog(Activity context, CharSequence message, OnClickListener onClickListener) {
+		dialog(context, message, 0, onClickListener);
+	}
+
+	/**
+	 * 显示“确定”对话框，
+	 * 
+	 * @param context
+	 * @param message
+	 * @param onClickListener
+	 */
+	public static void showConfirmDialog(Activity context, CharSequence message, OnClickListener onClickListener) {
+		dialog(context, message, 1, onClickListener);
+	}
+
+	/**
+	 * 显示对话框，“取消”
+	 * 
+	 * @param context
+	 * @param message
+	 * @param onClickListener
+	 */
+	public static void showCancelDialog(Activity context, CharSequence message, OnClickListener onClickListener) {
+		dialog(context, message, 2, onClickListener);
+	}
+
+	private static void dialog(Activity context, CharSequence message, int type, OnClickListener onClickListener) {
+		final BaseDialog dialog = new BaseDialog(context);
+		dialog.setCancelable(false);
+		dialog.setTitle();
+		dialog.setMessage(message);
+		if (type == 0) {// 取消+确定
+			dialog.setNegativeButton(onClickListener);
+			dialog.setPositiveButton(onClickListener);
+		} else if (type == 1) {// 确定
+			dialog.setPositiveButton(onClickListener);
+		} else {// 取消
+			dialog.setNegativeButton(onClickListener);
+		}
+		if (context.isFinishing()) {
+			return;
+		}
+		dialog.show();
+	}
+
+	/**
+	 * 显示Spinner风格Dialog
+	 * 
+	 * @param context
+	 * @param list
+	 * @param listener
+	 */
+	public static void showSpinnerDialog(Context context, String data[], SpinnerListener listener) {
+		if (data == null || data.length == 0) {
+			throw new NullPointerException();
+		}
+		showSpinnerDialog(context, Arrays.asList(data), listener);
+	}
+
+	/**
+	 * 显示Spinner风格Dialog
+	 * 
+	 * @param context
+	 * @param list
+	 * @param listener
+	 */
+	public static void showSpinnerDialog(Context context, List<String> list, SpinnerListener listener) {
+		final SpinnerDialog dialog = new SpinnerDialog(context);
+		dialog.setCancelable(true);
+		dialog.init(list, listener).show();
+	}
+
+	/**
+	 * 显示更新下载对话框
+	 * 
+	 * @param context
+	 * @param message
+	 *            提示消息
+	 * @param url
+	 *            文件下载地址
+	 * @param fileName
+	 *            文件名
+	 * @param donwloadListener
+	 */
+	public static void showUpdateDialog(Context context, CharSequence message, String url, String fileName,
+			UpdateListener donwloadListener) {
+		final UpdateDialog dialog = new UpdateDialog(context);
+		dialog.setTitle();
+		dialog.setMessage(message);
+		dialog.setUpdateParams(url, fileName, donwloadListener);
+		dialog.show();
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/manager/RequestListener.java b/android-app-frame/src/com/app/library/common/manager/RequestListener.java
new file mode 100644
index 00000000..f913028e
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/RequestListener.java
@@ -0,0 +1,37 @@
+package com.app.library.common.manager;
+
+/**
+ * Request Listener for AsyncHttpResponseHandler
+ * 
+ * @author savant-pan
+ * 
+ */
+public interface RequestListener {
+	/**
+	 * Status OK
+	 */
+	public final static int OK = 0;
+	/**
+	 * Status ERR
+	 */
+	public final static int ERR = 1;
+
+	/**
+	 * callback when Request start
+	 */
+	void onStart();
+
+	/**
+	 * callback when Request end
+	 * 
+	 * @param data
+	 *            byte array if any
+	 * @param statusCode
+	 *            Request Status
+	 * @param description
+	 *            description
+	 * @param actionId
+	 *            request identifier
+	 */
+	void onCompleted(byte[] data, int statusCode, String description, int actionId);
+}
diff --git a/android-app-frame/src/com/app/library/common/manager/RequestManager.java b/android-app-frame/src/com/app/library/common/manager/RequestManager.java
new file mode 100644
index 00000000..eac5b960
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/RequestManager.java
@@ -0,0 +1,478 @@
+package com.app.library.common.manager;
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.UnsupportedEncodingException;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.security.MessageDigest;
+
+import org.apache.http.Header;
+import org.apache.http.HttpEntity;
+import org.apache.http.entity.StringEntity;
+import org.apache.http.message.BasicHeader;
+import org.apache.http.protocol.HTTP;
+import org.json.JSONObject;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+import android.os.AsyncTask;
+import android.text.TextUtils;
+
+import com.loopj.android.http.AsyncHttpClient;
+import com.loopj.android.http.AsyncHttpResponseHandler;
+import com.loopj.android.http.RequestParams;
+
+/**
+ * Request Manager based on AsyncHttpClient
+ * 
+ * @author savant-pan
+ * 
+ */
+public class RequestManager {
+	private final AsyncHttpClient asyncHttpClient;
+	private static RequestManager INSTANCE = null;
+
+	protected RequestManager() {
+		this.asyncHttpClient = new AsyncHttpClient();
+	}
+
+	public static RequestManager getInstance() {
+		if (INSTANCE == null) {
+			INSTANCE = new RequestManager();
+		}
+		return INSTANCE;
+	}
+
+	/**
+	 * 清空缓存文件
+	 * 
+	 * @param context
+	 */
+	public static void clearHttpCache(Context context) {
+		context.getSharedPreferences("cachefiles", Context.MODE_PRIVATE).edit().clear().commit();
+		final String fl[] = context.fileList();
+		try {
+			for (String f : fl) {
+				context.deleteFile(f);
+			}
+		} catch (Exception e) {
+			e.printStackTrace();
+		}
+	}
+
+	public void cancel(Context context) {
+		asyncHttpClient.cancelRequests(context, true);
+	}
+
+	/**
+	 * 参数列表请求
+	 * 
+	 * @param context
+	 * @param url
+	 * @param params
+	 * @param requestListener
+	 * @param actionId
+	 */
+	public void post(Context context, String url, RequestParams params, RequestListener requestListener, int actionId) {
+		asyncHttpClient.post(context, url, params, new HttpRequestListener(requestListener, actionId));
+	}
+
+	/**
+	 * JSON　参数请求
+	 * 
+	 * @param context
+	 * @param url
+	 * @param params
+	 * @param requestListener
+	 * @param actionId
+	 */
+	public void post(Context context, String url, JSONObject params, RequestListener requestListener, int actionId) {
+		asyncHttpClient.post(context, url, rpcToEntity(params.toString(), "application/json"), "application/json",
+				new HttpRequestListener(requestListener, actionId));
+	}
+
+	/**
+	 * JSON　参数请求
+	 * 
+	 * @param context
+	 * @param url
+	 * @param headers
+	 * @param params
+	 * @param requestListener
+	 * @param actionId
+	 */
+	public void post(Context context, String url, Header[] headers, JSONObject params, RequestListener requestListener,
+			int actionId) {
+		asyncHttpClient.post(context, url, headers, rpcToEntity(params.toString(), "application/json"),
+				"application/json", new HttpRequestListener(requestListener, actionId));
+	}
+
+	/**
+	 * XML　参数请求
+	 * 
+	 * @param context
+	 * @param url
+	 * @param params
+	 * @param requestListener
+	 * @param actionId
+	 */
+	public void post(Context context, String url, String params, RequestListener requestListener, int actionId) {
+		asyncHttpClient.post(context, url, rpcToEntity(params, "application/xml"), "application/xml",
+				new HttpRequestListener(requestListener, actionId));
+	}
+
+	/**
+	 * XML　参数请求
+	 * 
+	 * @param context
+	 * @param url
+	 * @param headers
+	 * @param params
+	 * @param requestListener
+	 * @param actionId
+	 */
+	public void post(Context context, String url, Header[] headers, String params, RequestListener requestListener,
+			int actionId) {
+		asyncHttpClient.post(context, url, headers, rpcToEntity(params, "application/xml"), "application/xml",
+				new HttpRequestListener(requestListener, actionId));
+	}
+
+	/**
+	 * get数据
+	 * 
+	 * @param context
+	 * @param url
+	 * @param requestListener
+	 * @param actionId
+	 */
+	public void get(Context context, String url, RequestListener requestListener, int actionId) {
+		get(context, url, requestListener, false, actionId);
+	}
+
+	/**
+	 * get数据
+	 * 
+	 * @param context
+	 * @param url
+	 * @param requestListener
+	 * @param cache
+	 * @param actionId
+	 */
+	public void get(Context context, String url, RequestListener requestListener, boolean cache, int actionId) {
+		final String encodeUrl = urlEncode(url);
+		if (!cache) {
+			asyncHttpClient.get(context, url, new HttpRequestListener(requestListener, actionId));
+		} else {
+			if (!hasCache(context, encodeUrl)) {
+				loadAndSaveResource(context, encodeUrl, requestListener, 0l, actionId);
+			} else {
+				loadCache(context, encodeUrl, requestListener, actionId);
+				if (!hasNetwork(context)) {
+					return;
+				} else {
+					checkUpdate(context, encodeUrl, actionId);
+				}
+			}
+		}
+	}
+
+	/**
+	 * 加载并缓存网络数据
+	 * 
+	 * @param context
+	 * @param url
+	 * @param requestListener
+	 * @param actionId
+	 */
+	private void loadAndSaveResource(final Context context, final String url, final RequestListener requestListener,
+			final long lastModified, final int actionId) {
+		asyncHttpClient.get(context, url, new HttpRequestListener(new CacheRequestListener(context, url,
+				requestListener, lastModified), actionId));
+	}
+
+	/**
+	 * 检测/更新缓存
+	 * 
+	 * @param context
+	 * @param url
+	 * @param actionId
+	 */
+	private void checkUpdate(final Context context, final String url, final int actionId) {
+		final SharedPreferences pref = context.getSharedPreferences("cachefiles", Context.MODE_PRIVATE);
+		final String fileName = encryptMD5(url);
+		new AsyncTask<Void, Void, Long>() {
+			@Override
+			protected Long doInBackground(Void... params) {
+				long lastModified = -1l;
+				try {
+					final URL u = new URL(url);
+					final HttpURLConnection conn = (HttpURLConnection) u.openConnection();
+					conn.setConnectTimeout(5 * 1000);
+					conn.setRequestProperty("User-agent", "Mozilla/4.0");
+					conn.setRequestProperty("Connection", "Keep-Alive");
+					conn.setRequestProperty("Charset", "UTF-8");
+					conn.setRequestMethod("GET");
+					conn.connect();
+					if (conn.getResponseCode() == 200) {
+						lastModified = conn.getLastModified();
+					}
+					conn.disconnect();
+				} catch (Exception e) {
+					e.printStackTrace();
+				}
+				return lastModified;
+			}
+
+			protected void onPostExecute(Long result) {
+				if (result != -1l && result != pref.getLong(fileName, 0l)) {
+					loadAndSaveResource(context, url, null, result, actionId);// 不返回数据到接口
+				}
+			}
+		}.execute();
+	}
+
+	/**
+	 * 读缓存
+	 * 
+	 * @param context
+	 * @param url
+	 * @param requestListener
+	 * @param actionId
+	 */
+	private void loadCache(final Context context, final String url, final RequestListener requestListener,
+			final int actionId) {
+		requestListener.onStart();
+		new AsyncTask<Void, Void, byte[]>() {
+			@Override
+			protected byte[] doInBackground(Void... params) {
+				try {
+					InputStream is = context.openFileInput(encryptMD5(url));
+					ByteArrayOutputStream bos = new ByteArrayOutputStream();
+					byte[] bytes = new byte[4096];
+					int len = 0;
+					while ((len = is.read(bytes)) > 0) {
+						bos.write(bytes, 0, len);
+					}
+					bos.flush();
+					return bos.toByteArray();
+
+				} catch (Exception e) {
+					e.printStackTrace();
+					return null;
+				}
+			}
+
+			protected void onPostExecute(byte[] result) {
+				boolean flag = (result != null);
+				requestListener.onCompleted(result, (flag ? RequestListener.OK : RequestListener.ERR),
+						flag ? "load cache ok" : "load cache error", actionId);
+			}
+		}.execute();
+	}
+
+	/**
+	 * 检测缓存
+	 */
+	private boolean hasCache(Context context, String url) {
+		try {
+			context.openFileInput(encryptMD5(url));
+			return true;
+		} catch (Exception e) {
+			return false;
+		}
+	}
+
+	/**
+	 * 将JSON/XML字符串转为HttpEntity(StringEntity)
+	 * 
+	 * @param params
+	 * @param contentType
+	 * @return
+	 */
+	public static HttpEntity rpcToEntity(String params, String contentType) {
+		StringEntity entity = null;
+		if (!TextUtils.isEmpty(params)) {
+			try {
+				entity = new StringEntity(params, HTTP.UTF_8);
+				entity.setContentType(new BasicHeader(HTTP.CONTENT_TYPE, contentType));
+			} catch (UnsupportedEncodingException e) {
+				e.printStackTrace();
+			}
+		}
+		return entity;
+	}
+
+	/**
+	 * 网络请求+缓存处理
+	 */
+	private class CacheRequestListener implements RequestListener {
+		private Context context = null;
+		private String url = "";
+		private RequestListener requestListener = null;
+		private long lastModified;
+
+		public CacheRequestListener(Context context, String url, RequestListener requestListener, long lastModified) {
+			this.context = context;
+			this.url = url;
+			this.requestListener = requestListener;
+			this.lastModified = lastModified;
+		}
+
+		@Override
+		public void onStart() {
+			if (requestListener != null) {
+				requestListener.onStart();
+			}
+		}
+
+		@Override
+		public void onCompleted(byte[] data, int statusCode, String description, int actionId) {
+			if (requestListener != null) {
+				requestListener.onCompleted(data, statusCode, description, actionId);
+			}
+			if (data != null && statusCode != RequestListener.ERR) {
+				saveCache(context, url, data);
+			}
+		}
+
+		/**
+		 * 保存数据
+		 */
+		private void saveCache(Context context, String url, byte[] data) {
+			try {
+				ByteArrayInputStream inputStream = new ByteArrayInputStream(data);
+				FileOutputStream os = context.openFileOutput(encryptMD5(url), Context.MODE_PRIVATE);
+
+				byte[] buffer = new byte[1024];
+				int len = 0;
+				while ((len = inputStream.read(buffer)) > 0) {
+					os.write(buffer, 0, len);
+				}
+
+				os.close();
+				inputStream.close();
+				saveLastModified();
+
+			} catch (FileNotFoundException e) {
+				e.printStackTrace();
+			} catch (IOException e) {
+				e.printStackTrace();
+			}
+		}
+
+		private void saveLastModified() {
+			context.getSharedPreferences("cachefiles", Context.MODE_PRIVATE).edit()
+					.putLong(encryptMD5(url), lastModified).commit();
+		}
+	}
+
+	/**
+	 * 网络请求处理
+	 */
+	private class HttpRequestListener extends AsyncHttpResponseHandler {
+		private RequestListener requestListener;
+		private int actionId;
+
+		public HttpRequestListener(RequestListener requestListener, int actionId) {
+			this.requestListener = requestListener;
+			this.actionId = actionId;
+		}
+
+		@Override
+		public void onStart() {
+			super.onStart();
+			requestListener.onStart();
+		}
+
+		@Override
+		public void onFinish() {
+			super.onFinish();
+		}
+
+		@Override
+		public void onSuccess(int statusCode, byte[] binaryData) {
+			super.onSuccess(statusCode, binaryData);
+			requestListener.onCompleted(binaryData, RequestListener.OK, "server response ok", actionId);
+		}
+
+		@Override
+		public void onFailure(Throwable error, String content) {
+			super.onFailure(error, content);
+			requestListener.onCompleted(null, RequestListener.ERR, content, actionId);
+		}
+	}
+
+	/**
+	 * 检验网络是否有连接，有则true，无则false
+	 * 
+	 * @param context
+	 * @return
+	 */
+	public static boolean hasNetwork(Context context) {
+		ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+		NetworkInfo ni = cm.getActiveNetworkInfo();
+		if (ni != null && ni.isConnected()) {
+			return true;
+		}
+		return false;
+	}
+
+	/**
+	 * 16位MD5
+	 */
+	public static String encryptMD5(String strInput) {
+		return encryptMD532(strInput).substring(8, 24);
+	}
+
+	public static String encryptMD532(String strInput) {
+		StringBuffer buf = null;
+		try {
+			MessageDigest md = MessageDigest.getInstance("MD5");
+			md.update(strInput.getBytes("UTF-8"));
+			byte b[] = md.digest();
+			buf = new StringBuffer(b.length * 2);
+			for (int i = 0; i < b.length; i++) {
+				if (((int) b[i] & 0xff) < 0x10) { /* & 0xff转换无符号整型 */
+					buf.append("0");
+				}
+				buf.append(Long.toHexString((int) b[i] & 0xff)); // 转换16进制,下方法同
+			}
+		} catch (Exception ex) {
+			ex.printStackTrace();
+		}
+		return buf.toString();
+	}
+
+	/**
+	 * 网址汉字编码
+	 */
+	public static String urlEncode(String str) {
+		StringBuffer buf = new StringBuffer();
+		byte c;
+		byte[] utfBuf;
+		try {
+			utfBuf = str.getBytes("UTF-8");
+		} catch (UnsupportedEncodingException e) {
+			System.out.println("URLEncode: Failed to get UTF-8 bytes from string.");
+			utfBuf = str.getBytes();
+		}
+		for (int i = 0; i < utfBuf.length; i++) {
+			c = utfBuf[i];
+			if ((c >= '0' && c <= '9') || (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')
+					|| (c == '.' || c == '-' || c == '*' || c == '_')
+					|| (c == ':' || c == '/' || c == '=' || c == '?' || c == '&' || c == '%')) {
+				buf.append((char) c);
+			} else {
+				buf.append("%").append(Integer.toHexString((0x000000FF & c)));
+			}
+		}
+		return buf.toString();
+	}
+}
diff --git a/android-app-frame/src/com/app/library/common/manager/SpinnerDialog.java b/android-app-frame/src/com/app/library/common/manager/SpinnerDialog.java
new file mode 100644
index 00000000..ad8d7f9b
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/SpinnerDialog.java
@@ -0,0 +1,93 @@
+package com.app.library.common.manager;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.ListAdapter;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import com.app.library.common.BaseDialog;
+import com.app.library.common.ResourceUtils;
+
+class SpinnerDialog extends BaseDialog {
+	private ListView listView;
+
+	public SpinnerDialog(Context context) {
+		super(context);
+		this.initView();
+	}
+
+	private void initView() {
+		this.listView = (ListView) LayoutInflater.from(getContext()).inflate(
+				ResourceUtils.getLayoutId("app_dialog_spinner_layout"), null);
+		
+		super.setContentLayout(listView);
+	}
+
+	/**
+	 * 设置数据及监听
+	 * 
+	 * @param list
+	 * @param listener
+	 * @return
+	 */
+	public SpinnerDialog init(String data[], final SpinnerListener listener) {
+		List<String> list = new ArrayList<String>();
+		if (data != null && data.length > 0) {
+			list = Arrays.asList(data);
+		}
+		return init(list, listener);
+	}
+
+	/**
+	 * 设置数据及监听
+	 * 
+	 * @param list
+	 * @param listener
+	 * @return
+	 */
+	public SpinnerDialog init(List<String> list, final SpinnerListener listener) {
+		initListView(list, listener);
+		return this;
+	}
+
+	private void initListView(List<String> list, final SpinnerListener listener) {
+		setAdapter(list);
+		listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+			@Override
+			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+				dismiss();
+				String selectedItem = (String) parent.getAdapter().getItem(position);
+				listener.onSelected(position, selectedItem);
+			}
+		});
+	}
+
+	private void setAdapter(List<String> list) {
+		ListAdapter adapter = new SpinnerListAdapter(getContext(), list);
+		listView.setAdapter(adapter);
+	}
+
+	private class SpinnerListAdapter extends ArrayAdapter<String> {
+		public SpinnerListAdapter(Context context, List<String> list) {
+			super(context, 0, list);
+		}
+
+		@Override
+		public View getView(int position, View convertView, ViewGroup parent) {
+			final TextView textView = (TextView) LayoutInflater.from(getContext()).inflate(
+					ResourceUtils.getLayoutId("app_dialog_spinner_item"), null);
+			String item = getItem(position);
+			textView.setText(item);
+			return textView;
+		}
+	}
+}
\ No newline at end of file
diff --git a/android-app-frame/src/com/app/library/common/manager/SpinnerListener.java b/android-app-frame/src/com/app/library/common/manager/SpinnerListener.java
new file mode 100644
index 00000000..e8ded2ca
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/SpinnerListener.java
@@ -0,0 +1,11 @@
+package com.app.library.common.manager;
+
+/**
+ * SpinnerDialog选项监听
+ * 
+ * @author pxw
+ * 
+ */
+public interface SpinnerListener {
+	void onSelected(int position, String selectedItem);
+}
diff --git a/android-app-frame/src/com/app/library/common/manager/UpdateDialog.java b/android-app-frame/src/com/app/library/common/manager/UpdateDialog.java
new file mode 100644
index 00000000..7b14a8b1
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/UpdateDialog.java
@@ -0,0 +1,218 @@
+package com.app.library.common.manager;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.InputStream;
+import java.net.HttpURLConnection;
+import java.net.URL;
+
+import android.content.Context;
+import android.content.DialogInterface;
+import android.os.Environment;
+import android.os.Handler;
+import android.os.Message;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.app.library.LibraryConfig;
+import com.app.library.common.BaseDialog;
+import com.app.library.common.ResourceUtils;
+
+class UpdateDialog extends BaseDialog {
+	private static final String FILE_DIR = "/temp";
+
+	private TextView msgText;
+	private TextView pctText;
+	private ProgressBar pb;
+
+	private String downloadUrl;
+	private File downloadFile;
+	private UpdateListener donwloadListener;
+
+	private DownloadThread thread;
+
+	public UpdateDialog(Context context) {
+		super(context);
+		this.initView();
+	}
+
+	private void initView() {
+		final View layout = LayoutInflater.from(getContext()).inflate(ResourceUtils.getLayoutId("app_dialog_update_layout"), null);
+		msgText = (TextView) layout.findViewById(ResourceUtils.getId("dialog_message"));
+		pctText = (TextView) layout.findViewById(ResourceUtils.getId("pct_message"));
+		pb = (ProgressBar) layout.findViewById(ResourceUtils.getId("pct_progressbar"));
+
+		msgText.setText(LibraryConfig.DOWNLOADING_TEXT);
+		pb.setMax(100);
+		
+		super.setContentLayout(layout);		
+	}
+
+	/**
+	 * 下载处理Handler
+	 */
+	private Handler handler = new Handler() {
+		public void handleMessage(android.os.Message msg) {
+			if (msg.what == UpdateListener.DOWNLOADING) {
+				String pct = (String) msg.obj;
+				if (pct != null) {
+					pctText.setText(pct + "%");
+					pb.setProgress(Integer.parseInt(pct));
+				}
+			} else {
+				dismiss();
+				donwloadListener.onFinish(msg.what);
+			}
+		}
+	};
+
+	/**
+	 * 更新提示
+	 */
+	public void setMessage(CharSequence message) {
+		msgText.setText(message);
+	}
+
+	/**
+	 * 设置下载地址和SD卡保存文件名
+	 * 
+	 * @param url
+	 * @param fileName
+	 */
+	public void setUpdateParams(final String url, final String fileName, final UpdateListener donwloadListener) {
+		this.downloadUrl = url;
+		this.downloadFile = new File(getSdcardFileName(fileName));
+		this.donwloadListener = donwloadListener;
+	}
+
+	/**
+	 * 更新文件路径
+	 */
+	public static String getSdcardFileName(String fileName) {
+		return Environment.getExternalStorageDirectory() + FILE_DIR + "/" + fileName;
+	}
+
+	@Override
+	public void show() {
+		setTitle();
+		thread = new DownloadThread(downloadUrl, downloadFile, handler);
+		setNegativeButton(new DialogInterface.OnClickListener() {
+			@Override
+			public void onClick(DialogInterface dialog, int which) {
+				thread.cancel();
+			}
+		});
+		thread.start();
+		super.show();
+	}
+
+	/**
+	 * 升级文件下载线程
+	 * 
+	 * @author savant-pan
+	 * 
+	 */
+	class DownloadThread extends Thread {
+		private static final int DEFAULT_FILE_LEN = 3500000; // ~3.5M
+		private volatile boolean shutdownRequested = false;
+		private String downladUrl = "";
+		private File downloadFile = null;
+		private Handler downloadHandler = null;
+		private boolean errorOccur = false;// 下载出错标志
+
+		public DownloadThread(String url, File file, Handler handler) {
+			this.downladUrl = url;
+			this.downloadFile = file;
+			this.downloadHandler = handler;
+		}
+
+		@Override
+		public void run() {
+			try {
+				download();
+			} catch (Exception e) {
+				e.printStackTrace();
+				setResult(UpdateListener.DOWNLOAD_ERR, "");
+			}
+		}
+
+		/**
+		 * 下载程序
+		 */
+		private void download() throws Exception {
+			URL url = new URL(downladUrl);
+			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
+			conn.setConnectTimeout(30 * 1000);
+			conn.setRequestProperty("User-agent", "Mozilla/4.0");
+			conn.setRequestProperty("Connection", "Keep-Alive");
+			conn.setRequestProperty("Charset", "UTF-8");
+			conn.setRequestMethod("GET");
+			conn.setRequestProperty("Content-type", "application/vnd.android.package-archive");
+
+			int code = conn.getResponseCode();
+			if (code != 200) {
+				setResult(UpdateListener.DOWNLOAD_ERR, "");
+			} else {
+				if (downloadFile.exists()) { // delete old one
+					downloadFile.delete();
+				}
+				InputStream fin = conn.getInputStream();
+				FileOutputStream fos = new FileOutputStream(downloadFile);
+
+				int total = conn.getContentLength();
+				if (total == -1) { // failed
+					total = DEFAULT_FILE_LEN;
+				}
+				int len = -1;
+				int init = 0;
+				byte buffer[] = new byte[1024];
+				while ((len = fin.read(buffer)) != -1) {
+					fos.write(buffer, 0, len);
+					init += len;
+					String pct = (float) init / (float) total * 100 + "";
+					setResult(UpdateListener.DOWNLOADING, pct.substring(0, pct.indexOf(".")));
+				}
+				fos.flush();
+				fin.close();
+				fos.close();
+				setResult(UpdateListener.DOWNLOAD_OK, "");
+			}
+		}
+
+		/**
+		 * 结果更新
+		 * 
+		 * @param what
+		 * @param pct
+		 */
+		private void setResult(int what, String pct) {
+			Message msg = null;
+			if (!shutdownRequested) {
+				if (what == UpdateListener.DOWNLOADING) {
+					msg = downloadHandler.obtainMessage(what, pct);
+				} else {
+					msg = downloadHandler.obtainMessage(what);
+				}
+			} else {
+				if (!errorOccur) {
+					msg = downloadHandler.obtainMessage(UpdateListener.DOWNLOAD_CANCEL);
+					errorOccur = true;// 标志已出错，避免重复提示失败
+				} else {
+					return;
+				}
+			}
+			downloadHandler.sendMessage(msg);
+		}
+
+		/**
+		 * 取消下载
+		 */
+		public void cancel() {
+			shutdownRequested = true;
+			interrupt();
+		}
+	}
+
+}
\ No newline at end of file
diff --git a/android-app-frame/src/com/app/library/common/manager/UpdateListener.java b/android-app-frame/src/com/app/library/common/manager/UpdateListener.java
new file mode 100644
index 00000000..890eefdf
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/manager/UpdateListener.java
@@ -0,0 +1,34 @@
+package com.app.library.common.manager;
+
+/**
+ * UpdateDialog下载监听接口
+ */
+public interface UpdateListener {
+
+	/**
+	 * 下载已取消
+	 */
+	public static final int DOWNLOAD_CANCEL = -2;
+
+	/**
+	 * 下载失败
+	 */
+	public static final int DOWNLOAD_ERR = -1;
+
+	/**
+	 * 下载成功
+	 */
+	public static final int DOWNLOAD_OK = 0;
+
+	/**
+	 * 正在下载
+	 */
+	public static final int DOWNLOADING = 1;
+
+	/**
+	 * 下载结果提示
+	 * 
+	 * @param code
+	 */
+	public abstract void onFinish(int code);
+}
\ No newline at end of file
diff --git a/android-app-frame/src/com/app/library/common/view/AbsTabIndicateView.java b/android-app-frame/src/com/app/library/common/view/AbsTabIndicateView.java
new file mode 100644
index 00000000..bc8a4afc
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/view/AbsTabIndicateView.java
@@ -0,0 +1,181 @@
+package com.app.library.common.view;
+
+import java.util.List;
+import java.util.Vector;
+
+import android.content.Context;
+import android.os.Handler;
+import android.os.Message;
+import android.util.AttributeSet;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.app.library.common.ResourceUtils;
+
+/**
+ * 切换标签控件基类
+ * 
+ * @author savant-pan
+ * 
+ */
+public abstract class AbsTabIndicateView extends LinearLayout implements View.OnTouchListener {
+	private LinearLayout tabHost;
+	private List<View> viewList = new Vector<View>();
+
+	private int viewCount = 0;
+	private int currentIndex = 0;
+	private OnTabChangeListener onTabChangeListener;
+	private boolean notify = false;
+
+	/**
+	 * 标签切换监听接口
+	 */
+	public interface OnTabChangeListener {
+		public void onTabChanged(int position);
+	}
+
+	public AbsTabIndicateView(Context context) {
+		super(context);
+		this.init();
+	}
+
+	public AbsTabIndicateView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		this.init();
+	}
+
+	private void init() {
+		LayoutInflater.from(getContext()).inflate(ResourceUtils.getLayoutId("app_tab_indicate_abs_layout"), this);
+		this.tabHost = (LinearLayout) findViewById(ResourceUtils.getId("tab_host"));
+	}
+
+	public void setOnTabChangeListener(OnTabChangeListener onTabChangeListener) {
+		if (onTabChangeListener == null) {
+			throw new NullPointerException();
+		}
+		this.onTabChangeListener = onTabChangeListener;
+	}
+
+	protected void setupTabLayout(List<View> list) {
+		if (list == null || list.size() == 0) {
+			throw new NullPointerException();
+		}
+
+		this.viewCount = list.size();
+		final LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		final LayoutParams linelp = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);
+		linelp.gravity = Gravity.CENTER_VERTICAL;
+
+		lp.weight = 1f / viewCount;
+		for (int index = 0; index < viewCount; index++) {
+			final View view = list.get(index);
+			this.tabHost.addView(view, lp);
+			if (index != viewCount - 1) {
+				final View lineView = LayoutInflater.from(getContext()).inflate(
+						ResourceUtils.getLayoutId("app_tab_indicate_abs_line"), null);
+				this.tabHost.addView(lineView, linelp);
+			}
+			view.setOnTouchListener(this);
+			this.viewList.add(view);
+		}
+
+		this.refrash();
+	}
+
+	/**
+	 * 设置当前显示TAB
+	 * 
+	 * @param position
+	 *            前显示TAB位置
+	 */
+	public void setCurrentTab(int position) {
+		this.setCurrentTab(position, true);
+	}
+
+	/**
+	 * 设置当前显示TAB
+	 * 
+	 * @param position
+	 *            前显示TAB位置
+	 * @param notify
+	 *            是否通知接口返回位置
+	 */
+	public void setCurrentTab(int position, boolean notify) {
+		this.notify = notify;
+		this.currentIndex = position;
+		this.refrash();
+	}
+
+	/**
+	 * 事件处理
+	 */
+	@Override
+	public boolean onTouch(View view, MotionEvent event) {
+		final View lastView = this.viewList.get(this.currentIndex);
+		if (lastView != view) {
+			this.setCurrentIndex(view);
+			this.refrash();
+			return false;
+		} else {
+			return true;
+		}
+	}
+
+	/**
+	 * 设置当前 currentIndex值
+	 * 
+	 * @param touchView
+	 */
+	private void setCurrentIndex(View touchView) {
+		for (int index = 0; index < this.viewCount; index++) {// 切换刷新界面
+			final View view = this.viewList.get(index);
+			if (touchView == view) {
+				this.currentIndex = index;
+			}
+		}
+	}
+
+	/**
+	 * 更新条目
+	 */
+	private void refrash() {
+		this.handler.sendEmptyMessage(0);
+	}
+
+	/**
+	 * 界面刷新Handler
+	 */
+	private Handler handler = new Handler() {
+		@Override
+		public void handleMessage(Message msg) {
+			super.handleMessage(msg);
+			for (int index = 0; index < viewCount; index++) {// 切换刷新界面
+				final View view = viewList.get(index);
+				if (index == currentIndex) {
+					refreshItemView(view, true);
+					if (onTabChangeListener != null) {
+						if (!notify) {// use only once
+							notify = true;
+						} else {
+							onTabChangeListener.onTabChanged(index);
+						}
+					}
+				} else {
+					refreshItemView(view, false);
+				}
+			}
+		}
+	};
+
+	/**
+	 * 更新选中项，重写则自定义
+	 * 
+	 * @param view
+	 * @param isLast
+	 */
+	protected abstract void refreshItemView(View view, boolean isCurrent);
+
+}
diff --git a/android-app-frame/src/com/app/library/common/view/AutoScrollIndicateView.java b/android-app-frame/src/com/app/library/common/view/AutoScrollIndicateView.java
new file mode 100644
index 00000000..4ce91756
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/view/AutoScrollIndicateView.java
@@ -0,0 +1,165 @@
+package com.app.library.common.view;
+
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.TimeUnit;
+
+import android.content.Context;
+import android.os.Handler;
+import android.util.AttributeSet;
+
+/**
+ * 自动播放的宣传画控件(间隔播放，自动切换方向，循环）
+ * 
+ * @author savant-pan
+ * 
+ */
+public class AutoScrollIndicateView extends ScrollIndicateView {
+	/**
+	 * 定时服务
+	 */
+	private ScheduledExecutorService scheduler;
+	/**
+	 * 自动播放标志位，默认播放
+	 */
+	private boolean broadcastEnagle = false;
+	/**
+	 * 自动播放启动默认时间
+	 */
+	private static final long DEFAULT_STARTMILS = 3 * 1000;
+	/**
+	 * 自动播放间隔默认时间
+	 */
+	private static final long DEFAULT_INTEVALMILS = 5 * 1000;
+	/**
+	 * 启动时间ms
+	 */
+	private long startMils = DEFAULT_STARTMILS;
+	/**
+	 * 间隔ms
+	 */
+	private long intevalMils = DEFAULT_INTEVALMILS;
+	/**
+	 * 向右
+	 */
+	private final static int RIGHT = 0;
+	/**
+	 * 向左
+	 */
+	private final static int LEFT = 1;
+
+	/**
+	 * 当前方向
+	 */
+	private int direction = RIGHT;
+
+	/**
+	 * 自动播放默认次数（无限）
+	 */
+	private static final int DEFAULT_TIMES = -1;
+
+	/**
+	 * 自动播放次数
+	 */
+	private int broadcastTimes = DEFAULT_TIMES;
+
+	/**
+	 * 自动播放次数记数
+	 */
+	private int timeCount = 0;
+
+	public AutoScrollIndicateView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		this.init();
+	}
+
+	public AutoScrollIndicateView(Context context) {
+		super(context);
+		this.init();
+	}
+
+	private void init() {
+		this.init();
+		this.scheduler = Executors.newScheduledThreadPool(1);
+	}
+
+	/**
+	 * 设置自动播放启动时间和间隔
+	 * 
+	 * @param startMils
+	 *            启动时间ms(默认为8s)
+	 * @param intevelMils
+	 *            间隔ms(默认为3s)
+	 */
+	public void setBroadcastTimeIntevel(long startMils, long intevelMils) {
+		this.startMils = startMils;
+		this.intevalMils = intevelMils;
+	}
+
+	/**
+	 * 设置自动播放开关
+	 * 
+	 * @param flag
+	 *            打开或关闭
+	 */
+	public void setBroadcastEnable(boolean flag) {
+		this.broadcastEnagle = flag;
+	}
+
+	/**
+	 * 设置循环播放次数
+	 * 
+	 * @param times
+	 *            循环播放次数
+	 */
+	public void setBroadCastTimes(int times) {
+		this.broadcastTimes = times;
+	}
+
+	@Override
+	public void show() {
+		super.show();
+		// 定时播放服务
+		this.scheduler.scheduleAtFixedRate(new Runnable() {
+			@Override
+			public void run() {
+				if (broadcastEnagle) {
+					if (System.currentTimeMillis() - getRefreshTime() < 5 * 1000) {// 最近一次划动间隔小于5s
+						return;
+					}
+					if ((broadcastTimes != DEFAULT_TIMES) && (timeCount > broadcastTimes)) {// 循环次数用完
+						return;
+					}
+					broadcastHandler.sendEmptyMessage(0);
+				}
+			}
+		}, this.startMils, this.intevalMils, TimeUnit.MILLISECONDS);
+	}
+
+	/**
+	 * 循环播放
+	 */
+	private Handler broadcastHandler = new Handler() {
+		public void handleMessage(android.os.Message msg) {
+			if (direction == RIGHT) {// roll right
+				if (getCurrentIndex() < getTotalCount()) {
+					if (getCurrentIndex() == getTotalCount() - 1) {
+						timeCount++;// 循环次数次数加1
+						direction = LEFT;
+					} else {
+						getViewPager().setCurrentItem(getCurrentIndex() + 1, true);
+					}
+				}
+			} else {// roll left
+				if (getCurrentIndex() >= 0) {
+					if (getCurrentIndex() == 0) {
+						direction = RIGHT;
+					} else {
+						getViewPager().setCurrentItem(getCurrentIndex() - 1, true);
+					}
+				}
+			}
+		}
+	};
+
+}
diff --git a/android-app-frame/src/com/app/library/common/view/ScrollIndicateView.java b/android-app-frame/src/com/app/library/common/view/ScrollIndicateView.java
new file mode 100644
index 00000000..58f81c24
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/view/ScrollIndicateView.java
@@ -0,0 +1,468 @@
+package com.app.library.common.view;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import android.content.Context;
+import android.os.Handler;
+import android.os.Parcelable;
+import android.support.v4.view.PagerAdapter;
+import android.support.v4.view.ViewPager;
+import android.support.v4.view.ViewPager.OnPageChangeListener;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ImageView.ScaleType;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+
+import com.app.library.common.ResourceUtils;
+
+/**
+ * 用户指引,宣传画控件(类似于Gallery效果)
+ * 
+ * @author savant-pan
+ * 
+ */
+public class ScrollIndicateView extends RelativeLayout {
+	/**
+	 * ViewPager控件
+	 */
+	private ViewPager viewPager;
+	/**
+	 * 指示器容器
+	 */
+	private LinearLayout indicateLayout;
+
+	/**
+	 * 向左划箭头
+	 */
+	private Button leftButton;
+
+	/**
+	 * 向右划箭头
+	 */
+	private Button rightButton;
+
+	/**
+	 * 页面列表
+	 */
+	private List<View> viewList = new ArrayList<View>();
+	/**
+	 * 滑动位置通知回调监听对象
+	 */
+	private OnAdvertiseChangeListener onAdvertiseChangeListener;
+
+	/**
+	 * 单个界面点击回调监听对象
+	 */
+	private OnAdvertiseClickListener onAdvertiseClickListener;
+	/**
+	 * 总页面条数
+	 */
+	private int totelCount = 0;
+	/**
+	 * 当前页索引
+	 */
+	private int currentIndex = 0;
+
+	/**
+	 * 圆形列表+箭头提示器
+	 */
+	public static final int INDICATOR_ARROW_ROUND_STYLE = 0;
+
+	/**
+	 * 操作导引提示器
+	 */
+	public static final int INDICATOR_USERGUIDE_STYLE = 1;
+
+	/**
+	 * INDICATOR样式
+	 */
+	private int indicatorStyle = INDICATOR_ARROW_ROUND_STYLE;
+
+	/**
+	 * 最近一次划动时间
+	 */
+	private long refreshTime = 0l;
+
+	/**
+	 * 广告位置监听接口
+	 */
+	public interface OnAdvertiseChangeListener {
+		void onPosition(int position, int totalCount);
+	}
+
+	/**
+	 * 条目点击事件监听接口
+	 */
+	public interface OnAdvertiseClickListener {
+		void OnItemClick(View view, int position);
+	}
+
+	public ScrollIndicateView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		this.init(context);
+	}
+
+	public ScrollIndicateView(Context context) {
+		super(context);
+		this.init(context);
+	}
+
+	/**
+	 * @param context
+	 */
+	private void init(Context context) {
+		LayoutInflater.from(context).inflate(ResourceUtils.getLayoutId("app_scroll_indicate_layout"), this);
+		this.viewPager = (ViewPager) findViewById(ResourceUtils.getId("view_pager"));
+		this.indicateLayout = (LinearLayout) findViewById(ResourceUtils.getId("indicater_layout"));
+		this.leftButton = (Button) findViewById(ResourceUtils.getId("R.id.left_button"));
+		this.rightButton = (Button) findViewById(ResourceUtils.getId("R.id.right_button"));
+
+		this.leftButton.setVisibility(View.GONE);
+		this.rightButton.setVisibility(View.GONE);
+
+		this.viewPager.setOnPageChangeListener(new PageChangeListener());
+
+		final ArrowClickListener arrowClickListener = new ArrowClickListener();
+		this.leftButton.setOnClickListener(arrowClickListener);
+		this.rightButton.setOnClickListener(arrowClickListener);
+	}
+
+	/**
+	 * 取ViewPager实例
+	 * 
+	 * @return
+	 */
+	protected ViewPager getViewPager() {
+		return viewPager;
+	}
+
+	/**
+	 * 取当前位置Index值
+	 */
+	protected int getCurrentIndex() {
+		return this.currentIndex;
+	}
+
+	/**
+	 * 取总VIEW数目
+	 */
+	protected int getTotalCount() {
+		return this.totelCount;
+	}
+
+	/**
+	 * 取最近一次刷新时间
+	 */
+	protected long getRefreshTime() {
+		return this.refreshTime;
+	}
+
+	/**
+	 * 添加单个View
+	 * 
+	 * @param view
+	 */
+	public void addViewItem(View view) {
+		final int position = viewList.size();
+		view.setOnClickListener(new ItemClickListener(position));
+		this.viewList.add(view);
+	}
+
+	/**
+	 * 条目点击事件监听类
+	 */
+	private class ItemClickListener implements View.OnClickListener {
+		private int position = 0;
+
+		public ItemClickListener(int position) {
+			this.position = position;
+		}
+
+		@Override
+		public void onClick(View view) {
+			if (onAdvertiseClickListener != null) {
+				onAdvertiseClickListener.OnItemClick(view, position);
+			}
+		}
+	}
+
+	/**
+	 * 设置显示图片Drawable数组
+	 * 
+	 * @param resArray
+	 *            Drawable数组
+	 */
+	public void setupLayoutByDrawable(final Integer resArray[]) {
+		if (resArray == null)
+			throw new NullPointerException();
+
+		this.setupLayoutByDrawable(Arrays.asList(resArray));
+	}
+
+	/**
+	 * 设置显示图片Drawable列表
+	 * 
+	 * @param resList
+	 *            Drawable列表
+	 */
+	public void setupLayoutByDrawable(final List<Integer> resList) {
+		if (resList == null)
+			throw new NullPointerException();
+
+		final int len = resList.size();
+		if (len > 0) {
+			for (int index = 0; index < len; index++) {
+				final View pageItem = new ImageView(getContext());
+				pageItem.setBackgroundResource(resList.get(index));
+				addViewItem(pageItem);
+			}
+		}
+	}
+
+	/**
+	 * 设置显示图片URL列表
+	 * 
+	 * @param urlList
+	 *            URL列表
+	 */
+	public void setupLayoutByImageUrl(final List<String> urlList) {
+		if (urlList == null)
+			throw new NullPointerException();
+
+		final int len = urlList.size();
+		if (len > 0) {
+			for (int index = 0; index < len; index++) {
+				final WebImageView pageItem = new WebImageView(getContext());
+				pageItem.setScaleType(ScaleType.FIT_XY);
+				pageItem.setURLAsync(urlList.get(index));
+				addViewItem(pageItem);
+			}
+		}
+	}
+
+	/**
+	 * 设置当前显示项
+	 * 
+	 * @param index
+	 *            postion
+	 */
+	public void setCurrentItem(int index) {
+		this.currentIndex = index;
+	}
+
+	/**
+	 * 设置指示器样式，默认为INDICATOR_ARROW_ROUND_STYLE
+	 * 
+	 * @param style
+	 *            INDICATOR_USERGUIDE_STYLE或INDICATOR_ARROW_ROUND_STYLE
+	 */
+	public void setIndicatorStyle(int style) {
+		this.indicatorStyle = style;
+	}
+
+	/**
+	 * 添加位置监听回调
+	 * 
+	 * @param onGuideListener
+	 */
+	public void setOnAdvertiseChangeListener(OnAdvertiseChangeListener onGuideListener) {
+		if (onGuideListener == null) {
+			throw new NullPointerException();
+		}
+		this.onAdvertiseChangeListener = onGuideListener;
+	}
+
+	/**
+	 * 设置条目点击监听对象
+	 * 
+	 * @param onItemClickListener
+	 */
+	public void setOnAdvertiseClickListener(OnAdvertiseClickListener onAdvertiseClickListener) {
+		this.onAdvertiseClickListener = onAdvertiseClickListener;
+	}
+
+	/**
+	 * 显示
+	 */
+	public void show() {
+		this.totelCount = viewList.size();
+		final LayoutParams params = (LayoutParams) indicateLayout.getLayoutParams();
+		if (INDICATOR_USERGUIDE_STYLE == this.indicatorStyle) {// 操作指引
+			params.bottomMargin = 45;
+		}
+		this.indicateLayout.setLayoutParams(params);
+		// 初始化指示器
+		for (int index = 0; index < this.totelCount; index++) {
+			final View indicater = new ImageView(getContext());
+			this.indicateLayout.addView(indicater, index);
+		}
+		this.refreshHandler.sendEmptyMessage(currentIndex);
+		// 为ViewPager配置数据
+		this.viewPager.setAdapter(new MyPagerAdapter(this.viewList));
+		this.viewPager.setCurrentItem(currentIndex, false);
+	}
+
+	/**
+	 * 箭头点击事件处理
+	 */
+	private class ArrowClickListener implements View.OnClickListener {
+		@Override
+		public void onClick(View view) {
+			if (view == leftButton) {
+				if (currentIndex >= (totelCount - 1)) {
+					return;
+				} else {
+					viewPager.setCurrentItem(currentIndex + 1, true);
+				}
+			} else {
+				if (totelCount <= 0) {
+					return;
+				} else {
+					viewPager.setCurrentItem(currentIndex - 1, true);
+				}
+			}
+		}
+	}
+
+	/**
+	 * 页面变更监听
+	 */
+	private class PageChangeListener implements OnPageChangeListener {
+		@Override
+		public void onPageSelected(int index) {
+			currentIndex = index;
+			refreshHandler.sendEmptyMessage(index);
+		}
+
+		@Override
+		public void onPageScrolled(int arg0, float arg1, int arg2) {
+		}
+
+		@Override
+		public void onPageScrollStateChanged(int arg0) {
+
+		}
+	}
+
+	/**
+	 * Refresh Handler
+	 */
+	private Handler refreshHandler = new Handler() {
+		public void handleMessage(android.os.Message msg) {
+			refreshIndicateView();
+		}
+	};
+
+	/**
+	 * 刷新提示器
+	 */
+	private synchronized void refreshIndicateView() {
+		this.refreshTime = System.currentTimeMillis();
+
+		for (int index = 0; index < totelCount; index++) {
+			final ImageView imageView = (ImageView) this.indicateLayout.getChildAt(index);
+			if (this.currentIndex == index) {
+				imageView.setBackgroundResource(ResourceUtils.getDrawableId("app_advertise_indicate_focus"));
+			} else {
+				imageView.setBackgroundResource(ResourceUtils.getDrawableId("app_advertise_indicate"));
+			}
+		}
+
+		if (INDICATOR_USERGUIDE_STYLE == this.indicatorStyle) {// 操作指引不显示箭头
+			this.leftButton.setVisibility(View.GONE);
+			this.rightButton.setVisibility(View.GONE);
+		} else {// 显示箭头各状态
+			if (totelCount <= 1) {
+				leftButton.setVisibility(View.GONE);
+				rightButton.setVisibility(View.GONE);
+			} else if (totelCount == 2) {
+				if (currentIndex == 0) {
+					leftButton.setVisibility(View.VISIBLE);
+					rightButton.setVisibility(View.GONE);
+				} else {
+					leftButton.setVisibility(View.GONE);
+					rightButton.setVisibility(View.VISIBLE);
+				}
+			} else {
+				if (currentIndex == 0) {
+					leftButton.setVisibility(View.VISIBLE);
+					rightButton.setVisibility(View.GONE);
+				} else if (currentIndex == (totelCount - 1)) {
+					leftButton.setVisibility(View.GONE);
+					rightButton.setVisibility(View.VISIBLE);
+				} else {
+					leftButton.setVisibility(View.VISIBLE);
+					rightButton.setVisibility(View.VISIBLE);
+				}
+			}
+		}
+		if (this.onAdvertiseChangeListener != null) {// 页面改更了
+			try {
+				this.onAdvertiseChangeListener.onPosition(this.currentIndex, this.totelCount);
+			} catch (Exception e) {
+				e.printStackTrace();
+			}
+		}
+	}
+
+	public class MyPagerAdapter extends PagerAdapter {
+		private List<View> pageViews = new ArrayList<View>();
+
+		public MyPagerAdapter(List<View> pageViews) {
+			this.pageViews = pageViews;
+		}
+
+		@Override
+		public int getCount() {
+			return pageViews.size();
+		}
+
+		@Override
+		public boolean isViewFromObject(View arg0, Object arg1) {
+			return arg0 == arg1;
+		}
+
+		@Override
+		public int getItemPosition(Object object) {
+			return super.getItemPosition(object);
+		}
+
+		@Override
+		public void destroyItem(View arg0, int arg1, Object arg2) {
+			((ViewPager) arg0).removeView(pageViews.get(arg1));
+		}
+
+		@Override
+		public Object instantiateItem(View arg0, int arg1) {
+			((ViewPager) arg0).addView(pageViews.get(arg1));
+			return pageViews.get(arg1);
+		}
+
+		@Override
+		public void restoreState(Parcelable arg0, ClassLoader arg1) {
+
+		}
+
+		@Override
+		public Parcelable saveState() {
+			return null;
+		}
+
+		@Override
+		public void startUpdate(View arg0) {
+
+		}
+
+		@Override
+		public void finishUpdate(View arg0) {
+
+		}
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/view/TextTabIndicateView.java b/android-app-frame/src/com/app/library/common/view/TextTabIndicateView.java
new file mode 100644
index 00000000..c2147fac
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/view/TextTabIndicateView.java
@@ -0,0 +1,85 @@
+package com.app.library.common.view;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.TextView;
+
+import com.app.library.common.ResourceUtils;
+
+/**
+ * 文字标签控件
+ * 
+ * @author savant-pan
+ * 
+ */
+public class TextTabIndicateView extends AbsTabIndicateView implements View.OnTouchListener {
+
+	public TextTabIndicateView(Context context) {
+		super(context);
+	}
+
+	public TextTabIndicateView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	/**
+	 * 设置文字标签数据
+	 * 
+	 * @param titleArray
+	 *            文字标签数组
+	 */
+	public void setupLayout(String titleArray[]) {
+		if (titleArray == null || titleArray.length == 0) {
+			throw new NullPointerException();
+		}
+
+		this.setupLayout(Arrays.asList(titleArray));
+	}
+
+	/**
+	 * 设置文字标签数据
+	 * 
+	 * @param titleList
+	 *            文字标签列表
+	 */
+	public void setupLayout(List<String> textList) {
+		if (textList == null || textList.size() == 0) {
+			throw new NullPointerException();
+		}
+
+		final int len = textList.size();
+
+		final List<View> list = new ArrayList<View>();
+		for (int index = 0; index < len; index++) {
+			final View view = LayoutInflater.from(getContext()).inflate(
+					ResourceUtils.getLayoutId("app_tab_indicate_text_item"), null);
+			final TextView textView = (TextView) view.findViewById(ResourceUtils.getId("indicator_text"));
+			textView.setText(textList.get(index));
+			list.add(view);
+		}
+
+		super.setupTabLayout(list);
+	}
+
+	@Override
+	protected void refreshItemView(View view, boolean isCurrent) {
+		final View line = view.findViewById(ResourceUtils.getId("bottom_line"));
+		final TextView textView = (TextView) view.findViewById(ResourceUtils.getId("indicator_text"));
+		final Resources resources = getContext().getResources();
+		if (isCurrent) {
+			textView.setTextColor(resources.getColor(ResourceUtils.getColorId("frame")));
+			line.setVisibility(View.VISIBLE);
+		} else {
+			textView.setTextColor(resources.getColor(ResourceUtils.getColorId("title")));
+			line.setVisibility(View.INVISIBLE);
+		}
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/view/ViewPagerIndacateView.java b/android-app-frame/src/com/app/library/common/view/ViewPagerIndacateView.java
new file mode 100644
index 00000000..ad0010ce
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/view/ViewPagerIndacateView.java
@@ -0,0 +1,133 @@
+package com.app.library.common.view;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.Map.Entry;
+
+import android.content.Context;
+import android.support.v4.view.PagerAdapter;
+import android.support.v4.view.ViewPager;
+import android.support.v4.view.ViewPager.OnPageChangeListener;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.app.library.common.view.AbsTabIndicateView.OnTabChangeListener;
+
+/**
+ * 文字切换标签+ViewPager内容区控件
+ * 
+ * @author savant-pan
+ * 
+ */
+public class ViewPagerIndacateView extends LinearLayout implements OnTabChangeListener, OnPageChangeListener {
+	private TextTabIndicateView textTabIndicateView;
+	private ViewPager viewPager;
+
+	public ViewPagerIndacateView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		this.initView();
+	}
+
+	public ViewPagerIndacateView(Context context) {
+		super(context);
+		this.initView();
+	}
+
+	private void initView() {
+		this.setOrientation(LinearLayout.VERTICAL);
+
+		this.textTabIndicateView = new TextTabIndicateView(getContext());
+		this.viewPager = new ViewPager(getContext());
+
+		LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+		this.addView(textTabIndicateView, params);
+		params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
+		this.addView(viewPager, params);
+
+		this.textTabIndicateView.setOnTabChangeListener(this);
+		this.viewPager.setOnPageChangeListener(this);
+
+	}
+
+	/**
+	 * 设置显示标签文字及对应内容布局
+	 * 
+	 * @param titleViewMap
+	 *            标题及对应View map数据
+	 */
+	public void setupLayout(Map<String, View> titleViewMap) {
+		if (titleViewMap == null || titleViewMap.size() == 0) {
+			throw new NullPointerException();
+		}
+
+		final List<String> textList = new ArrayList<String>();
+		final List<View> viewList = new ArrayList<View>();
+
+		final Iterator<Entry<String, View>> iterator = titleViewMap.entrySet().iterator();
+		while (iterator.hasNext()) {// 生成数据列表
+			final Entry<String, View> item = iterator.next();
+			textList.add(item.getKey());
+			viewList.add(item.getValue());
+		}
+
+		// 初始化TextTabIndicateView及ViewPager
+		this.textTabIndicateView.setupLayout(textList);
+		this.viewPager.setAdapter(new MyPagerAdapter(viewList));
+	}
+
+	@Override
+	public void onTabChanged(int position) {
+		viewPager.setCurrentItem(position, true);
+	}
+
+	@Override
+	public void onPageSelected(int position) {
+		this.textTabIndicateView.setCurrentTab(position, false);// 无回设置TextTabIndicateView
+	}
+
+	private class MyPagerAdapter extends PagerAdapter {
+		private List<View> viewList = new ArrayList<View>();
+
+		public MyPagerAdapter(List<View> viewList) {
+			this.viewList = viewList;
+		}
+
+		@Override
+		public int getCount() {
+			return viewList.size();
+		}
+
+		@Override
+		public boolean isViewFromObject(View arg0, Object arg1) {
+			return arg0 == arg1;
+		}
+
+		@Override
+		public void destroyItem(View arg0, int arg1, Object arg2) {
+			Log.i("voice", arg1 + "----------------destroyItem");
+			((ViewPager) arg0).removeView(viewList.get(arg1));
+		}
+
+		@Override
+		public Object instantiateItem(View arg0, int arg1) {
+			Log.i("voice", arg1 + "----------------instantiateItem");
+			((ViewPager) arg0).addView(viewList.get(arg1));
+			return viewList.get(arg1);
+		}
+	}
+
+	@Override
+	public void onPageScrollStateChanged(int arg0) {
+
+	}
+
+	@Override
+	public void onPageScrolled(int arg0, float arg1, int arg2) {
+
+	}
+
+}
diff --git a/android-app-frame/src/com/app/library/common/view/WebImageView.java b/android-app-frame/src/com/app/library/common/view/WebImageView.java
new file mode 100644
index 00000000..8a949171
--- /dev/null
+++ b/android-app-frame/src/com/app/library/common/view/WebImageView.java
@@ -0,0 +1,214 @@
+package com.app.library.common.view;
+
+import java.util.HashMap;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.BitmapFactory.Options;
+import android.text.TextUtils;
+import android.util.AttributeSet;
+import android.webkit.WebSettings;
+import android.widget.ImageView;
+
+import com.allthelucky.common.RequestListener;
+import com.allthelucky.common.RequestManager;
+
+/**
+ * ImageView with a network image RequestManager
+ * 
+ * @author savant-pan
+ */
+public class WebImageView extends ImageView {
+	private static final int DEFAULT_DRAWABLE = -1;
+	private static final int DEFAULT_SAMPLE_SIZE = 1;
+
+	private int defaultDrawable = DEFAULT_DRAWABLE;
+	private int sampleSize = DEFAULT_SAMPLE_SIZE;
+	private String imageUrl = "";
+	private boolean hasRetry = false;
+
+	/**
+	 * @param context
+	 */
+	public WebImageView(Context context) {
+		this(context, null);
+	}
+
+	/**
+	 * @param context
+	 * @param attrs
+	 */
+	public WebImageView(Context context, AttributeSet attrs) {
+		this(context, attrs, 0);
+	}
+
+	/**
+	 * @param context
+	 * @param attrs
+	 * @param defStyle
+	 */
+	public WebImageView(Context context, AttributeSet attrs, int defStyle) {
+		super(context, attrs, defStyle);
+	}
+
+	/**
+	 * set a url
+	 * 
+	 * @param url
+	 *            network resource address
+	 */
+	public void setURLAsync(String url) {
+		this.setURLAsync(url, DEFAULT_DRAWABLE);
+	}
+
+	/**
+	 * set a url and default drawable
+	 * 
+	 * @param url
+	 *            network resource address
+	 * @param defaultImage
+	 *            drawable id
+	 */
+	public void setURLAsync(String url, int defaultDrawable) {
+		this.setURLAsync(url, defaultDrawable, DEFAULT_SAMPLE_SIZE);
+	}
+
+	/**
+	 * set a url and default drawable
+	 * 
+	 * @param url
+	 *            network resource address
+	 * @param defaultImage
+	 *            drawable id
+	 * @param sampleSize
+	 *            sample for Options
+	 */
+	public void setURLAsync(String url, int defaultDrawable, int sampleSize) {
+		this.imageUrl = url;
+		this.defaultDrawable = defaultDrawable;
+		this.sampleSize = sampleSize;
+		this.firstLoad();
+	}
+
+	/**
+	 * first load image
+	 */
+	private void firstLoad() {
+		this.loadResource(WebSettings.LOAD_CACHE_ELSE_NETWORK);
+	}
+
+	/**
+	 * retry cache when failed first time
+	 */
+	private void retryCache() {
+		this.loadResource(WebSettings.LOAD_CACHE_ONLY);
+	}
+
+	private void loadResource(int cacheMode) {
+		if (TextUtils.isEmpty(imageUrl)) {
+			this.setDefaultImage();
+		} else {
+			RequestManager.getInstance().get(getContext(), imageUrl, requestListener, true, 0);
+		}
+	}
+
+	/**
+	 * load callback for RequestManager
+	 */
+	private RequestListener requestListener = new RequestListener() {
+
+		@Override
+		public void onStart() {
+
+		}
+
+		@Override
+		public void onCompleted(byte[] data, int statusCode, String description, int actionId) {
+			if (RequestListener.ERR == statusCode) {
+				if (!hasRetry) {
+					hasRetry = true;
+					retryCache();
+				} else {
+					setDefaultImage();
+				}
+			} else {
+				setResult(data);
+			}
+		}
+
+		private void setResult(byte[] data) {
+			Bitmap bitmap = WebImageBuffer.get(imageUrl);
+			if (null != bitmap) {
+				setImageBitmap(bitmap);
+			} else {
+				if (null != data) {
+					BitmapFactory.Options options = new Options();
+					options.inDither = false;
+					options.inPreferredConfig = null;
+					options.inSampleSize = sampleSize;
+					options.inPreferredConfig = Bitmap.Config.RGB_565;
+					options.inJustDecodeBounds = false;
+					bitmap = BitmapFactory.decodeByteArray(data, 0, data.length, options);
+					if (bitmap != null) {
+						setImageBitmap(bitmap);
+						WebImageBuffer.put(imageUrl, bitmap);
+					} else {
+						setDefaultImage();
+					}
+				} else {
+					setDefaultImage();
+				}
+			}
+		}
+	};
+
+	/**
+	 * set default drawable
+	 */
+	public void setDefaultImage() {
+		if (defaultDrawable != -1) {
+			setImageDrawable(getResources().getDrawable(defaultDrawable));
+		}
+	}
+
+	/**
+	 * reset WebImageBuffer
+	 */
+	public static void resetWebImageBuffer() {
+		WebImageBuffer.clear();
+	}
+
+	/**
+	 * WebImageBuffer for WebImageView
+	 */
+	public static class WebImageBuffer {
+		private final static HashMap<String, Bitmap> caches = new HashMap<String, Bitmap>();
+
+		public synchronized static void clear() {
+			try {
+				caches.clear();
+			} catch (Exception e) {
+				e.printStackTrace();
+			}
+		}
+
+		public synchronized static Bitmap get(String url) {
+			try {
+				return caches.get(url);
+			} catch (Exception e) {
+				e.printStackTrace();
+				return null;
+			}
+		}
+
+		public synchronized static void put(String url, Bitmap bitmap) {
+			try {
+				caches.put(url, bitmap);
+			} catch (Exception e) {
+				e.printStackTrace();
+			}
+		}
+	}
+
+}
