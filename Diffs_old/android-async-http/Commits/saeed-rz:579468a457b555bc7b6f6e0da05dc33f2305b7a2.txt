diff --git a/build.gradle b/build.gradle
index 2a500d66..9e17ccfe 100755
--- a/build.gradle
+++ b/build.gradle
@@ -1,10 +1,13 @@
 buildscript {
     repositories {
+        jcenter()
         mavenCentral()
+        google()
+
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.3.1'
+        classpath 'com.android.tools.build:gradle:3.4.1'
     }
 }
 
@@ -19,6 +22,8 @@ allprojects {
     repositories {
         mavenLocal()
         mavenCentral()
+        google()
+
     }
 
     tasks.withType(JavaCompile) {
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 3af41f22..606898b4 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Jul 31 10:35:35 CEST 2015
+#Fri Jul 12 02:01:07 PDT 2019
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.1.1-all.zip
diff --git a/library/build.gradle b/library/build.gradle
index d9b0f506..f1b1a2d8 100755
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -2,7 +2,6 @@ apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.3'
 
     defaultConfig {
         minSdkVersion 9
@@ -17,11 +16,6 @@ android {
         showAll true
         disable 'OldTargetApi'
     }
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_6
-        targetCompatibility JavaVersion.VERSION_1_6
-    }
 }
 
 dependencies {
diff --git a/library/src/main/java/com/loopj/android/http/RequestParams.java b/library/src/main/java/com/loopj/android/http/RequestParams.java
index cade5be6..911b5d66 100755
--- a/library/src/main/java/com/loopj/android/http/RequestParams.java
+++ b/library/src/main/java/com/loopj/android/http/RequestParams.java
@@ -33,7 +33,8 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.Set;
-import java.util.concurrent.ConcurrentSkipList;
+import java.util.concurrent.ConcurrentSkipListMap;
+//import java.util.concurrent.ConcurrentSkipList;
 
 import cz.msebera.android.httpclient.HttpEntity;
 import cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity;
@@ -99,11 +100,11 @@
             "application/json";
 
     protected final static String LOG_TAG = "RequestParams";
-    protected final ConcurrentSkipList<String, String> urlParams = new ConcurrentSkipList<String, String>();
-    protected final ConcurrentSkipList<String, StreamWrapper> streamParams = new ConcurrentSkipList<String, StreamWrapper>();
-    protected final ConcurrentSkipList<String, FileWrapper> fileParams = new ConcurrentSkipList<String, FileWrapper>();
-    protected final ConcurrentSkipList<String, List<FileWrapper>> fileArrayParams = new ConcurrentSkipList<String, List<FileWrapper>>();
-    protected final ConcurrentSkipList<String, Object> urlParamsWithObjects = new ConcurrentSkipList<String, Object>();
+    protected final ConcurrentSkipListMap<String, String> urlParams = new ConcurrentSkipListMap<String, String>();
+    protected final ConcurrentSkipListMap<String, StreamWrapper> streamParams = new ConcurrentSkipListMap<String, StreamWrapper>();
+    protected final ConcurrentSkipListMap<String, FileWrapper> fileParams = new ConcurrentSkipListMap<String, FileWrapper>();
+    protected final ConcurrentSkipListMap<String, List<FileWrapper>> fileArrayParams = new ConcurrentSkipListMap<String, List<FileWrapper>>();
+    protected final ConcurrentSkipListMap<String, Object> urlParamsWithObjects = new ConcurrentSkipListMap<String, Object>();
     protected boolean isRepeatable;
     protected boolean forceMultipartEntity = false;
     protected boolean useJsonStreamer;
@@ -425,7 +426,7 @@ public boolean has(String key) {
     @Override
     public String toString() {
         StringBuilder result = new StringBuilder();
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, String> entry : urlParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -434,7 +435,7 @@ public String toString() {
             result.append(entry.getValue());
         }
 
-        for (ConcurrentSkipList.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -443,7 +444,7 @@ public String toString() {
             result.append("STREAM");
         }
 
-        for (ConcurrentSkipList.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -452,7 +453,7 @@ public String toString() {
             result.append("FILE");
         }
 
-        for (ConcurrentSkipList.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
             if (result.length() > 0)
                 result.append("&");
 
@@ -530,22 +531,22 @@ private HttpEntity createJsonStreamerEntity(ResponseHandlerInterface progressHan
                 elapsedFieldInJsonStreamer);
 
         // Add string params
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, String> entry : urlParams.entrySet()) {
             entity.addPart(entry.getKey(), entry.getValue());
         }
 
         // Add non-string params
-        for (ConcurrentSkipList.Entry<String, Object> entry : urlParamsWithObjects.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, Object> entry : urlParamsWithObjects.entrySet()) {
             entity.addPart(entry.getKey(), entry.getValue());
         }
 
         // Add file params
-        for (ConcurrentSkipList.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             entity.addPart(entry.getKey(), entry.getValue());
         }
 
         // Add stream params
-        for (ConcurrentSkipList.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
             StreamWrapper stream = entry.getValue();
             if (stream.inputStream != null) {
                 entity.addPart(entry.getKey(),
@@ -575,7 +576,7 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
         entity.setIsRepeatable(isRepeatable);
 
         // Add string params
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, String> entry : urlParams.entrySet()) {
             entity.addPartWithCharset(entry.getKey(), entry.getValue(), contentEncoding);
         }
 
@@ -586,7 +587,7 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
         }
 
         // Add stream params
-        for (ConcurrentSkipList.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, StreamWrapper> entry : streamParams.entrySet()) {
             StreamWrapper stream = entry.getValue();
             if (stream.inputStream != null) {
                 entity.addPart(entry.getKey(), stream.name, stream.inputStream,
@@ -595,13 +596,13 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
         }
 
         // Add file params
-        for (ConcurrentSkipList.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, FileWrapper> entry : fileParams.entrySet()) {
             FileWrapper fileWrapper = entry.getValue();
             entity.addPart(entry.getKey(), fileWrapper.file, fileWrapper.contentType, fileWrapper.customFileName);
         }
 
         // Add file collection
-        for (ConcurrentSkipList.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, List<FileWrapper>> entry : fileArrayParams.entrySet()) {
             List<FileWrapper> fileWrapper = entry.getValue();
             for (FileWrapper fw : fileWrapper) {
                 entity.addPart(entry.getKey(), fw.file, fw.contentType, fw.customFileName);
@@ -614,7 +615,7 @@ private HttpEntity createMultipartEntity(ResponseHandlerInterface progressHandle
     protected List<BasicNameValuePair> getParamsList() {
         List<BasicNameValuePair> lparams = new LinkedList<BasicNameValuePair>();
 
-        for (ConcurrentSkipList.Entry<String, String> entry : urlParams.entrySet()) {
+        for (ConcurrentSkipListMap.Entry<String, String> entry : urlParams.entrySet()) {
             lparams.add(new BasicNameValuePair(entry.getKey(), entry.getValue()));
         }
 
diff --git a/sample/build.gradle b/sample/build.gradle
index 7f31e48d..c598988b 100755
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -9,26 +9,31 @@ repositories {
 
 android {
     compileSdkVersion 23
-    buildToolsVersion '23.0.3'
 
     defaultConfig {
         minSdkVersion 9
         targetSdkVersion 23
     }
 
+    flavorDimensions "version"
     productFlavors {
         standard {
+            dimension "version"
+            minSdkVersion 9
+            targetSdkVersion 23
+
         }
         withLeakCanary {
+            dimension "version"
             minSdkVersion 9
             targetSdkVersion 23
         }
     }
 
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_7
-        targetCompatibility JavaVersion.VERSION_1_7
-    }
+//    compileOptions {
+//        sourceCompatibility 'JavaVersion.VERSION_1_7'
+//        targetCompatibility 'JavaVersion.VERSION_1_7'
+//    }
 
     lintOptions {
         xmlReport false
@@ -49,5 +54,5 @@ dependencies {
     compile 'com.fasterxml.jackson.core:jackson-databind:2.5.3'
     compile project(':library')
     // LeakCanary
-    withLeakCanaryCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
+    withLeakCanaryImplementation 'com.squareup.leakcanary:leakcanary-android:1.3.1'
 }
