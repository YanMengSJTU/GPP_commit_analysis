diff --git a/project.properties b/project.properties
index 1880987e..0e58ae1c 100644
--- a/project.properties
+++ b/project.properties
@@ -9,4 +9,4 @@
 
 android.library=true
 # Project target.
-target=android-3
+target=android-17
diff --git a/src/com/loopj/android/http/AsyncHttpRequest.java b/src/com/loopj/android/http/AsyncHttpRequest.java
index 8a86348a..133398d4 100644
--- a/src/com/loopj/android/http/AsyncHttpRequest.java
+++ b/src/com/loopj/android/http/AsyncHttpRequest.java
@@ -19,6 +19,8 @@
 package com.loopj.android.http;
 
 import java.io.IOException;
+import java.net.SocketException;
+import java.net.SocketTimeoutException;
 import java.net.UnknownHostException;
 
 import org.apache.http.HttpResponse;
@@ -87,6 +89,12 @@ private void makeRequestWithRetries() throws IOException {
                     // (to assist in genuine cases of unknown host) which seems better than outright failure
                     cause = new IOException("UnknownHostException exception: " + e.getMessage());
                     retry = (executionCount > 0) && retryHandler.retryRequest(cause, ++executionCount, context);
+                } catch ( SocketException e ) {
+                    cause = new IOException("UnknownHostException exception: " + e.getMessage());
+                    retry = retryHandler.retryRequest(cause, ++executionCount, context);
+                } catch (SocketTimeoutException e) {
+                    cause = new IOException("SocketTimeoutException exception: " + e.getMessage());
+                    retry = retryHandler.retryRequest(cause, ++executionCount, context);
                 } catch (IOException e) {
                     cause = e;
                     retry = retryHandler.retryRequest(cause, ++executionCount, context);
