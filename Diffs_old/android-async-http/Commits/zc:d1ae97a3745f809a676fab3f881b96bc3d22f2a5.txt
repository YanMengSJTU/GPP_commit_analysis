diff --git a/src/com/loopj/android/http/FriendlyHttpResponseHandler.java b/src/com/loopj/android/http/FriendlyHttpResponseHandler.java
index 9277557a..8804758a 100644
--- a/src/com/loopj/android/http/FriendlyHttpResponseHandler.java
+++ b/src/com/loopj/android/http/FriendlyHttpResponseHandler.java
@@ -4,8 +4,8 @@
  dispatches to appropriate success and failure handlers.
 
  Also, default error handlers provide noisy error messages to users by default,
- rather than doing nothing.  eg., if the server goes down, pop up a Toast saying
- as much rather than calling an empty error handler.
+ rather than doing nothing.  eg., if the server goes down, pop up a dialog
+ saying as much rather than calling an empty error handler.
 
  */
 
@@ -18,9 +18,9 @@
 import org.json.JSONObject;
 import org.json.JSONTokener;
 
+import android.app.AlertDialog;
 import android.content.Context;
-
-import android.widget.Toast;
+import android.content.DialogInterface;
 
 public class FriendlyHttpResponseHandler extends
         com.loopj.android.http.AsyncHttpResponseHandler {
@@ -35,9 +35,19 @@ public FriendlyHttpResponseHandler(Context startContext) {
     @Override
     public void onFailure(Throwable e) {
         String errorDescription = "An unknown error occurred.";
-        Toast toast = Toast.makeText(context, errorDescription,
-                Toast.LENGTH_SHORT);
-        toast.show();
+        AlertDialog.Builder builder = new AlertDialog.Builder(
+            context);
+        builder.setTitle("Alert");
+        builder.setMessage(errorDescription);
+        builder.setPositiveButton("OK",
+            new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog,
+                        int which) {
+                    dialog.dismiss();
+                }
+            });
+        builder.create().show();
     }
 
     public void onFailure(Throwable e, JSONObject errorResponse) {
@@ -49,23 +59,53 @@ public void onFailure(Throwable e, JSONObject errorResponse) {
         } catch (JSONException e1) {
             e1.printStackTrace();
         }
-        Toast toast = Toast.makeText(context, errorDescription,
-                Toast.LENGTH_SHORT);
-        toast.show();
+        AlertDialog.Builder builder = new AlertDialog.Builder(
+            context);
+        builder.setTitle("Alert");
+        builder.setMessage(errorDescription);
+        builder.setPositiveButton("OK",
+            new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog,
+                        int which) {
+                    dialog.dismiss();
+                }
+            });
+        builder.create().show();
     }
 
     @Override
     public void onFailure(Throwable e, String errorResponse) {
-        Toast toast = Toast
-                .makeText(context, errorResponse, Toast.LENGTH_SHORT);
-        toast.show();
+        AlertDialog.Builder builder = new AlertDialog.Builder(
+            context);
+        builder.setTitle("Alert");
+        builder.setMessage(errorResponse);
+        builder.setPositiveButton("OK",
+            new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog,
+                        int which) {
+                    dialog.dismiss();
+                }
+            });
+        builder.create().show();
     }
 
     public void onFailure(Throwable e, JSONArray errorResponse) {
         String errorDescription = "An unknown error occurred.";
-        Toast toast = Toast.makeText(context, errorDescription,
-                Toast.LENGTH_SHORT);
-        toast.show();
+        AlertDialog.Builder builder = new AlertDialog.Builder(
+            context);
+        builder.setTitle("Alert");
+        builder.setMessage(errorDescription);
+        builder.setPositiveButton("OK",
+            new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog,
+                        int which) {
+                    dialog.dismiss();
+                }
+            });
+        builder.create().show();
     }
 
     public void onSuccess(JSONObject response) {
@@ -161,3 +201,4 @@ protected Object parseResponse(String responseBody) throws JSONException {
         return result;
     }
 }
+
