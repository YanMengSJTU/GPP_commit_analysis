diff --git a/EventBus/src/org/greenrobot/eventbus/support/JavaFxUiThreadPoster.java b/EventBus/src/org/greenrobot/eventbus/support/JavaFxUiThreadPoster.java
index 1620f091..d2715ec3 100644
--- a/EventBus/src/org/greenrobot/eventbus/support/JavaFxUiThreadPoster.java
+++ b/EventBus/src/org/greenrobot/eventbus/support/JavaFxUiThreadPoster.java
@@ -7,6 +7,7 @@
 
 public class JavaFxUiThreadPoster implements Poster {
     private final EventBus eventBus;
+    private final Object wait = new Object();
 
     JavaFxUiThreadPoster(EventBus eventBus) {
         this.eventBus = eventBus;
@@ -14,6 +15,25 @@
 
     @Override
     public void enqueue(final Subscription subscription, final Object event) {
-        Platform.runLater(() -> eventBus.invokeSubscriber(subscription, event));
+        if (Platform.isFxApplicationThread())
+            eventBus.invokeSubscriber(subscription, event);
+        else
+            invokeInJavaFxThread(subscription, event);
+    }
+
+    private synchronized void invokeInJavaFxThread(Subscription subscription, Object event) {
+        Platform.runLater(() -> {
+            eventBus.invokeSubscriber(subscription, event);
+            synchronized (wait) {
+                wait.notify();
+            }
+        });
+
+        try {
+            synchronized (wait) {
+                wait.wait();
+            }
+        } catch (InterruptedException ignored) {
+        }
     }
 }
diff --git a/EventBus/src/org/greenrobot/eventbus/support/SwingUiThreadPoster.java b/EventBus/src/org/greenrobot/eventbus/support/SwingUiThreadPoster.java
index 32f444cc..b7ec708b 100644
--- a/EventBus/src/org/greenrobot/eventbus/support/SwingUiThreadPoster.java
+++ b/EventBus/src/org/greenrobot/eventbus/support/SwingUiThreadPoster.java
@@ -5,6 +5,7 @@
 import org.greenrobot.eventbus.Subscription;
 
 import javax.swing.*;
+import java.lang.reflect.InvocationTargetException;
 
 public class SwingUiThreadPoster implements Poster {
     private final EventBus eventBus;
@@ -14,6 +15,9 @@
     }
 
     public void enqueue(final Subscription subscription, final Object event) {
-        SwingUtilities.invokeLater(() -> eventBus.invokeSubscriber(subscription, event));
+        try {
+            SwingUtilities.invokeAndWait(() -> eventBus.invokeSubscriber(subscription, event));
+        } catch (InterruptedException | InvocationTargetException ignored) {
+        }
     }
 }
