diff --git a/EventBusPerformance/build.gradle b/EventBusPerformance/build.gradle
index fa9029dc..53180e6e 100644
--- a/EventBusPerformance/build.gradle
+++ b/EventBusPerformance/build.gradle
@@ -4,7 +4,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.0'
+        classpath 'com.android.tools.build:gradle:2.2.1'
         classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
     }
 }
diff --git a/EventBusTest/build.gradle b/EventBusTest/build.gradle
index bb877369..a1d04468 100644
--- a/EventBusTest/build.gradle
+++ b/EventBusTest/build.gradle
@@ -4,7 +4,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.0'
+        classpath 'com.android.tools.build:gradle:2.2.1'
         classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
     }
 }
diff --git a/README.md b/README.md
index 21975d0a..1f193bd9 100644
--- a/README.md
+++ b/README.md
@@ -22,30 +22,39 @@ EventBus in 3 steps
 1. Define events:
 
     ```java  
-public class MessageEvent { /* Additional fields if needed */ }
-```
+    public static class MessageEvent { /* Additional fields if needed */ }
+    ```
 
 2. Prepare subscribers:
-    Register your subscriber (in your onCreate or in a constructor):  
-
-   ```java
-eventBus.register(this);
-```
-
-    Declare your subscribing method:  
+    Declare and annotate your subscribing method, optionally specify a [thread mode](http://greenrobot.org/eventbus/documentation/delivery-threads-threadmode/):  
 
     ```java
-@Subscribe  
-public void onEvent(AnyEventType event) {/* Do something */};
-```
+    @Subscribe(threadMode = ThreadMode.MAIN)  
+    public void onMessageEvent(MessageEvent event) {/* Do something */};
+    ```
+    Register and unregister your subscriber. For example on Android, activities and fragments should usually register according to their life cycle:
+
+   ```java
+    @Override
+    public void onStart() {
+        super.onStart();
+        EventBus.getDefault().register(this);
+    }
+ 
+    @Override
+    public void onStop() {
+        super.onStop();
+        EventBus.getDefault().unregister(this);
+    }
+    ```
 
 3. Post events:
 
    ```java
-eventBus.post(event);
-```
+    EventBus.getDefault().post(new MessageEvent());
+    ```
 
-This [getting started guide](http://greenrobot.org/eventbus/documentation/how-to-get-started/) shows these 3 steps in more detail.
+**Read the full [getting started guide](http://greenrobot.org/eventbus/documentation/how-to-get-started/).**
 
 Add EventBus to your project
 ----------------------------
diff --git a/build.gradle b/build.gradle
index d0f0925f..9c519b5c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -7,5 +7,5 @@ if (JavaVersion.current().isJava8Compatible()) {
 }
 
 task wrapper(type: Wrapper) {
-    gradleVersion = '2.14'
+    gradleVersion = '2.14.1'
 }
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index f3b61425..4fde35c7 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
