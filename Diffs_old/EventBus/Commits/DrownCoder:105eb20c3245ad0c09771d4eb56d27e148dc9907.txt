diff --git a/EventBus/src/org/greenrobot/eventbus/BackgroundPoster.java b/EventBus/src/org/greenrobot/eventbus/BackgroundPoster.java
index 95bf02a0..54a75f84 100644
--- a/EventBus/src/org/greenrobot/eventbus/BackgroundPoster.java
+++ b/EventBus/src/org/greenrobot/eventbus/BackgroundPoster.java
@@ -56,6 +56,7 @@ public void run() {
                     if (pendingPost == null) {
                         synchronized (this) {
                             // Check again, this time in synchronized
+                            //消费者生产者模型
                             pendingPost = queue.poll();
                             if (pendingPost == null) {
                                 executorRunning = false;
diff --git a/EventBus/src/org/greenrobot/eventbus/EventBus.java b/EventBus/src/org/greenrobot/eventbus/EventBus.java
index ef7d6f83..e9560219 100644
--- a/EventBus/src/org/greenrobot/eventbus/EventBus.java
+++ b/EventBus/src/org/greenrobot/eventbus/EventBus.java
@@ -268,12 +268,13 @@ public synchronized void unregister(Object subscriber) {
 
     /** Posts the given event to the event bus. */
     public void post(Object event) {
+        //ThreadLocal保存的，不同的线程互相不干扰
         PostingThreadState postingState = currentPostingThreadState.get();
         List<Object> eventQueue = postingState.eventQueue;
         // 将事件添加进当前线程的事件队列
         eventQueue.add(event);
 
-        if (!postingState.isPosting) {
+        if (!postingState.isPosting) {//如果当前线程正在发送
             postingState.isMainThread = isMainThread();
             postingState.isPosting = true;
             if (postingState.canceled) {
@@ -281,7 +282,7 @@ public void post(Object event) {
             }
             try {
                 while (!eventQueue.isEmpty()) {
-                    //发送消息
+                    //循环从队首取消息，发送消息
                     postSingleEvent(eventQueue.remove(0), postingState);
                 }
             } finally {
diff --git a/EventBus/src/org/greenrobot/eventbus/PendingPostQueue.java b/EventBus/src/org/greenrobot/eventbus/PendingPostQueue.java
index 55db529a..475ad5f4 100644
--- a/EventBus/src/org/greenrobot/eventbus/PendingPostQueue.java
+++ b/EventBus/src/org/greenrobot/eventbus/PendingPostQueue.java
@@ -32,6 +32,7 @@ synchronized void enqueue(PendingPost pendingPost) {
         } else {
             throw new IllegalStateException("Head present, but no tail");
         }
+        //释放锁
         notifyAll();
     }
 
@@ -48,6 +49,7 @@ synchronized PendingPost poll() {
 
     synchronized PendingPost poll(int maxMillisToWait) throws InterruptedException {
         if (head == null) {
+            //等待锁
             wait(maxMillisToWait);
         }
         return poll();
