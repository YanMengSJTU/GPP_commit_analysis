diff --git a/EventBus/src/de/greenrobot/event/EventBus.java b/EventBus/src/de/greenrobot/event/EventBus.java
index 057f8b42..1747e001 100644
--- a/EventBus/src/de/greenrobot/event/EventBus.java
+++ b/EventBus/src/de/greenrobot/event/EventBus.java
@@ -126,6 +126,27 @@ public void configureLogSubscriberExceptions(boolean logSubscriberExceptions) {
         this.logSubscriberExceptions = logSubscriberExceptions;
     }
 
+    /**
+     * Registers a subscriber with "downcasting" argument type to eventType.
+     */
+    public final synchronized void register(Object subscriber, Class eventType) {
+        Class<?> subscriberClass = subscriber.getClass();
+        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(
+                subscriberClass,  DEFAULT_METHOD_NAME);
+        for (SubscriberMethod subscriberMethod : subscriberMethods) {
+            if (Object.class == subscriberMethod.eventType) {
+                subscribe(subscriber,
+                        new SubscriberMethod(
+                                subscriberMethod.method,
+                                subscriberMethod.threadMode,
+                                eventType),
+                        false, 0);
+            } else {
+                throw new IllegalArgumentException("Handling method of subscriber should get Object");
+            }
+        }
+    }
+
     /**
      * Registers the given subscriber to receive events. Subscribers must call {@link #unregister(Object)} once they are
      * no longer interested in receiving events.
