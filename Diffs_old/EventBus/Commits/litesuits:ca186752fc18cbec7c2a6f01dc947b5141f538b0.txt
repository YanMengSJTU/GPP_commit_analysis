diff --git a/EventBus/libs/android-support-v4.jar b/EventBus/libs/android-support-v4.jar
deleted file mode 100644
index 6080877d..00000000
Binary files a/EventBus/libs/android-support-v4.jar and /dev/null differ
diff --git a/EventBus/src/de/greenrobot/event/util/AsyncExecutor.java b/EventBus/src/de/greenrobot/event/util/AsyncExecutor.java
index 38e8a7bf..2a99fef2 100644
--- a/EventBus/src/de/greenrobot/event/util/AsyncExecutor.java
+++ b/EventBus/src/de/greenrobot/event/util/AsyncExecutor.java
@@ -15,14 +15,14 @@
  */
 package de.greenrobot.event.util;
 
-import java.lang.reflect.Constructor;
-import java.util.concurrent.Executor;
-import java.util.concurrent.Executors;
-
 import android.app.Activity;
 import android.util.Log;
 import de.greenrobot.event.EventBus;
 
+import java.lang.reflect.Constructor;
+import java.util.concurrent.Executor;
+import java.util.concurrent.Executors;
+
 /**
  * Executes an {@link RunnableEx} using a thread pool. Thrown exceptions are propagated by posting failure events of any
  * given type (default is {@link ThrowableFailureEvent}).
diff --git a/EventBus/src/de/greenrobot/event/util/ErrorDialogFragmentFactory.java b/EventBus/src/de/greenrobot/event/util/ErrorDialogFragmentFactory.java
deleted file mode 100644
index cc36f185..00000000
--- a/EventBus/src/de/greenrobot/event/util/ErrorDialogFragmentFactory.java
+++ /dev/null
@@ -1,101 +0,0 @@
-package de.greenrobot.event.util;
-
-import android.annotation.TargetApi;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-
-/**
- * Factory to allow injecting a more complex exception mapping; typically you would subclass one of {@link Honeycomb} or
- * {@link Support}.
- */
-public abstract class ErrorDialogFragmentFactory<T> {
-    protected final ErrorDialogConfig config;
-
-    protected ErrorDialogFragmentFactory(ErrorDialogConfig config) {
-        this.config = config;
-    }
-
-    /**
-     * Prepares the fragment's arguments and creates the fragment. May be overridden to provide custom error fragments.
-     * 
-     * @param argumentsForErrorDialog
-     * @param finishAfterDialog
-     */
-    protected T prepareErrorFragment(ThrowableFailureEvent event, boolean finishAfterDialog,
-            Bundle argumentsForErrorDialog) {
-        if (event.isSuppressErrorUi()) {
-            // Show nothing by default
-            return null;
-        }
-        Bundle bundle;
-        if (argumentsForErrorDialog != null) {
-            bundle = (Bundle) argumentsForErrorDialog.clone();
-        } else {
-            bundle = new Bundle();
-        }
-
-        if (!bundle.containsKey(ErrorDialogManager.KEY_TITLE)) {
-            String title = getTitleFor(event, bundle);
-            bundle.putString(ErrorDialogManager.KEY_TITLE, title);
-        }
-        if (!bundle.containsKey(ErrorDialogManager.KEY_MESSAGE)) {
-            String message = getMessageFor(event, bundle);
-            bundle.putString(ErrorDialogManager.KEY_MESSAGE, message);
-        }
-        if (!bundle.containsKey(ErrorDialogManager.KEY_FINISH_AFTER_DIALOG)) {
-            bundle.putBoolean(ErrorDialogManager.KEY_FINISH_AFTER_DIALOG, finishAfterDialog);
-        }
-        if (!bundle.containsKey(ErrorDialogManager.KEY_EVENT_TYPE_ON_CLOSE)
-                && config.defaultEventTypeOnDialogClosed != null) {
-            bundle.putSerializable(ErrorDialogManager.KEY_EVENT_TYPE_ON_CLOSE, config.defaultEventTypeOnDialogClosed);
-        }
-        if (!bundle.containsKey(ErrorDialogManager.KEY_ICON_ID) && config.defaultDialogIconId != 0) {
-            bundle.putInt(ErrorDialogManager.KEY_ICON_ID, config.defaultDialogIconId);
-        }
-        return createErrorFragment(event, bundle);
-    }
-
-    /** Returns either a new Honeycomb+ or a new support library DialogFragment. */
-    protected abstract T createErrorFragment(ThrowableFailureEvent event, Bundle arguments);
-
-    /** May be overridden to provide custom error title. */
-    protected String getTitleFor(ThrowableFailureEvent event, Bundle arguments) {
-        return config.resources.getString(config.defaultTitleId);
-    }
-
-    /** May be overridden to provide custom error messages. */
-    protected String getMessageFor(ThrowableFailureEvent event, Bundle arguments) {
-        int msgResId = config.getMessageIdForThrowable(event.throwable);
-        return config.resources.getString(msgResId);
-    }
-
-    public static class Support extends ErrorDialogFragmentFactory<Fragment> {
-
-        public Support(ErrorDialogConfig config) {
-            super(config);
-        }
-
-        protected Fragment createErrorFragment(ThrowableFailureEvent event, Bundle arguments) {
-            ErrorDialogFragments.Support errorFragment = new ErrorDialogFragments.Support();
-            errorFragment.setArguments(arguments);
-            return errorFragment;
-        }
-
-    }
-
-    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public static class Honeycomb extends ErrorDialogFragmentFactory<android.app.Fragment> {
-
-        public Honeycomb(ErrorDialogConfig config) {
-            super(config);
-        }
-
-        protected android.app.Fragment createErrorFragment(ThrowableFailureEvent event, Bundle arguments) {
-            ErrorDialogFragments.Honeycomb errorFragment = new ErrorDialogFragments.Honeycomb();
-            errorFragment.setArguments(arguments);
-            return errorFragment;
-        }
-
-    }
-}
\ No newline at end of file
diff --git a/EventBus/src/de/greenrobot/event/util/ErrorDialogFragments.java b/EventBus/src/de/greenrobot/event/util/ErrorDialogFragments.java
deleted file mode 100644
index 04002df2..00000000
--- a/EventBus/src/de/greenrobot/event/util/ErrorDialogFragments.java
+++ /dev/null
@@ -1,74 +0,0 @@
-package de.greenrobot.event.util;
-
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.DialogInterface.OnClickListener;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-import de.greenrobot.event.EventBus;
-
-public class ErrorDialogFragments {
-    /** TODO Use config:  Icon res ID to use for all error dialogs. May be configured by each app (optional). */
-    public static int ERROR_DIALOG_ICON = 0;
-
-    /** TODO Use config:  Event class to be fired on dismissing the dialog by the user. May be configured by each app. */
-    public static Class<?> EVENT_TYPE_ON_CLICK;
-
-    public static Dialog createDialog(Context context, Bundle arguments, OnClickListener onClickListener) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(context);
-        builder.setTitle(arguments.getString(ErrorDialogManager.KEY_TITLE));
-        builder.setMessage(arguments.getString(ErrorDialogManager.KEY_MESSAGE));
-        if (ERROR_DIALOG_ICON != 0) {
-            builder.setIcon(ERROR_DIALOG_ICON);
-        }
-        builder.setPositiveButton(android.R.string.ok, onClickListener);
-        return builder.create();
-    }
-
-    public static void handleOnClick(DialogInterface dialog, int which, Activity activity, Bundle arguments) {
-        if (EVENT_TYPE_ON_CLICK != null) {
-            Object event;
-            try {
-                event = EVENT_TYPE_ON_CLICK.newInstance();
-            } catch (Exception e) {
-                throw new RuntimeException("Event cannot be constructed", e);
-            }
-            EventBus eventBus = ErrorDialogManager.factory.config.getEventBus();
-            eventBus.post(event);
-        }
-        boolean finish = arguments.getBoolean(ErrorDialogManager.KEY_FINISH_AFTER_DIALOG, false);
-        if (finish && activity != null) {
-            activity.finish();
-        }
-    }
-
-    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public static class Honeycomb extends android.app.DialogFragment implements OnClickListener {
-        @Override
-        public Dialog onCreateDialog(Bundle savedInstanceState) {
-            return createDialog(getActivity(), getArguments(), this);
-        }
-
-        @Override
-        public void onClick(DialogInterface dialog, int which) {
-            handleOnClick(dialog, which, getActivity(), getArguments());
-        }
-    }
-
-    public static class Support extends DialogFragment implements OnClickListener {
-        @Override
-        public Dialog onCreateDialog(Bundle savedInstanceState) {
-            return createDialog(getActivity(), getArguments(), this);
-        }
-
-        @Override
-        public void onClick(DialogInterface dialog, int which) {
-            handleOnClick(dialog, which, getActivity(), getArguments());
-        }
-    }
-}
diff --git a/EventBus/src/de/greenrobot/event/util/ErrorDialogManager.java b/EventBus/src/de/greenrobot/event/util/ErrorDialogManager.java
deleted file mode 100644
index 910668d7..00000000
--- a/EventBus/src/de/greenrobot/event/util/ErrorDialogManager.java
+++ /dev/null
@@ -1,245 +0,0 @@
-package de.greenrobot.event.util;
-
-import android.annotation.TargetApi;
-import android.app.Activity;
-import android.app.Application;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.v4.app.DialogFragment;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentActivity;
-import android.support.v4.app.FragmentManager;
-import android.util.Log;
-import de.greenrobot.event.EventBus;
-
-/**
- * Central class for app that want to use event based error dialogs.<br/>
- * <br/>
- * How to use:
- * <ol>
- * <li>Set the {@link #factory} to configure dialogs for your app, typically in {@link Application#onCreate()}</li>
- * <li>Use one of {@link #attachTo(Activity)}, {@link #attachTo(Activity, boolean)} or
- * {@link #attachTo(Activity, boolean, Bundle)} in your Activity, typically in onCreate.</li>
- * </ol>
- * 
- * For more complex mappings, you can supply your own {@link ErrorDialogFragmentFactory}.
- * 
- * @author Markus
- */
-public class ErrorDialogManager {
-
-    public static class SupportManagerFragment extends Fragment {
-        protected boolean finishAfterDialog;
-        protected Bundle argumentsForErrorDialog;
-        private EventBus eventBus;
-        private boolean skipRegisterOnNextResume;
-        private Object executionScope;
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-            eventBus = ErrorDialogManager.factory.config.getEventBus();
-            eventBus.register(this);
-            skipRegisterOnNextResume = true;
-        }
-
-        @Override
-        public void onResume() {
-            super.onResume();
-            if (skipRegisterOnNextResume) {
-                // registered in onCreate, skip registration in this run
-                skipRegisterOnNextResume = false;
-            } else {
-                eventBus = ErrorDialogManager.factory.config.getEventBus();
-                eventBus.register(this);
-            }
-        }
-
-        @Override
-        public void onPause() {
-            eventBus.unregister(this);
-            super.onPause();
-        }
-
-        public void onEventMainThread(ThrowableFailureEvent event) {
-            if (!isInExecutionScope(executionScope, event)) {
-                return;
-            }
-            checkLogException(event);
-            // Execute pending commits before finding to avoid multiple error fragments being shown
-            FragmentManager fm = getFragmentManager();
-            fm.executePendingTransactions();
-
-            DialogFragment existingFragment = (DialogFragment) fm.findFragmentByTag(TAG_ERROR_DIALOG);
-            if (existingFragment != null) {
-                // Just show the latest error
-                existingFragment.dismiss();
-            }
-
-            android.support.v4.app.DialogFragment errorFragment = (android.support.v4.app.DialogFragment) factory
-                    .prepareErrorFragment(event, finishAfterDialog, argumentsForErrorDialog);
-            if (errorFragment != null) {
-                errorFragment.show(fm, TAG_ERROR_DIALOG);
-            }
-        }
-
-        public static void attachTo(Activity activity, Object executionScope, boolean finishAfterDialog,
-                Bundle argumentsForErrorDialog) {
-            FragmentManager fm = ((FragmentActivity) activity).getSupportFragmentManager();
-            SupportManagerFragment fragment = (SupportManagerFragment) fm.findFragmentByTag(TAG_ERROR_DIALOG_MANAGER);
-            if (fragment == null) {
-                fragment = new SupportManagerFragment();
-                fm.beginTransaction().add(fragment, TAG_ERROR_DIALOG_MANAGER).commit();
-                fm.executePendingTransactions();
-            }
-            fragment.finishAfterDialog = finishAfterDialog;
-            fragment.argumentsForErrorDialog = argumentsForErrorDialog;
-            fragment.executionScope = executionScope;
-        }
-    }
-
-    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public static class HoneycombManagerFragment extends android.app.Fragment {
-        protected boolean finishAfterDialog;
-        protected Bundle argumentsForErrorDialog;
-        private EventBus eventBus;
-        private Object executionScope;
-
-        @Override
-        public void onResume() {
-            super.onResume();
-            eventBus = ErrorDialogManager.factory.config.getEventBus();
-            eventBus.register(this);
-        }
-
-        @Override
-        public void onPause() {
-            eventBus.unregister(this);
-            super.onPause();
-        }
-
-        public void onEventMainThread(ThrowableFailureEvent event) {
-            if (!isInExecutionScope(executionScope, event)) {
-                return;
-            }
-            checkLogException(event);
-
-            // Execute pending commits before finding to avoid multiple error fragments being shown
-            android.app.FragmentManager fm = getFragmentManager();
-            fm.executePendingTransactions();
-
-            android.app.DialogFragment existingFragment = (android.app.DialogFragment) fm
-                    .findFragmentByTag(TAG_ERROR_DIALOG);
-            if (existingFragment != null) {
-                // Just show the latest error
-                existingFragment.dismiss();
-            }
-
-            android.app.DialogFragment errorFragment = (android.app.DialogFragment) factory.prepareErrorFragment(event,
-                    finishAfterDialog, argumentsForErrorDialog);
-            if (errorFragment != null) {
-                errorFragment.show(fm, TAG_ERROR_DIALOG);
-            }
-        }
-
-        public static void attachTo(Activity activity, Object executionScope, boolean finishAfterDialog, Bundle argumentsForErrorDialog) {
-            android.app.FragmentManager fm = activity.getFragmentManager();
-            HoneycombManagerFragment fragment = (HoneycombManagerFragment) fm
-                    .findFragmentByTag(TAG_ERROR_DIALOG_MANAGER);
-            if (fragment == null) {
-                fragment = new HoneycombManagerFragment();
-                fm.beginTransaction().add(fragment, TAG_ERROR_DIALOG_MANAGER).commit();
-                fm.executePendingTransactions();
-            }
-            fragment.finishAfterDialog = finishAfterDialog;
-            fragment.argumentsForErrorDialog = argumentsForErrorDialog;
-            fragment.executionScope = executionScope;
-        }
-    }
-
-    /** Must be set by the application. */
-    public static ErrorDialogFragmentFactory<?> factory;
-
-    protected static final String TAG_ERROR_DIALOG = "de.greenrobot.eventbus.error_dialog";
-    protected static final String TAG_ERROR_DIALOG_MANAGER = "de.greenrobot.eventbus.error_dialog_manager";
-
-    public static final String KEY_TITLE = "de.greenrobot.eventbus.errordialog.title";
-    public static final String KEY_MESSAGE = "de.greenrobot.eventbus.errordialog.message";
-    public static final String KEY_FINISH_AFTER_DIALOG = "de.greenrobot.eventbus.errordialog.finish_after_dialog";
-    public static final String KEY_ICON_ID = "de.greenrobot.eventbus.errordialog.icon_id";
-    public static final String KEY_EVENT_TYPE_ON_CLOSE = "de.greenrobot.eventbus.errordialog.event_type_on_close";
-
-    /** Scope is limited to the activity's class. */
-    public static void attachTo(Activity activity) {
-        attachTo(activity, false, null);
-    }
-
-    /** Scope is limited to the activity's class. */
-    public static void attachTo(Activity activity, boolean finishAfterDialog) {
-        attachTo(activity, finishAfterDialog, null);
-    }
-
-    /** Scope is limited to the activity's class. */
-    public static void attachTo(Activity activity, boolean finishAfterDialog, Bundle argumentsForErrorDialog) {
-        Object executionScope = activity.getClass();
-        attachTo(activity, executionScope, finishAfterDialog, argumentsForErrorDialog);
-    }
-    
-    public static void attachTo(Activity activity, Object executionScope, boolean finishAfterDialog, Bundle argumentsForErrorDialog) {
-        if (factory == null) {
-            throw new RuntimeException("You must set the static factory field to configure error dialogs for your app.");
-        }
-        if (isSupportActivity(activity)) {
-            SupportManagerFragment.attachTo(activity, executionScope, finishAfterDialog, argumentsForErrorDialog);
-        } else {
-            HoneycombManagerFragment.attachTo(activity, executionScope, finishAfterDialog, argumentsForErrorDialog);
-        }
-    }
-
-    private static boolean isSupportActivity(Activity activity) {
-        boolean isSupport = false;
-        for (Class<?> c = activity.getClass().getSuperclass();; c = c.getSuperclass()) {
-            if (c == null) {
-                throw new RuntimeException("Illegal activity type: " + activity.getClass());
-            }
-            String name = c.getName();
-            if (name.equals("android.support.v4.app.FragmentActivity")) {
-                isSupport = true;
-                break;
-            } else if (name.startsWith("com.actionbarsherlock.app")
-                    && (name.endsWith(".SherlockActivity") || name.endsWith(".SherlockListActivity") || name
-                            .endsWith(".SherlockPreferenceActivity"))) {
-                throw new RuntimeException("Please use SherlockFragmentActivity. Illegal activity: " + name);
-            } else if (name.equals("android.app.Activity")) {
-                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
-                    throw new RuntimeException(
-                            "Illegal activity without fragment support. Either use Android 3.0+ or android.support.v4.app.FragmentActivity.");
-                }
-                break;
-            }
-        }
-        return isSupport;
-    }
-
-    protected static void checkLogException(ThrowableFailureEvent event) {
-        if (factory.config.logExceptions) {
-            String tag = factory.config.tagForLoggingExceptions;
-            if (tag == null) {
-                tag = EventBus.TAG;
-            }
-            Log.i(tag, "Error dialog manager received exception", event.throwable);
-        }
-    }
-
-    private static boolean isInExecutionScope(Object executionScope, ThrowableFailureEvent event) {
-        if (executionScope != null && event instanceof HasExecutionScope) {
-            Object eventExecutionScope = ((HasExecutionScope) event).getExecutionScope();
-            if (eventExecutionScope != null && !eventExecutionScope.equals(executionScope)) {
-                // Event not in our scope, do nothing
-                return false;
-            }
-        }
-        return true;
-    }
-
-}
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/AsyncPoster.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/AsyncPoster.class
new file mode 100644
index 00000000..35dd90f3
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/AsyncPoster.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/BackgroundPoster.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/BackgroundPoster.class
new file mode 100644
index 00000000..be56ea85
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/BackgroundPoster.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/BuildConfig.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/BuildConfig.class
new file mode 100644
index 00000000..24eca83c
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/BuildConfig.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$1.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$1.class
new file mode 100644
index 00000000..39f0dccf
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$1.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$2.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$2.class
new file mode 100644
index 00000000..70a86de5
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$2.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$PostCallback.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$PostCallback.class
new file mode 100644
index 00000000..58178bee
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$PostCallback.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$PostingThreadState.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$PostingThreadState.class
new file mode 100644
index 00000000..fa836c73
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus$PostingThreadState.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus.class
new file mode 100644
index 00000000..842f8978
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBus.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBusException.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBusException.class
new file mode 100644
index 00000000..ea7f0156
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/EventBusException.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/HandlerPoster.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/HandlerPoster.class
new file mode 100644
index 00000000..250d7ca9
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/HandlerPoster.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/NoSubscriberEvent.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/NoSubscriberEvent.class
new file mode 100644
index 00000000..eea38b9d
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/NoSubscriberEvent.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/PendingPost.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/PendingPost.class
new file mode 100644
index 00000000..b24b2a42
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/PendingPost.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/PendingPostQueue.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/PendingPostQueue.class
new file mode 100644
index 00000000..a90b384b
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/PendingPostQueue.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberExceptionEvent.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberExceptionEvent.class
new file mode 100644
index 00000000..25ececd7
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberExceptionEvent.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberMethod.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberMethod.class
new file mode 100644
index 00000000..fee5b4e0
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberMethod.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberMethodFinder.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberMethodFinder.class
new file mode 100644
index 00000000..201bc0b8
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/SubscriberMethodFinder.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/Subscription.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/Subscription.class
new file mode 100644
index 00000000..55524182
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/Subscription.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/ThreadMode.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/ThreadMode.class
new file mode 100644
index 00000000..bfda61d9
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/ThreadMode.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$1.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$1.class
new file mode 100644
index 00000000..e847f7f4
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$1.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$Builder.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$Builder.class
new file mode 100644
index 00000000..8b1c0f61
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$Builder.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$RunnableEx.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$RunnableEx.class
new file mode 100644
index 00000000..8934200b
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor$RunnableEx.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor.class
new file mode 100644
index 00000000..11e13fe8
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/AsyncExecutor.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogConfig.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogConfig.class
new file mode 100644
index 00000000..2e9db0ab
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogConfig.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory$Honeycomb.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory$Honeycomb.class
new file mode 100644
index 00000000..7810a549
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory$Honeycomb.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory$Support.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory$Support.class
new file mode 100644
index 00000000..832b6669
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory$Support.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory.class
new file mode 100644
index 00000000..2210ec4e
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragmentFactory.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments$Honeycomb.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments$Honeycomb.class
new file mode 100644
index 00000000..e6bef714
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments$Honeycomb.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments$Support.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments$Support.class
new file mode 100644
index 00000000..b6ce0883
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments$Support.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments.class
new file mode 100644
index 00000000..153a7830
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogFragments.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager$HoneycombManagerFragment.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager$HoneycombManagerFragment.class
new file mode 100644
index 00000000..6b637a3b
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager$HoneycombManagerFragment.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager$SupportManagerFragment.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager$SupportManagerFragment.class
new file mode 100644
index 00000000..81abe60c
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager$SupportManagerFragment.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager.class
new file mode 100644
index 00000000..f4dbd881
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ErrorDialogManager.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ExceptionToResourceMapping.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ExceptionToResourceMapping.class
new file mode 100644
index 00000000..2b3406a7
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ExceptionToResourceMapping.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/HasExecutionScope.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/HasExecutionScope.class
new file mode 100644
index 00000000..8e4a739a
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/HasExecutionScope.class differ
diff --git a/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ThrowableFailureEvent.class b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ThrowableFailureEvent.class
new file mode 100644
index 00000000..a65d33d6
Binary files /dev/null and b/EventBusTest/classes/production/EventBus/de/greenrobot/event/util/ThrowableFailureEvent.class differ
