diff --git a/EventBus/src/org/greenrobot/eventbus/EventBus.java b/EventBus/src/org/greenrobot/eventbus/EventBus.java
index 1cd57e32..da76d909 100644
--- a/EventBus/src/org/greenrobot/eventbus/EventBus.java
+++ b/EventBus/src/org/greenrobot/eventbus/EventBus.java
@@ -71,6 +71,7 @@ protected PostingThreadState initialValue() {
     private final boolean sendSubscriberExceptionEvent;
     private final boolean sendNoSubscriberEvent;
     private final boolean eventInheritance;
+    private final boolean eventDeclaration;
 
     private final int indexCount;
 
@@ -120,6 +121,7 @@ public EventBus() {
         sendNoSubscriberEvent = builder.sendNoSubscriberEvent;
         throwSubscriberException = builder.throwSubscriberException;
         eventInheritance = builder.eventInheritance;
+        eventDeclaration = builder.eventDeclaration;
         executorService = builder.executorService;
     }
 
@@ -133,7 +135,7 @@ public EventBus() {
      */
     public void register(Object subscriber) {
         Class<?> subscriberClass = subscriber.getClass();
-        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriberClass);
+        List<SubscriberMethod> subscriberMethods = subscriberMethodFinder.findSubscriberMethods(subscriberClass, eventDeclaration);
         synchronized (this) {
             for (SubscriberMethod subscriberMethod : subscriberMethods) {
                 subscribe(subscriber, subscriberMethod);
diff --git a/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java b/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java
index e212750e..1c57d822 100644
--- a/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java
+++ b/EventBus/src/org/greenrobot/eventbus/EventBusBuilder.java
@@ -35,6 +35,7 @@
     boolean sendNoSubscriberEvent = true;
     boolean throwSubscriberException;
     boolean eventInheritance = true;
+    boolean eventDeclaration = true;
     boolean ignoreGeneratedIndex;
     boolean strictMethodVerification;
     ExecutorService executorService = DEFAULT_EXECUTOR_SERVICE;
@@ -93,6 +94,14 @@ public EventBusBuilder eventInheritance(boolean eventInheritance) {
         return this;
     }
 
+    /**
+     * By default, EventBus requires that a registered class declare subscribing methods.
+     * Switching this feature off will allow EventBus to declare subscribing methods at the subclass level.
+     */
+    public EventBusBuilder eventDeclaration(boolean eventDeclaration) {
+        this.eventDeclaration = eventDeclaration;
+        return this;
+    }
 
     /**
      * Provide a custom thread pool to EventBus used for async and background event delivery. This is an advanced
diff --git a/EventBus/src/org/greenrobot/eventbus/SubscriberMethodFinder.java b/EventBus/src/org/greenrobot/eventbus/SubscriberMethodFinder.java
index db5e0ad3..42a4bac7 100644
--- a/EventBus/src/org/greenrobot/eventbus/SubscriberMethodFinder.java
+++ b/EventBus/src/org/greenrobot/eventbus/SubscriberMethodFinder.java
@@ -52,7 +52,7 @@
         this.ignoreGeneratedIndex = ignoreGeneratedIndex;
     }
 
-    List<SubscriberMethod> findSubscriberMethods(Class<?> subscriberClass) {
+    List<SubscriberMethod> findSubscriberMethods(Class<?> subscriberClass, boolean eventDeclaration) {
         List<SubscriberMethod> subscriberMethods = METHOD_CACHE.get(subscriberClass);
         if (subscriberMethods != null) {
             return subscriberMethods;
@@ -63,7 +63,7 @@
         } else {
             subscriberMethods = findUsingInfo(subscriberClass);
         }
-        if (subscriberMethods.isEmpty()) {
+        if (eventDeclaration && subscriberMethods.isEmpty()) {
             throw new EventBusException("Subscriber " + subscriberClass
                     + " and its super classes have no public methods with the @Subscribe annotation");
         } else {
