diff --git a/RELEASING.md b/RELEASING.md
new file mode 100644
index 0000000..a210381
--- /dev/null
+++ b/RELEASING.md
@@ -0,0 +1,13 @@
+Releasing
+=========
+
+ 1. Change the version in `gradle.properties` to a non-SNAPSHOT version.
+ 2. Update the `CHANGELOG.md` for the impending release
+ 3. Update the `README.md` with the new version.
+ 4. `git commit -am "Prepare for release X.Y.Z."` (where X.Y.Z is the new version)
+ 5. `git tag -a X.Y.Z -m "Version X.Y.Z"` (where X.Y.Z is the new version)
+ 6. `./gradlew clean uploadArchives`
+ 7. Update the `gradle.properties` to the next SNAPSHOT version.
+ 8. `git commit -am "Prepare next development version"`
+ 9. `git push && git push --tags`
+ 10. Visit [Sonatype Nexus](https://oss.sonatype.org/) and promote the artifact.
diff --git a/gradle/deploy.gradle b/gradle/deploy.gradle
index b64068b..dcb11a6 100644
--- a/gradle/deploy.gradle
+++ b/gradle/deploy.gradle
@@ -22,11 +22,13 @@ def isReleaseBuild() {
 }
 
 def getReleaseRepositoryUrl() {
-    return "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
+  return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
+          : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
 }
 
 def getSnapshotRepositoryUrl() {
-    return "https://oss.sonatype.org/content/repositories/snapshots/"
+  return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
+          : "https://oss.sonatype.org/content/repositories/snapshots/"
 }
 
 def getRepositoryUsername() {
@@ -100,7 +102,9 @@ afterEvaluate { project ->
     }
 
     task androidJavadocs(type: Javadoc) {
-        source = android.sourceSets.main.java.source
+        if (!project.plugins.hasPlugin('kotlin-android')) {
+          source = android.sourceSets.main.java.source
+        }
         classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
     }
 
