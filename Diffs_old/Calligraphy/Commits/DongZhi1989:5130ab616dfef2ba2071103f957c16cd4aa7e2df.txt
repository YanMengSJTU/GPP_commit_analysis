diff --git a/CHANGELOG.md b/CHANGELOG.md
index 837e872..9144fc6 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,22 +1,25 @@
-#Changelog
+# Changelog
 
-#2.2.0 (05/04/2016)
+# 2.3.0 (11/05/2017)
+- Fix Toolbar TextView's layout race condition. [@ansman](https://github.com/ansman) #386, #368, #327, #280, #304, #363
+
+# 2.2.0 (05/04/2016)
 - Added AppCompat Styles (AppCompatTextView will now pickup textViewStyle etc). Thanks @paul-turner
 - Fix for Toolbar not inflating `TextView`s upfront.
 
-#2.1.0 (27/04/2015)
+# 2.1.0 (27/04/2015)
 - Fixed #155, We now clone correctly.
 - Added Styles for Custom Views. (`builder.addCustomStyle(ToggleButton.class, android.R.attr.buttonStyleToggle)`)
 
-#2.0.2 (05/01/2015)
+# 2.0.2 (05/01/2015)
 - Fixed `CalligraphyConfig.Builder` missing return statements.
 - Fixed `createView()` getting the wrong parent context, Fixed: #135, #120
 
-#2.0.1 (28/01/2014)
+# 2.0.1 (28/01/2014)
 - Throw exception on passing null into `CalligraphySpan`
 - Fixed memory bug with `Toolbar`. [@dlew](https://github.com/dlew)
 
-#2.0.0 (16/01/2014)
+# 2.0.0 (16/01/2014)
 **Breaking changes**
 This is a massive rewrite of the interception model. Look at `CalligraphyLayoutInflater` and
 `CalligraphyConfig` for more information on options and changes.
@@ -32,42 +35,42 @@ Notable changes:
 - We wrap Factory not disturbing underlying factory and layout inflater invocation.
 - Better support for `cloneInContext()` which the compat library uses heavily.
 
-#1.2.0 (20/10/2014)
+# 1.2.0 (20/10/2014)
 - Fixes issues with `appcompat-v7:21+` (uses underlying `Toolbar` impl).
 - Lollipop support.
 - Fast path view with font already set by us.
 
-#1.1.0 (02/08/2014)
+# 1.1.0 (02/08/2014)
 - Fixes ActionBar Title/SubTitle `textStyles`.
 - Fixes `textAllCaps` bug, now works correctly.
 - Fixes some `Spannable` issues reported, we are more careful what we apply `Spannable`'s too now.
 - Fixes missing Typeface on hint text on `EditText`/`AutoComplete`.
 - Fixes empty source and javadoc jars on maven.
 
-#1.0.0 (05/07/2014)
+# 1.0.0 (05/07/2014)
 - Added ActionBar Title/SubTitle support.
 - Toast support via default style/or TextView theme style.
 - Removed FontFamily parsing as it lead to users not being able to use `fontFamily`
 - Added TextAppearance Support - Thanks [@codebutler](https://github.com/codebutler) & [@loganj](https://github.com/loganj)
 - Default Font no longer required.
 
-#0.8/9 (Skipped major API change)
+# 0.8/9 (Skipped major API change)
 
-#0.7.1 (22/04/2014)
+# 0.7.1 (22/04/2014)
 - Fixed Resources not found Exception - [@Smuldr](https://github.com/Smuldr)
 
-#0.7.0 (28/01/2014)
+# 0.7.0 (28/01/2014)
 - Added Anti-aliasing support
 - Added custom font attribute support - Thanks [@Roman Zhilich](https://github.com/RomanZhilich)
 - Changed Maven groupId to `uk.co.chrisjenx` artifact is now `calligraphy`. `compile 'uk.co.chrisjenx:calligraphy:0.+'`
 
-#0.6.0 (02/01/2014)
+# 0.6.0 (02/01/2014)
 - Supports all Android implementations of `TextView`
 - Supports Custom `TextView`s - Thanks [@mironov-nsk](https://github.com/mironov-nsk)
 - Caches none found fonts as null
 
-#0.5.0
+# 0.5.0
 - Added support for `Button` class
 
-#0.4.0
+# 0.4.0
 - Initial Release
diff --git a/CalligraphySample/build.gradle b/CalligraphySample/build.gradle
index 3e10d6d..6cec900 100644
--- a/CalligraphySample/build.gradle
+++ b/CalligraphySample/build.gradle
@@ -1,12 +1,12 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 24
-    buildToolsVersion "24.0.0"
+    compileSdkVersion rootProject.ext.compileSdkVersion
+    buildToolsVersion rootProject.ext.buildToolsVersion
 
     defaultConfig {
-        minSdkVersion 8
-        targetSdkVersion 24
+        minSdkVersion rootProject.ext.minSdkVersion
+        targetSdkVersion rootProject.ext.targetSdkVersion
         versionCode project.ext.versionCodeInt
         versionName version
     }
@@ -24,12 +24,12 @@ android {
 
 dependencies {
     compile project(':calligraphy')
-    compile 'com.android.support:support-v4:24.0.0'
-    compile 'com.android.support:appcompat-v7:24.0.0'
+    compile "com.android.support:support-v4:${supportLibraryVersion}"
+    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
 
-    compile 'com.jakewharton:butterknife:8.2.1'
+    compile 'com.jakewharton:butterknife:8.5.1'
 
 //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
-    debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
-    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
+    debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
+    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
 }
diff --git a/README.md b/README.md
index fc68928..ea11362 100644
--- a/README.md
+++ b/README.md
@@ -9,7 +9,7 @@ Are you fed up of Custom Views to set fonts? Or traversing the ViewTree to find
 
 ![alt text](https://github.com/chrisjenx/Calligraphy/raw/master/screenshot.png "ScreenShot Of Font Samples")
 
-##Getting started
+## Getting started
 
 ### Dependency
 
@@ -17,7 +17,7 @@ Include the dependency [Download (.aar)](http://search.maven.org/remotecontent?f
 
 ```groovy
 dependencies {
-    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
+    compile 'uk.co.chrisjenx:calligraphy:2.3.0'
 }
 ```
 ### Add Fonts
@@ -128,7 +128,7 @@ http://schemas.android.com/tools"`. See https://code.google.com/p/android/issues
 ```
 
 
-#FAQ
+# FAQ
 
 ### Font Resolution 
 
@@ -184,7 +184,7 @@ Both have a method called `setSwitchTypeface` that sets the typeface within the
 
 
 
-#Collaborators
+# Collaborators
 
 - [@mironov-nsk](https://github.com/mironov-nsk)
 - [@Roman Zhilich](https://github.com/RomanZhilich)
@@ -192,14 +192,15 @@ Both have a method called `setSwitchTypeface` that sets the typeface within the
 - [@Codebutler](https://github.com/codebutler)
 - [@loganj](https://github.com/loganj)
 - [@dlew](https://github.com/dlew)
+- [@ansman](https://github.com/ansman)
 
-#Note
+# Note
 
 This library was created because it is currently not possible to declare a custom font in XML files in Android.
 
 If you feel this should be possible to do, please star [this issue](https://code.google.com/p/android/issues/detail?id=88945) on the official Android bug tracker.
 
-#Licence
+# Licence
 
     Copyright 2013 Christopher Jenkins
     
diff --git a/build.gradle b/build.gradle
index 8009b4c..a8a043c 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
     jcenter()
   }
   dependencies {
-    classpath 'com.android.tools.build:gradle:2.1.2'
+    classpath 'com.android.tools.build:gradle:2.3.2'
   }
 }
 
@@ -14,13 +14,19 @@ allprojects {
   }
   // Is Release Build?
   version = getProperty('VERSION_NAME');
+
   ext {
     isReleaseVersion = has("release")
     versionCodeInt = getProperty('VERSION_CODE').toInteger()
+    supportLibraryVersion = '25.3.1'
+    buildToolsVersion = '25.0.3'
+    compileSdkVersion = 25
+    minSdkVersion = 9
+    targetSdkVersion = 25
   }
 }
 
 task wrapper(type: Wrapper) {
-  gradleVersion = '2.12'
-  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
+  gradleVersion = '3.5'
+  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-bin.zip"
 }
diff --git a/calligraphy/build.gradle b/calligraphy/build.gradle
index 0180f5d..54e17a0 100644
--- a/calligraphy/build.gradle
+++ b/calligraphy/build.gradle
@@ -1,13 +1,14 @@
 apply plugin: 'com.android.library'
+apply from: rootProject.file('gradle/deploy.gradle')
 
 android {
-    compileSdkVersion 24
-    buildToolsVersion "24.0.0"
+    compileSdkVersion project.compileSdkVersion
+    buildToolsVersion project.buildToolsVersion
 
     defaultConfig {
-        minSdkVersion 7
-        targetSdkVersion 24
-        versionCode project.ext.versionCodeInt
+        minSdkVersion project.minSdkVersion
+        targetSdkVersion project.targetSdkVersion
+        versionCode project.versionCodeInt
         versionName version
         consumerProguardFiles 'consumer-proguard-rules.txt'
     }
@@ -21,7 +22,5 @@ android {
 }
 
 dependencies {
-    compile 'com.android.support:appcompat-v7:24.0.0'
+    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
 }
-
-apply from: rootProject.file('gradle/deploy.gradle')
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
index abc43dc..572763b 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
@@ -1,18 +1,14 @@
 package uk.co.chrisjenx.calligraphy;
 
 import android.annotation.SuppressLint;
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Typeface;
-import android.os.Build;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
-import android.view.ViewTreeObserver;
 import android.widget.TextView;
 
-import java.lang.ref.WeakReference;
 import java.lang.reflect.Method;
 
 class CalligraphyFactory {
@@ -149,8 +145,7 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
         // AppCompat API21+ The ActionBar doesn't inflate default Title/SubTitle, we need to scan the
         // Toolbar(Which underlies the ActionBar) for its children.
         if (CalligraphyUtils.canCheckForV7Toolbar() && view instanceof android.support.v7.widget.Toolbar) {
-            final Toolbar toolbar = (Toolbar) view;
-            toolbar.getViewTreeObserver().addOnGlobalLayoutListener(new ToolbarLayoutListener(this, context, toolbar));
+            applyFontToToolbar((Toolbar) view);
         }
 
         // Try to set typeface for custom views using interface method or via reflection if available
@@ -200,55 +195,27 @@ private String resolveFontPath(Context context, AttributeSet attrs) {
         return textViewFont;
     }
 
-    private static class ToolbarLayoutListener implements ViewTreeObserver.OnGlobalLayoutListener {
-
-        static String BLANK = " ";
-
-        private final WeakReference<CalligraphyFactory> mCalligraphyFactory;
-        private final WeakReference<Context> mContextRef;
-        private final WeakReference<Toolbar> mToolbarReference;
-        private final CharSequence originalSubTitle;
-
-        private ToolbarLayoutListener(final CalligraphyFactory calligraphyFactory,
-                                      final Context context, Toolbar toolbar) {
-            mCalligraphyFactory = new WeakReference<>(calligraphyFactory);
-            mContextRef = new WeakReference<>(context);
-            mToolbarReference = new WeakReference<>(toolbar);
-            originalSubTitle = toolbar.getSubtitle();
-            toolbar.setSubtitle(BLANK);
-        }
-
-        @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
-        @Override public void onGlobalLayout() {
-            final Toolbar toolbar = mToolbarReference.get();
-            final Context context = mContextRef.get();
-            final CalligraphyFactory factory = mCalligraphyFactory.get();
-            if (toolbar == null) return;
-            if (factory == null || context == null) {
-                removeSelf(toolbar);
-                return;
-            }
-
-            int childCount = toolbar.getChildCount();
-            if (childCount != 0) {
-                // Process children, defer draw as it has set the typeface.
-                for (int i = 0; i < childCount; i++) {
-                    factory.onViewCreated(toolbar.getChildAt(i), context, null);
-                }
-            }
-            removeSelf(toolbar);
-            toolbar.setSubtitle(originalSubTitle);
-        }
-
-        private void removeSelf(final Toolbar toolbar) {// Our dark deed is done
-            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
-                //noinspection deprecation
-                toolbar.getViewTreeObserver().removeGlobalOnLayoutListener(this);
-            } else {
-                toolbar.getViewTreeObserver().removeOnGlobalLayoutListener(this);
-            }
+    /**
+     * Will forceably set text on the views then remove ones that didn't have copy.
+     *
+     * @param view toolbar view.
+     */
+    private void applyFontToToolbar(final Toolbar view) {
+        final CharSequence previousTitle = view.getTitle();
+        final CharSequence previousSubtitle = view.getSubtitle();
+        // The toolbar inflates both the title and the subtitle views lazily but luckily they do it
+        // synchronously when you set a title and a subtitle programmatically.
+        // So we set a title and a subtitle to something, then get the views, then revert.
+        view.setTitle(" ");
+        view.setSubtitle(" ");
+
+        // Iterate through the children to run post inflation on them
+        final int childCount = view.getChildCount();
+        for (int i = 0; i < childCount; i++) {
+            onViewCreated(view.getChildAt(i), view.getContext(), null);
         }
-
+        // Remove views from view if they didn't have copy set.
+        view.setTitle(previousTitle);
+        view.setSubtitle(previousSubtitle);
     }
-
 }
diff --git a/gradle.properties b/gradle.properties
index f47e5cf..9e680c3 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -18,8 +18,8 @@
 # org.gradle.parallel=true
 
 GROUP=uk.co.chrisjenx
-VERSION_NAME=2.2.0
-VERSION_CODE=23
+VERSION_NAME=2.3.0
+VERSION_CODE=24
 
 POM_PACKAGING=aar
 POM_URL=https://github.com/chrisjenx/Calligraphy
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 13372ae..d03ee52 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index c302267..3a1478b 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.5-bin.zip
diff --git a/gradlew b/gradlew
index 9d82f78..4453cce 100755
--- a/gradlew
+++ b/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
 
 ##############################################################################
 ##
@@ -6,12 +6,30 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
@@ -30,6 +48,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,26 +59,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -85,7 +89,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -150,11 +154,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save ( ) {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
index aec9973..e95643d 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -8,14 +8,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -46,10 +46,9 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windowz variants
+@rem Get command-line arguments, handling Windows variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -60,11 +59,6 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
