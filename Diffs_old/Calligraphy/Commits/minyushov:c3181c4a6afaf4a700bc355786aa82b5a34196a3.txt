diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
index d6ffa92..5b965e1 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
@@ -129,11 +129,11 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
             // Since we're not using namespace it's a little bit tricky
 
             // Check xml attrs, style attrs and text appearance for font path
-            String textViewFont = resolveFontPath(context, attrs);
+			final int[] styleForTextView = getStyleForTextView((TextView) view);
+			String textViewFont = resolveFontPath(context, attrs, styleForTextView[0]);
 
             // Try theme attributes
             if (TextUtils.isEmpty(textViewFont)) {
-                final int[] styleForTextView = getStyleForTextView((TextView) view);
                 if (styleForTextView[1] != -1)
                     textViewFont = CalligraphyUtils.pullFontPathFromTheme(context, styleForTextView[0], styleForTextView[1], mAttributeId);
                 else
@@ -155,13 +155,13 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
 
         // Try to set typeface for custom views using interface method or via reflection if available
         if (view instanceof HasTypeface) {
-            Typeface typeface = getDefaultTypeface(context, resolveFontPath(context, attrs));
+            Typeface typeface = getDefaultTypeface(context, resolveFontPath(context, attrs, 0));
             if (typeface != null) {
                 ((HasTypeface) view).setTypeface(typeface);
             }
         } else if (CalligraphyConfig.get().isCustomViewTypefaceSupport() && CalligraphyConfig.get().isCustomViewHasTypeface(view)) {
             final Method setTypeface = ReflectionUtils.getMethod(view.getClass(), "setTypeface");
-            String fontPath = resolveFontPath(context, attrs);
+            String fontPath = resolveFontPath(context, attrs, 0);
             Typeface typeface = getDefaultTypeface(context, fontPath);
             if (setTypeface != null && typeface != null) {
                 ReflectionUtils.invokeMethod(view, setTypeface, typeface);
@@ -183,18 +183,18 @@ private Typeface getDefaultTypeface(Context context, String fontPath) {
     /**
      * Resolving font path from xml attrs, style attrs or text appearance
      */
-    private String resolveFontPath(Context context, AttributeSet attrs) {
+    private String resolveFontPath(Context context, AttributeSet attrs, int styleAttr) {
         // Try view xml attributes
         String textViewFont = CalligraphyUtils.pullFontPathFromView(context, attrs, mAttributeId);
 
         // Try view style attributes
         if (TextUtils.isEmpty(textViewFont)) {
-            textViewFont = CalligraphyUtils.pullFontPathFromStyle(context, attrs, mAttributeId);
+            textViewFont = CalligraphyUtils.pullFontPathFromStyle(context, attrs, mAttributeId, styleAttr);
         }
 
         // Try View TextAppearance
         if (TextUtils.isEmpty(textViewFont)) {
-            textViewFont = CalligraphyUtils.pullFontPathFromTextAppearance(context, attrs, mAttributeId);
+            textViewFont = CalligraphyUtils.pullFontPathFromTextAppearance(context, attrs, mAttributeId, styleAttr);
         }
 
         return textViewFont;
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
index 1cf40fb..190c4c4 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
@@ -181,10 +181,10 @@ static String pullFontPathFromView(Context context, AttributeSet attrs, int[] at
      * @param attributeId if -1 returns null.
      * @return null if attribute is not defined or found in the Style
      */
-    static String pullFontPathFromStyle(Context context, AttributeSet attrs, int[] attributeId) {
+    static String pullFontPathFromStyle(Context context, AttributeSet attrs, int[] attributeId, int defStyleAttr) {
         if (attributeId == null || attrs == null)
             return null;
-        final TypedArray typedArray = context.obtainStyledAttributes(attrs, attributeId);
+        final TypedArray typedArray = context.obtainStyledAttributes(attrs, attributeId, defStyleAttr, 0);
         if (typedArray != null) {
             try {
                 // First defined attribute
@@ -209,13 +209,13 @@ static String pullFontPathFromStyle(Context context, AttributeSet attrs, int[] a
      * @param attributeId if -1 returns null.
      * @return returns null if attribute is not defined or if no TextAppearance is found.
      */
-    static String pullFontPathFromTextAppearance(final Context context, AttributeSet attrs, int[] attributeId) {
+    static String pullFontPathFromTextAppearance(final Context context, AttributeSet attrs, int[] attributeId, int defStyleAttr) {
         if (attributeId == null || attrs == null) {
             return null;
         }
 
         int textAppearanceId = -1;
-        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, ANDROID_ATTR_TEXT_APPEARANCE);
+        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, ANDROID_ATTR_TEXT_APPEARANCE, defStyleAttr, 0);
         if (typedArrayAttr != null) {
             try {
                 textAppearanceId = typedArrayAttr.getResourceId(0, -1);
