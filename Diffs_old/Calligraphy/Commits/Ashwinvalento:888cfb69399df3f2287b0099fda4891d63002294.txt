diff --git a/CHANGELOG.md b/CHANGELOG.md
index a61d9b8..9896436 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,7 +1,8 @@
 #Changelog
 
 #2.1.1 (16/07/2015)-SNAPSHOT
-- Added AppCompat Styles (AppComatTextView will now pickup textViewStyle etc). Thanks @paul-turner
+- Added AppCompat Styles (AppCompatTextView will now pickup textViewStyle etc). Thanks @paul-turner
+- Fix for Toolbar not inflating `TextView`s upfront.
 
 #2.1.0 (27/04/2015)
 - Fixed #155, We now clone correctly.
diff --git a/CalligraphySample/build.gradle b/CalligraphySample/build.gradle
index e2f171f..76a46ac 100644
--- a/CalligraphySample/build.gradle
+++ b/CalligraphySample/build.gradle
@@ -1,28 +1,35 @@
 apply plugin: 'com.android.application'
 
 android {
-  compileSdkVersion 22
-  buildToolsVersion "22.0.1"
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
 
-  defaultConfig {
-    minSdkVersion 7
-    targetSdkVersion 22
-    versionCode project.ext.versionCodeInt
-    versionName version
-  }
-  buildTypes {
-    release {
-
-      minifyEnabled false
-      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 23
+        versionCode project.ext.versionCodeInt
+        versionName version
+    }
+    buildTypes {
+        debug {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
     }
-  }
 }
 
 dependencies {
-  compile project(':calligraphy')
-  compile 'com.android.support:support-v4:22.2.0'
-  compile 'com.android.support:appcompat-v7:22.2.0'
+    compile project(':calligraphy')
+    compile 'com.android.support:support-v4:23.1.1'
+    compile 'com.android.support:appcompat-v7:23.1.1'
+
+    compile 'com.jakewharton:butterknife:7.0.1'
 
-  compile 'com.jakewharton:butterknife:5.1.2'
+//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
+    debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
+    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
 }
diff --git a/CalligraphySample/proguard-rules.txt b/CalligraphySample/proguard-rules.txt
index bb1e230..80668be 100644
--- a/CalligraphySample/proguard-rules.txt
+++ b/CalligraphySample/proguard-rules.txt
@@ -14,4 +14,16 @@
 # class:
 #-keepclassmembers class fqcn.of.javascript.interface.for.webview {
 #   public *;
-#}
\ No newline at end of file
+#}
+
+-keep class butterknife.** { *; }
+-dontwarn butterknife.internal.**
+-keep class **$$ViewBinder { *; }
+
+-keepclasseswithmembernames class * {
+    @butterknife.* <fields>;
+}
+
+-keepclasseswithmembernames class * {
+    @butterknife.* <methods>;
+}
diff --git a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java
index eab1578..826a408 100644
--- a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java
+++ b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java
@@ -14,11 +14,11 @@
     public void onCreate() {
         super.onCreate();
         CalligraphyConfig.initDefault(new CalligraphyConfig.Builder()
-                        .setDefaultFontPath("fonts/Roboto-ThinItalic.ttf")
-                        .setFontAttrId(R.attr.fontPath)
-                        .addCustomViewWithSetTypeface(CustomViewWithTypefaceSupport.class)
-                        .addCustomStyle(TextField.class, R.attr.textFieldStyle)
-                        .build()
+                .setDefaultFontPath("fonts/Roboto-ThinItalic.ttf")
+                .setFontAttrId(R.attr.fontPath)
+                .addCustomViewWithSetTypeface(CustomViewWithTypefaceSupport.class)
+                .addCustomStyle(TextField.class, R.attr.textFieldStyle)
+                .build()
         );
     }
 }
diff --git a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/MainActivity.java b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/MainActivity.java
index 6d7dcd4..36ff9a5 100644
--- a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/MainActivity.java
+++ b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/MainActivity.java
@@ -4,17 +4,21 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
 
 import uk.co.chrisjenx.calligraphy.CalligraphyContextWrapper;
 
+import static butterknife.ButterKnife.findById;
+
 public class MainActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
+        final Toolbar toolbar = findById(this, R.id.toolbar);
+        setSupportActionBar(toolbar);
 
         // Inject pragmatically
         getSupportFragmentManager()
@@ -22,13 +26,29 @@ protected void onCreate(Bundle savedInstanceState) {
                 .replace(R.id.container, PlaceholderFragment.getInstance())
                 .commit();
 
-        new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {
+
+        final Handler handler = new Handler(Looper.getMainLooper());
+        handler.postDelayed(new Runnable() {
             @Override
             public void run() {
-                setTitle("Calligraphy changed");
-                getSupportActionBar().setSubtitle("Added subtitle");
+                toolbar.setTitle("Calligraphy Added");
+                toolbar.setSubtitle("Added subtitle");
             }
         }, 1000);
+
+        handler.postDelayed(new Runnable() {
+            @Override public void run() {
+                toolbar.setTitle(null);
+                toolbar.setSubtitle("Added subtitle");
+            }
+        }, 2000);
+
+        handler.postDelayed(new Runnable() {
+            @Override public void run() {
+                toolbar.setTitle("Calligraphy added back");
+                toolbar.setSubtitle("Added subtitle");
+            }
+        }, 3000);
     }
 
     /*
diff --git a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/PlaceholderFragment.java b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/PlaceholderFragment.java
index 0404877..a85fbe6 100644
--- a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/PlaceholderFragment.java
+++ b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/PlaceholderFragment.java
@@ -30,7 +30,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle st
     @Override
     public void onViewCreated(View view, Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
-        ButterKnife.inject(this, view);
+        ButterKnife.bind(this, view);
 
         ViewStub stub = ButterKnife.findById(view, R.id.stub);
         stub.inflate();
diff --git a/CalligraphySample/src/main/res/layout/activity_main.xml b/CalligraphySample/src/main/res/layout/activity_main.xml
index f2f0768..0f77d3d 100644
--- a/CalligraphySample/src/main/res/layout/activity_main.xml
+++ b/CalligraphySample/src/main/res/layout/activity_main.xml
@@ -1,9 +1,26 @@
-<FrameLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:tools="http://schemas.android.com/tools"
+<merge
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="uk.co.chrisjenx.calligraphy.sample.MainActivity"
+    tools:ignore="MergeRootFrame">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/primary_material_light"
+        android:minHeight="?attr/actionBarSize"
+        android:translationZ="4dp"
+        android:theme="@style/ThemeOverlay.AppCompat.Light"/>
+
+    <FrameLayout
         android:id="@+id/container"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        tools:context="uk.co.chrisjenx.calligraphy.sample.MainActivity"
-        tools:ignore="MergeRootFrame">
-</FrameLayout>
+        android:layout_marginTop="?attr/actionBarSize"
+        />
+
+
+</merge>
diff --git a/CalligraphySample/src/main/res/values/styles.xml b/CalligraphySample/src/main/res/values/styles.xml
index 2d65608..84227a2 100644
--- a/CalligraphySample/src/main/res/values/styles.xml
+++ b/CalligraphySample/src/main/res/values/styles.xml
@@ -4,7 +4,7 @@
 
     <!-- Base application theme. -->
     <!--<style name="AppTheme" parent="android:Theme.Holo.Light.DarkActionBar">-->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
         <!-- Customize your theme here. -->
         <item name="android:textViewStyle">@style/AppTheme.Widget.TextView</item>
         <!-- Action Bar Theme -->
@@ -16,12 +16,17 @@
     <!-- AppTheme ActionBar Style -->
     <style name="AppTheme.ActionBar" parent="android:Widget.Holo.Light.ActionBar.Solid.Inverse">
         <item name="android:titleTextStyle">@style/AppTheme.ActionBar.TextAppearance</item>
+        <item name="android:subtitleTextStyle">@style/AppTheme.ActionBar.TextAppearance.SubTitle</item>
     </style>
 
-    <style name="AppTheme.ActionBar.TextAppearance" parent="android:TextAppearance.Holo.Widget.ActionBar.Title.Inverse">
+    <style name="AppTheme.ActionBar.TextAppearance" parent="TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse">
         <item name="fontPath">fonts/Oswald-Stencbab.ttf</item>
     </style>
 
+    <style name="AppTheme.ActionBar.TextAppearance.SubTitle" parent="TextAppearance.AppCompat.Widget.ActionBar.Subtitle.Inverse">
+        <item name="fontPath">fonts/gtw.ttf</item>
+    </style>
+
 
     <style name="AppTheme.Widget"/>
 
diff --git a/build.gradle b/build.gradle
index aee615c..569f316 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
     jcenter()
   }
   dependencies {
-    classpath 'com.android.tools.build:gradle:1.3.0'
+    classpath 'com.android.tools.build:gradle:2.0.0-alpha2'
   }
 }
 
@@ -21,5 +21,5 @@ allprojects {
 }
 
 task wrapper(type: Wrapper) {
-  gradleVersion = '2.5'
+  gradleVersion = '2.9'
 }
diff --git a/calligraphy/build.gradle b/calligraphy/build.gradle
index e0be9bb..6c9016c 100644
--- a/calligraphy/build.gradle
+++ b/calligraphy/build.gradle
@@ -1,25 +1,26 @@
 apply plugin: 'com.android.library'
 
 android {
-  compileSdkVersion 22
-  buildToolsVersion "22.0.1"
+    compileSdkVersion 23
+    buildToolsVersion "23.0.2"
 
-  defaultConfig {
-    minSdkVersion 7
-    targetSdkVersion 22
-    versionCode project.ext.versionCodeInt
-    versionName version
-  }
+    defaultConfig {
+        minSdkVersion 7
+        targetSdkVersion 23
+        versionCode project.ext.versionCodeInt
+        versionName version
+    }
 
-  buildTypes {
-    release {
-      minifyEnabled false
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
     }
-  }
 }
 
 dependencies {
-  provided 'com.android.support:appcompat-v7:22.2.0'
+    compile 'com.android.support:appcompat-v7:23.1.1'
 }
 
 apply from: rootProject.file('gradle/deploy.gradle')
diff --git a/calligraphy/proguard-rules.txt b/calligraphy/proguard-rules.txt
index bb1e230..10691cb 100644
--- a/calligraphy/proguard-rules.txt
+++ b/calligraphy/proguard-rules.txt
@@ -14,4 +14,8 @@
 # class:
 #-keepclassmembers class fqcn.of.javascript.interface.for.webview {
 #   public *;
-#}
\ No newline at end of file
+#}
+
+-keep class uk.co.chrisjenx.calligraphy.* { *; }
+-keep class uk.co.chrisjenx.calligraphy.*$* { *; }
+
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
index dbff457..3a9caa1 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
@@ -5,13 +5,14 @@
 import android.content.Context;
 import android.graphics.Typeface;
 import android.os.Build;
+import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.ViewTreeObserver;
 import android.widget.TextView;
 
+import java.lang.ref.WeakReference;
 import java.lang.reflect.Method;
 
 class CalligraphyFactory {
@@ -148,28 +149,8 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
         // AppCompat API21+ The ActionBar doesn't inflate default Title/SubTitle, we need to scan the
         // Toolbar(Which underlies the ActionBar) for its children.
         if (CalligraphyUtils.canCheckForV7Toolbar() && view instanceof android.support.v7.widget.Toolbar) {
-            final ViewGroup parent = (ViewGroup) view;
-            parent.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
-                @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
-                @Override
-                public void onGlobalLayout() {
-                    int childCount = parent.getChildCount();
-                    if (childCount != 0) {
-                        // Process children, defer draw as it has set the typeface.
-                        for (int i = 0; i < childCount; i++) {
-                            onViewCreated(parent.getChildAt(i), context, null);
-                        }
-                    }
-
-                    // Our dark deed is done
-                    if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
-                        //noinspection deprecation
-                        parent.getViewTreeObserver().removeGlobalOnLayoutListener(this);
-                    } else {
-                        parent.getViewTreeObserver().removeOnGlobalLayoutListener(this);
-                    }
-                }
-            });
+            final Toolbar toolbar = (Toolbar) view;
+            toolbar.getViewTreeObserver().addOnGlobalLayoutListener(new ToolbarLayoutListener(this, context, toolbar));
         }
 
         // Try to set typeface for custom views using interface method or via reflection if available
@@ -186,8 +167,9 @@ public void onGlobalLayout() {
                 ReflectionUtils.invokeMethod(view, setTypeface, typeface);
             }
         }
-    }
 
+    }
+    
     private Typeface getDefaultTypeface(Context context, String fontPath) {
         if (TextUtils.isEmpty(fontPath)) {
             fontPath = CalligraphyConfig.get().getFontPath();
@@ -217,4 +199,58 @@ private String resolveFontPath(Context context, AttributeSet attrs) {
 
         return textViewFont;
     }
+
+    private static class ToolbarLayoutListener implements ViewTreeObserver.OnGlobalLayoutListener {
+
+        private final WeakReference<CalligraphyFactory> mCalligraphyFactory;
+        private final WeakReference<Context> mContextRef;
+        private final WeakReference<Toolbar> mToolbarReference;
+        private final CharSequence originalTitle;
+        private final CharSequence originalSubTitle;
+
+        private ToolbarLayoutListener(final CalligraphyFactory calligraphyFactory,
+                                      final Context context, Toolbar toolbar) {
+            mCalligraphyFactory = new WeakReference<>(calligraphyFactory);
+            mContextRef = new WeakReference<>(context);
+            mToolbarReference = new WeakReference<>(toolbar);
+            originalTitle = toolbar.getTitle();
+            originalSubTitle = toolbar.getSubtitle();
+            toolbar.setTitle(" ");
+            toolbar.setSubtitle("  ");
+        }
+
+        @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
+        @Override public void onGlobalLayout() {
+            final Toolbar toolbar = mToolbarReference.get();
+            final Context context = mContextRef.get();
+            final CalligraphyFactory factory = mCalligraphyFactory.get();
+            if (toolbar == null) return;
+            if (factory == null || context == null) {
+                removeSelf(toolbar);
+                return;
+            }
+
+            int childCount = toolbar.getChildCount();
+            if (childCount != 0) {
+                // Process children, defer draw as it has set the typeface.
+                for (int i = 0; i < childCount; i++) {
+                    factory.onViewCreated(toolbar.getChildAt(i), context, null);
+                }
+            }
+            removeSelf(toolbar);
+            toolbar.setTitle(originalTitle);
+            toolbar.setSubtitle(originalSubTitle);
+        }
+
+        private void removeSelf(final Toolbar toolbar) {// Our dark deed is done
+            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+                //noinspection deprecation
+                toolbar.getViewTreeObserver().removeGlobalOnLayoutListener(this);
+            } else {
+                toolbar.getViewTreeObserver().removeOnGlobalLayoutListener(this);
+            }
+        }
+
+    }
+
 }
diff --git a/calligraphy/src/main/res/values/public.xml b/calligraphy/src/main/res/values/public.xml
new file mode 100644
index 0000000..e6e37e3
--- /dev/null
+++ b/calligraphy/src/main/res/values/public.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <public name="fontPath" type="attr"/>
+</resources>
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 0087cd3..9411448 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index b7011db..7ed3212 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Thu Nov 27 12:20:57 GMT 2014
+#Mon Dec 07 22:03:02 GMT 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.5-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.9-all.zip
diff --git a/gradlew b/gradlew
index 91a7e26..9d82f78 100755
--- a/gradlew
+++ b/gradlew
@@ -42,11 +42,6 @@ case "`uname`" in
     ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
 # Attempt to set APP_HOME
 # Resolve links: $0 may be a link
 PRG="$0"
@@ -61,9 +56,9 @@ while [ -h "$PRG" ] ; do
     fi
 done
 SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
+cd "`dirname \"$PRG\"`/" >/dev/null
 APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
+cd "$SAVED" >/dev/null
 
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
@@ -114,6 +109,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
