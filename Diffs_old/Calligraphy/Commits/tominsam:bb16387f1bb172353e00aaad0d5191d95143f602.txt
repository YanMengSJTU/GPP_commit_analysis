diff --git a/CalligraphySample/src/main/res/layout/fragment_main.xml b/CalligraphySample/src/main/res/layout/fragment_main.xml
index 7dff524..3c728fd 100644
--- a/CalligraphySample/src/main/res/layout/fragment_main.xml
+++ b/CalligraphySample/src/main/res/layout/fragment_main.xml
@@ -66,6 +66,12 @@
             android:textAllCaps="true"
             android:textAppearance="@style/TextAppearance.FontPathView"/>
 
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/defined_in_appears_linespacing"
+            android:textAppearance="@style/TextAppearance.FontPathView.WithSpacing"/>
+
         <uk.co.chrisjenx.calligraphy.sample.CustomTextView
             fontPath="fonts/Oswald-Stencbab.ttf"
             android:layout_width="wrap_content"
diff --git a/CalligraphySample/src/main/res/values/strings.xml b/CalligraphySample/src/main/res/values/strings.xml
index 56c3803..c2dd9d0 100644
--- a/CalligraphySample/src/main/res/values/strings.xml
+++ b/CalligraphySample/src/main/res/values/strings.xml
@@ -10,6 +10,7 @@
     <string name="defined_in_appears_style">\nThis has the font path defined in the Styles TextAppearance as Roboto Condensed.\n</string>
     <string name="defined_in_appears">\nThis has the font path defined in the Views TextAppearance as Oswald.\n</string>
     <string name="defined_in_appears_caps">\nThis has the font path defined in the Views TextAppearance as Oswald. textAllCaps is applied.\n</string>
+    <string name="defined_in_appears_linespacing">\nThis has the font path defined in the Views TextAppearance as Oswald. lineSpacingExtra is applied.\n</string>
     <string name="defined_custom_view">\nThis is a custom TextView with Oswald font.\n</string>
     <string name="defined_view_stub">\nThis is a TextView inflated from a ViewStub.\n</string>
     <string name="defined_view_stub_font_path">\nThis is a TextView inflated from a ViewStub w/ fontPath declared.\n</string>
diff --git a/CalligraphySample/src/main/res/values/styles.xml b/CalligraphySample/src/main/res/values/styles.xml
index 84227a2..370bfe0 100644
--- a/CalligraphySample/src/main/res/values/styles.xml
+++ b/CalligraphySample/src/main/res/values/styles.xml
@@ -60,6 +60,10 @@
         <item name="android:textColor">#444</item>
     </style>
 
+    <style name="TextAppearance.FontPathView.WithSpacing" parent="TextAppearance.FontPathView">
+        <item name="android:lineSpacingExtra">20dp</item>
+    </style>
+
     <!-- Custom Class Styles -->
     <style name="TextField" parent="android:Widget.Holo.Light.TextView">
         <item name="fontPath">fonts/gtw.ttf</item>
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
index abc43dc..2458af6 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
@@ -144,6 +144,7 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
             final boolean deferred = matchesResourceIdName(view, ACTION_BAR_TITLE) || matchesResourceIdName(view, ACTION_BAR_SUBTITLE);
 
             CalligraphyUtils.applyFontToTextView(context, (TextView) view, CalligraphyConfig.get(), textViewFont, deferred);
+            CalligraphyUtils.applyExtraAttributesToTextView(context, (TextView) view, attrs);
         }
 
         // AppCompat API21+ The ActionBar doesn't inflate default Title/SubTitle, we need to scan the
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
index ab71cd9..85d02a0 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
@@ -24,6 +24,11 @@
 
     public static final int[] ANDROID_ATTR_TEXT_APPEARANCE = new int[]{android.R.attr.textAppearance};
 
+    static final int[] EXTRA_TEXT_APPEARANCE = {
+        android.R.attr.lineSpacingExtra,
+        android.R.attr.lineSpacingMultiplier
+    };
+
     /**
      * Applies a custom typeface span to the text.
      *
@@ -312,6 +317,39 @@ static String pullFontPathFromTheme(Context context, int styleAttrId, int subSty
         return null;
     }
 
+    static void applyExtraAttributesToTextView(final Context context, final TextView view, final AttributeSet attrs) {
+        int textAppearanceId = -1;
+        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, ANDROID_ATTR_TEXT_APPEARANCE);
+        if (typedArrayAttr != null) {
+            try {
+                textAppearanceId = typedArrayAttr.getResourceId(0, -1);
+            } catch (Exception ignored) {
+                // Failed for some reason
+                return;
+            } finally {
+                typedArrayAttr.recycle();
+            }
+        }
+
+        final TypedArray appearance = context.obtainStyledAttributes(textAppearanceId, EXTRA_TEXT_APPEARANCE);
+        if (appearance != null) {
+            int lineSpacingExtra = 0;
+            float lineSpacingMultiplier = 1;
+            for (int n = 0; n < appearance.getIndexCount(); n++) {
+                switch (EXTRA_TEXT_APPEARANCE[n]) {
+                    case android.R.attr.lineSpacingExtra:
+                        lineSpacingExtra = appearance.getDimensionPixelSize(n, lineSpacingExtra);
+                        break;
+                    case android.R.attr.lineSpacingMultiplier:
+                        lineSpacingMultiplier = appearance.getFloat(n, lineSpacingMultiplier);
+                        break;
+                }
+            }
+            appearance.recycle();
+            view.setLineSpacing(lineSpacingExtra, lineSpacingMultiplier);
+        }
+    }
+
     private static Boolean sToolbarCheck = null;
     private static Boolean sAppCompatViewCheck = null;
 
