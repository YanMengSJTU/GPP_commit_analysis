diff --git a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java
index 2622d94..0a5405d 100644
--- a/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java
+++ b/CalligraphySample/src/main/java/uk/co/chrisjenx/calligraphy/sample/CalligraphyApplication.java
@@ -5,6 +5,7 @@
 import io.github.inflationx.viewpump.ViewPump;
 import uk.co.chrisjenx.calligraphy3.CalligraphyConfig;
 import uk.co.chrisjenx.calligraphy3.CalligraphyInterceptor;
+import uk.co.chrisjenx.calligraphy3.FontMapper;
 
 /**
  * Created by chris on 06/05/2014.
@@ -20,6 +21,12 @@ public void onCreate() {
                         new CalligraphyConfig.Builder()
                                 .setDefaultFontPath("fonts/Roboto-ThinItalic.ttf")
                                 .setFontAttrId(R.attr.fontPath)
+                                .setFontMapper(new FontMapper() {
+                                    @Override
+                                    public String map(String font) {
+                                        return font;
+                                    }
+                                })
                                 .addCustomViewWithSetTypeface(CustomViewWithTypefaceSupport.class)
                                 .addCustomStyle(TextField.class, R.attr.textFieldStyle)
                                 .build()))
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/Calligraphy.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/Calligraphy.java
index 6b43fbf..42ccce2 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/Calligraphy.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/Calligraphy.java
@@ -144,6 +144,8 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
                     textViewFont = CalligraphyUtils.pullFontPathFromTheme(context, styleForTextView[0], mAttributeId);
             }
 
+            textViewFont = applyFontMapper(textViewFont);
+
             // Still need to defer the Native action bar, appcompat-v7:21+ uses the Toolbar underneath. But won't match these anyway.
             final boolean deferred = matchesResourceIdName(view, ACTION_BAR_TITLE) || matchesResourceIdName(view, ACTION_BAR_SUBTITLE);
 
@@ -160,6 +162,7 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
         // Try to set typeface for custom views using interface method or via reflection if available
         if (view instanceof HasTypeface) {
             String textViewFont = resolveFontPath(context, attrs);
+            textViewFont = applyFontMapper(textViewFont);
             Typeface typeface = getDefaultTypeface(context, textViewFont);
             if (typeface != null) {
                 ((HasTypeface) view).setTypeface(typeface);
@@ -167,6 +170,7 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
         } else if (mCalligraphyConfig.isCustomViewTypefaceSupport() && mCalligraphyConfig.isCustomViewHasTypeface(view)) {
             final Method setTypeface = ReflectionUtils.getMethod(view.getClass(), "setTypeface");
             String fontPath = resolveFontPath(context, attrs);
+            fontPath = applyFontMapper(fontPath);
             Typeface typeface = getDefaultTypeface(context, fontPath);
             if (setTypeface != null && typeface != null) {
                 ReflectionUtils.invokeMethod(view, setTypeface, typeface);
@@ -205,6 +209,11 @@ private String resolveFontPath(Context context, AttributeSet attrs) {
         return textViewFont;
     }
 
+    private String applyFontMapper(String textViewFont) {
+        FontMapper fontMapper = mCalligraphyConfig.getFontMapper();
+        return fontMapper != null ? fontMapper.map(textViewFont) : textViewFont;
+    }
+
     private static class ToolbarLayoutListener implements ViewTreeObserver.OnGlobalLayoutListener {
 
         static String BLANK = " ";
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/CalligraphyConfig.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/CalligraphyConfig.java
index d5d9642..271c09e 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/CalligraphyConfig.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/CalligraphyConfig.java
@@ -85,6 +85,10 @@ private static void addAppCompatViews() {
      * @see CalligraphyConfig.Builder#addCustomViewWithSetTypeface(Class)
      */
     private final Set<Class<?>> hasTypefaceViews;
+    /**
+     * An object that can map a resolved font name to another font name.
+     */
+    private final FontMapper mFontMapper;
 
     private CalligraphyConfig(Builder builder) {
         mIsFontSet = builder.isFontSet;
@@ -95,6 +99,7 @@ private CalligraphyConfig(Builder builder) {
         tempMap.putAll(builder.mStyleClassMap);
         mClassStyleAttributeMap = Collections.unmodifiableMap(tempMap);
         hasTypefaceViews = Collections.unmodifiableSet(builder.mHasTypefaceClasses);
+        mFontMapper = builder.fontMapper;
     }
 
     /**
@@ -130,6 +135,10 @@ public int getAttrId() {
         return mAttrId;
     }
 
+    public FontMapper getFontMapper() {
+        return mFontMapper;
+    }
+
     public static class Builder {
         /**
          * Default AttrID if not set.
@@ -158,6 +167,8 @@ public int getAttrId() {
 
         private Set<Class<?>> mHasTypefaceClasses = new HashSet<>();
 
+        private FontMapper fontMapper;
+
         /**
          * This defaults to R.attr.fontPath. So only override if you want to use your own attrId.
          *
@@ -213,6 +224,11 @@ public Builder addCustomViewWithSetTypeface(Class<?> clazz) {
             return this;
         }
 
+        public Builder setFontMapper(FontMapper fontMapper) {
+            this.fontMapper = fontMapper;
+            return this;
+        }
+
         public CalligraphyConfig build() {
             this.isFontSet = !TextUtils.isEmpty(fontAssetPath);
             return new CalligraphyConfig(this);
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/FontMapper.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/FontMapper.java
new file mode 100644
index 0000000..ada8294
--- /dev/null
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy3/FontMapper.java
@@ -0,0 +1,5 @@
+package uk.co.chrisjenx.calligraphy3;
+
+public interface FontMapper {
+    String map(String font);
+}
