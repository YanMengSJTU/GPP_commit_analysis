diff --git a/CHANGELOG.md b/CHANGELOG.md
index e53d1dd..11e6cf4 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,4 +1,7 @@
-#Changelog
+# Changelog
+
+# 2.3.0 (11/05/2017)
+- Fix Toolbar TextView's layout race condition. [@ansman](https://github.com/ansman) #386, #368, #327, #280, #304, #363
 
 #2.2.2 (01/10/2016)
 - Custom font is now applied when it's set in the android:textAppearance inside a theme style.
@@ -10,19 +13,19 @@
 - Added AppCompat Styles (AppCompatTextView will now pickup textViewStyle etc). Thanks @paul-turner
 - Fix for Toolbar not inflating `TextView`s upfront.
 
-#2.1.0 (27/04/2015)
+# 2.1.0 (27/04/2015)
 - Fixed #155, We now clone correctly.
 - Added Styles for Custom Views. (`builder.addCustomStyle(ToggleButton.class, android.R.attr.buttonStyleToggle)`)
 
-#2.0.2 (05/01/2015)
+# 2.0.2 (05/01/2015)
 - Fixed `CalligraphyConfig.Builder` missing return statements.
 - Fixed `createView()` getting the wrong parent context, Fixed: #135, #120
 
-#2.0.1 (28/01/2014)
+# 2.0.1 (28/01/2014)
 - Throw exception on passing null into `CalligraphySpan`
 - Fixed memory bug with `Toolbar`. [@dlew](https://github.com/dlew)
 
-#2.0.0 (16/01/2014)
+# 2.0.0 (16/01/2014)
 **Breaking changes**
 This is a massive rewrite of the interception model. Look at `CalligraphyLayoutInflater` and
 `CalligraphyConfig` for more information on options and changes.
@@ -38,42 +41,42 @@ Notable changes:
 - We wrap Factory not disturbing underlying factory and layout inflater invocation.
 - Better support for `cloneInContext()` which the compat library uses heavily.
 
-#1.2.0 (20/10/2014)
+# 1.2.0 (20/10/2014)
 - Fixes issues with `appcompat-v7:21+` (uses underlying `Toolbar` impl).
 - Lollipop support.
 - Fast path view with font already set by us.
 
-#1.1.0 (02/08/2014)
+# 1.1.0 (02/08/2014)
 - Fixes ActionBar Title/SubTitle `textStyles`.
 - Fixes `textAllCaps` bug, now works correctly.
 - Fixes some `Spannable` issues reported, we are more careful what we apply `Spannable`'s too now.
 - Fixes missing Typeface on hint text on `EditText`/`AutoComplete`.
 - Fixes empty source and javadoc jars on maven.
 
-#1.0.0 (05/07/2014)
+# 1.0.0 (05/07/2014)
 - Added ActionBar Title/SubTitle support.
 - Toast support via default style/or TextView theme style.
 - Removed FontFamily parsing as it lead to users not being able to use `fontFamily`
 - Added TextAppearance Support - Thanks [@codebutler](https://github.com/codebutler) & [@loganj](https://github.com/loganj)
 - Default Font no longer required.
 
-#0.8/9 (Skipped major API change)
+# 0.8/9 (Skipped major API change)
 
-#0.7.1 (22/04/2014)
+# 0.7.1 (22/04/2014)
 - Fixed Resources not found Exception - [@Smuldr](https://github.com/Smuldr)
 
-#0.7.0 (28/01/2014)
+# 0.7.0 (28/01/2014)
 - Added Anti-aliasing support
 - Added custom font attribute support - Thanks [@Roman Zhilich](https://github.com/RomanZhilich)
 - Changed Maven groupId to `uk.co.chrisjenx` artifact is now `calligraphy`. `compile 'uk.co.chrisjenx:calligraphy:0.+'`
 
-#0.6.0 (02/01/2014)
+# 0.6.0 (02/01/2014)
 - Supports all Android implementations of `TextView`
 - Supports Custom `TextView`s - Thanks [@mironov-nsk](https://github.com/mironov-nsk)
 - Caches none found fonts as null
 
-#0.5.0
+# 0.5.0
 - Added support for `Button` class
 
-#0.4.0
+# 0.4.0
 - Initial Release
diff --git a/CalligraphySample/build.gradle b/CalligraphySample/build.gradle
index ec3a085..0cab54a 100644
--- a/CalligraphySample/build.gradle
+++ b/CalligraphySample/build.gradle
@@ -22,8 +22,9 @@ dependencies {
 	compile project(':calligraphy')
 	compile "com.android.support:appcompat-v7:$androidAppCompatVersion"
 
-	compile 'com.jakewharton:butterknife:8.2.1'
+	compile 'com.jakewharton:butterknife:8.5.1'
 
-	debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
-	releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
+//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
+	debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
+	releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
 }
\ No newline at end of file
diff --git a/README.md b/README.md
index 40e0907..3b50c08 100644
--- a/README.md
+++ b/README.md
@@ -24,12 +24,17 @@ allprojects {
 }
 
 dependencies {
-    compile 'com.minyushov.calligraphy:calligraphy:2.2.2'
+    compile 'com.minyushov.calligraphy:calligraphy:2.3.0'
 }
 ```
 ### Add Fonts
 
-Add your custom fonts to `assets/` all font definitions are relative to this path. 
+Add your custom fonts to `assets/`. All font definitions are relative to this path.
+
+Assuming that you are using Gradle you should create the assets directory under `src/main/` in your project directory if it does not already exist.
+As it's popular to use multi-project build with Gradle the path is usually `app/src/main/assets/`, where `app` is the project name.
+
+You might consider creating a `fonts/` subdirectory in the assets directory (as in examples).
 
 ### Usage
 
@@ -130,7 +135,7 @@ http://schemas.android.com/tools"`. See https://code.google.com/p/android/issues
 ```
 
 
-#FAQ
+# FAQ
 
 ### Font Resolution 
 
@@ -186,7 +191,7 @@ Both have a method called `setSwitchTypeface` that sets the typeface within the
 
 
 
-#Collaborators
+# Collaborators
 
 - [@mironov-nsk](https://github.com/mironov-nsk)
 - [@Roman Zhilich](https://github.com/RomanZhilich)
@@ -194,14 +199,15 @@ Both have a method called `setSwitchTypeface` that sets the typeface within the
 - [@Codebutler](https://github.com/codebutler)
 - [@loganj](https://github.com/loganj)
 - [@dlew](https://github.com/dlew)
+- [@ansman](https://github.com/ansman)
 
-#Note
+# Note
 
 This library was created because it is currently not possible to declare a custom font in XML files in Android.
 
 If you feel this should be possible to do, please star [this issue](https://code.google.com/p/android/issues/detail?id=88945) on the official Android bug tracker.
 
-#Licence
+# Licence
 
     Copyright 2013 Christopher Jenkins
     
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
index 5b965e1..94e7b1e 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
@@ -1,18 +1,14 @@
 package uk.co.chrisjenx.calligraphy;
 
 import android.annotation.SuppressLint;
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Typeface;
-import android.os.Build;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
-import android.view.ViewTreeObserver;
 import android.widget.TextView;
 
-import java.lang.ref.WeakReference;
 import java.lang.reflect.Method;
 
 class CalligraphyFactory {
@@ -149,8 +145,7 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
         // AppCompat API21+ The ActionBar doesn't inflate default Title/SubTitle, we need to scan the
         // Toolbar(Which underlies the ActionBar) for its children.
         if (CalligraphyUtils.canCheckForV7Toolbar() && view instanceof android.support.v7.widget.Toolbar) {
-            final Toolbar toolbar = (Toolbar) view;
-            toolbar.getViewTreeObserver().addOnGlobalLayoutListener(new ToolbarLayoutListener(this, context, toolbar));
+            applyFontToToolbar((Toolbar) view);
         }
 
         // Try to set typeface for custom views using interface method or via reflection if available
@@ -200,55 +195,27 @@ private String resolveFontPath(Context context, AttributeSet attrs, int styleAtt
         return textViewFont;
     }
 
-    private static class ToolbarLayoutListener implements ViewTreeObserver.OnGlobalLayoutListener {
-
-        static String BLANK = " ";
-
-        private final CalligraphyFactory mCalligraphyFactory;
-        private final WeakReference<Context> mContextRef;
-        private final WeakReference<Toolbar> mToolbarReference;
-        private final CharSequence originalSubTitle;
-
-        private ToolbarLayoutListener(final CalligraphyFactory calligraphyFactory,
-                                      final Context context, Toolbar toolbar) {
-            mCalligraphyFactory = calligraphyFactory;
-            mContextRef = new WeakReference<>(context);
-            mToolbarReference = new WeakReference<>(toolbar);
-            originalSubTitle = toolbar.getSubtitle();
-            toolbar.setSubtitle(BLANK);
-        }
-
-        @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
-        @Override public void onGlobalLayout() {
-            final Toolbar toolbar = mToolbarReference.get();
-            final Context context = mContextRef.get();
-            if (toolbar == null) return;
-            if (mCalligraphyFactory == null || context == null) {
-                toolbar.setSubtitle(originalSubTitle);
-                removeSelf(toolbar);
-                return;
-            }
-
-            int childCount = toolbar.getChildCount();
-            if (childCount != 0) {
-                // Process children, defer draw as it has set the typeface.
-                for (int i = 0; i < childCount; i++) {
-                    mCalligraphyFactory.onViewCreated(toolbar.getChildAt(i), context, null);
-                }
-            }
-            removeSelf(toolbar);
-            toolbar.setSubtitle(originalSubTitle);
-        }
-
-        private void removeSelf(final Toolbar toolbar) {// Our dark deed is done
-            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
-                //noinspection deprecation
-                toolbar.getViewTreeObserver().removeGlobalOnLayoutListener(this);
-            } else {
-                toolbar.getViewTreeObserver().removeOnGlobalLayoutListener(this);
-            }
+    /**
+     * Will forceably set text on the views then remove ones that didn't have copy.
+     *
+     * @param view toolbar view.
+     */
+    private void applyFontToToolbar(final Toolbar view) {
+        final CharSequence previousTitle = view.getTitle();
+        final CharSequence previousSubtitle = view.getSubtitle();
+        // The toolbar inflates both the title and the subtitle views lazily but luckily they do it
+        // synchronously when you set a title and a subtitle programmatically.
+        // So we set a title and a subtitle to something, then get the views, then revert.
+        view.setTitle(" ");
+        view.setSubtitle(" ");
+
+        // Iterate through the children to run post inflation on them
+        final int childCount = view.getChildCount();
+        for (int i = 0; i < childCount; i++) {
+            onViewCreated(view.getChildAt(i), view.getContext(), null);
         }
-
+        // Remove views from view if they didn't have copy set.
+        view.setTitle(previousTitle);
+        view.setSubtitle(previousSubtitle);
     }
-
 }
diff --git a/gradle.properties b/gradle.properties
new file mode 100644
index 0000000..e69de29
