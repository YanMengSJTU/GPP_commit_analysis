diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java
index dd49e3f..caf8b66 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java
@@ -15,7 +15,6 @@
 import java.lang.reflect.Method;
 
 import androidx.appcompat.widget.Toolbar;
-import io.github.inflationx.viewpump.ReflectionUtils;
 
 class Calligraphy {
 
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/ReflectionUtils.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/ReflectionUtils.java
new file mode 100644
index 0000000..1f5ed80
--- /dev/null
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/ReflectionUtils.java
@@ -0,0 +1,34 @@
+package io.github.inflationx.calligraphy3;
+
+import android.util.Log;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
+class ReflectionUtils {
+
+    private static final String TAG = ReflectionUtils.class.getSimpleName();
+
+    static Method getMethod(Class clazz, String methodName) {
+        final Method[] methods = clazz.getMethods();
+        for (Method method : methods) {
+            if (method.getName().equals(methodName)) {
+                method.setAccessible(true);
+                return method;
+            }
+        }
+        return null;
+    }
+
+    static void invokeMethod(Object object, Method method, Object... args) {
+        try {
+            if (method == null) return;
+            method.invoke(object, args);
+        } catch (IllegalAccessException e) {
+            Log.d(TAG, "Can't access method using reflection", e);
+        } catch (InvocationTargetException e) {
+            Log.d(TAG, "Can't invoke method using reflection", e);
+        }
+    }
+}
