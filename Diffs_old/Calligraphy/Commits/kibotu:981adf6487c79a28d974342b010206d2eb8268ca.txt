diff --git a/CHANGELOG.md b/CHANGELOG.md
index 857aa92..063a2a3 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,9 @@
 # Changelog
 
+## 4.0.0 (21.8.2018)
+
+- migrated to androidx
+
 ## 3.0.0 (05/01/2017)
 - **BREAKING CHANGE** This library has been refactored into a [ViewPump](https://github.com/InflationX/ViewPump) interceptor 
 
diff --git a/CalligraphySample/build.gradle b/CalligraphySample/build.gradle
index 1466285..f38a211 100644
--- a/CalligraphySample/build.gradle
+++ b/CalligraphySample/build.gradle
@@ -1,12 +1,13 @@
 apply plugin: 'com.android.application'
 
 android {
-    compileSdkVersion 24
-    buildToolsVersion "24.0.0"
+    compileSdkVersion 28
+    buildToolsVersion "28.0.2"
 
     defaultConfig {
+        applicationId "io.github.inflationx.calligraphy3.sample"
         minSdkVersion 14
-        targetSdkVersion 24
+        targetSdkVersion 28
         versionCode project.ext.versionCodeInt
         versionName version
     }
@@ -20,17 +21,21 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
         }
     }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 }
 
 dependencies {
-    compile project(':calligraphy')
-    compile 'io.github.inflationx:viewpump:1.0.0'
-    compile 'com.android.support:support-v4:24.0.0'
-    compile 'com.android.support:appcompat-v7:24.0.0'
+    implementation project(':calligraphy')
+    implementation 'io.github.inflationx:viewpump:1.0.0'
+    implementation 'androidx.appcompat:appcompat:1.0.0-rc02'
 
-    compile 'com.jakewharton:butterknife:8.2.1'
+    implementation 'com.jakewharton:butterknife:9.0.0-SNAPSHOT'
+    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-SNAPSHOT'
 
-//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
-    debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
-    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
+    debugImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
+    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
 }
diff --git a/CalligraphySample/src/main/AndroidManifest.xml b/CalligraphySample/src/main/AndroidManifest.xml
index fa41d17..28ec502 100644
--- a/CalligraphySample/src/main/AndroidManifest.xml
+++ b/CalligraphySample/src/main/AndroidManifest.xml
@@ -4,13 +4,13 @@
     xmlns:android="http://schemas.android.com/apk/res/android">
 
     <application
-        android:name="io.github.inflationx.calligraphy3.sample.CalligraphyApplication"
+        android:name=".CalligraphyApplication"
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
         android:theme="@style/AppTheme">
         <activity
-            android:name="io.github.inflationx.calligraphy3.sample.MainActivity"
+            android:name=".MainActivity"
             android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN"/>
diff --git a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CalligraphyApplication.java b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CalligraphyApplication.java
index 97b0a5b..3ec203e 100644
--- a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CalligraphyApplication.java
+++ b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CalligraphyApplication.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3.sample;
 
+
 import android.app.Application;
 
 import io.github.inflationx.calligraphy3.CalligraphyConfig;
diff --git a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomTextView.java b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomTextView.java
index 9b29985..688dacb 100644
--- a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomTextView.java
+++ b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomTextView.java
@@ -1,10 +1,12 @@
 package io.github.inflationx.calligraphy3.sample;
 
+
 import android.content.Context;
 import android.util.AttributeSet;
-import android.widget.TextView;
 
-public class CustomTextView extends TextView {
+import androidx.appcompat.widget.AppCompatTextView;
+
+public class CustomTextView extends AppCompatTextView {
 
     public CustomTextView(Context context) {
         super(context);
diff --git a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomViewWithTypefaceSupport.java b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomViewWithTypefaceSupport.java
index 59b21e8..2e54a26 100644
--- a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomViewWithTypefaceSupport.java
+++ b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/CustomViewWithTypefaceSupport.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3.sample;
 
+
 import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Canvas;
diff --git a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/MainActivity.java b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/MainActivity.java
index a4d19ff..18497d0 100644
--- a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/MainActivity.java
+++ b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/MainActivity.java
@@ -4,12 +4,11 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
 
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
 import io.github.inflationx.viewpump.ViewPumpContextWrapper;
 
-import static butterknife.ButterKnife.findById;
 
 public class MainActivity extends AppCompatActivity {
 
@@ -17,7 +16,7 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        final Toolbar toolbar = findById(this, R.id.toolbar);
+        final Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
 
         // Inject pragmatically
@@ -37,14 +36,16 @@ public void run() {
         }, 1000);
 
         handler.postDelayed(new Runnable() {
-            @Override public void run() {
+            @Override
+            public void run() {
                 toolbar.setTitle(null);
                 toolbar.setSubtitle("Added subtitle");
             }
         }, 2000);
 
         handler.postDelayed(new Runnable() {
-            @Override public void run() {
+            @Override
+            public void run() {
                 toolbar.setTitle("Calligraphy added back");
                 toolbar.setSubtitle("Added subtitle");
             }
diff --git a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/PlaceholderFragment.java b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/PlaceholderFragment.java
index 29aa813..cec2ec0 100644
--- a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/PlaceholderFragment.java
+++ b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/PlaceholderFragment.java
@@ -1,15 +1,17 @@
 package io.github.inflationx.calligraphy3.sample;
 
-import android.app.AlertDialog;
+
 import android.content.DialogInterface;
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewStub;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AlertDialog;
+import androidx.fragment.app.Fragment;
 import butterknife.ButterKnife;
 import butterknife.OnClick;
 
@@ -23,19 +25,19 @@ public static Fragment getInstance() {
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle state) {
+    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle state) {
         return inflater.inflate(R.layout.fragment_main, container, false);
     }
 
     @Override
-    public void onViewCreated(View view, Bundle savedInstanceState) {
+    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         ButterKnife.bind(this, view);
 
-        ViewStub stub = ButterKnife.findById(view, R.id.stub);
+        ViewStub stub = view.findViewById(R.id.stub);
         stub.inflate();
 
-        ViewStub stubWithFontPath = ButterKnife.findById(view, R.id.stub_with_font_path);
+        ViewStub stubWithFontPath = view.findViewById(R.id.stub_with_font_path);
         stubWithFontPath.inflate();
     }
 
diff --git a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/TextField.java b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/TextField.java
index 6620e63..f0cc1a9 100644
--- a/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/TextField.java
+++ b/CalligraphySample/src/main/java/io/github/inflationx/calligraphy3/sample/TextField.java
@@ -1,17 +1,18 @@
 package io.github.inflationx.calligraphy3.sample;
 
+
 import android.content.Context;
 import android.util.AttributeSet;
-import android.widget.TextView;
+
+import androidx.appcompat.widget.AppCompatTextView;
 
 /**
  * Created by chris on 17/03/15.
  * For Calligraphy.
  */
-public class TextField extends TextView {
+public class TextField extends AppCompatTextView {
 
     public TextField(final Context context, final AttributeSet attrs) {
         super(context, attrs, R.attr.textFieldStyle);
     }
-
-}
+}
\ No newline at end of file
diff --git a/README.md b/README.md
index 619f6d1..2ef8aff 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-Calligraphy
+Calligraphy [![API](https://img.shields.io/badge/API-15%2B-brightgreen.svg?style=flat)](https://android-arsenal.com/api?level=14) [![Gradle Version](https://img.shields.io/badge/gradle-4.10.2-green.svg)](https://docs.gradle.org/current/release-notes) [![androidx](https://img.shields.io/badge/androidx-1.0.0--rc02-brightgreen.svg)](https://developer.android.com/topic/libraries/support-library/refactor)
 ===========
 
 [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Calligraphy-blue.svg?style=flat)](http://android-arsenal.com/details/1/163)
diff --git a/build.gradle b/build.gradle
index 2bc2f4b..a2d3433 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,28 +1,25 @@
-// Top-level build file where you can add configuration options common to all sub-projects/modules.
 buildscript {
   repositories {
+    google()
     jcenter()
   }
   dependencies {
-    classpath 'com.android.tools.build:gradle:2.2.1'
+    classpath 'com.android.tools.build:gradle:3.3.0-alpha11'
+    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
   }
 }
 
 allprojects {
   repositories {
+    google()
     mavenLocal()
     jcenter()
     maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
   }
   // Is Release Build?
-  version = getProperty('VERSION_NAME');
+  version = getProperty('VERSION_NAME')
   ext {
     isReleaseVersion = has("release")
     versionCodeInt = getProperty('VERSION_CODE').toInteger()
   }
-}
-
-task wrapper(type: Wrapper) {
-  gradleVersion = '3.3'
-  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
-}
+}
\ No newline at end of file
diff --git a/calligraphy/build.gradle b/calligraphy/build.gradle
index 1f62e60..b6d14a5 100644
--- a/calligraphy/build.gradle
+++ b/calligraphy/build.gradle
@@ -1,12 +1,13 @@
 apply plugin: 'com.android.library'
+apply plugin: 'com.github.dcendents.android-maven'
 
 android {
-    compileSdkVersion 25
-    buildToolsVersion "25.0.1"
+    compileSdkVersion 28
+    buildToolsVersion "28.0.2"
 
     defaultConfig {
         minSdkVersion 14
-        targetSdkVersion 25
+        targetSdkVersion 28
         versionCode project.ext.versionCodeInt
         versionName version
         consumerProguardFiles 'consumer-proguard-rules.txt'
@@ -18,11 +19,19 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'consumer-proguard-rules.txt'
         }
     }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 }
 
 dependencies {
-    provided 'com.android.support:appcompat-v7:25.0.1'
-    compile 'io.github.inflationx:viewpump:1.0.0'
+    compileOnly 'androidx.appcompat:appcompat:1.0.0-rc02'
+    implementation 'io.github.inflationx:viewpump:1.0.0'
+
+    testImplementation 'androidx.annotation:annotation:1.0.0-rc02'
+    testImplementation 'androidx.test:runner:1.1.0-alpha4'
 }
 
-apply from: rootProject.file('gradle/deploy.gradle')
+//apply from: rootProject.file('gradle/deploy.gradle')
\ No newline at end of file
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java
index 156209f..f33e2c6 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/Calligraphy.java
@@ -1,11 +1,11 @@
 package io.github.inflationx.calligraphy3;
 
+
 import android.annotation.SuppressLint;
 import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Typeface;
 import android.os.Build;
-import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.util.AttributeSet;
 import android.view.View;
@@ -15,6 +15,7 @@
 import java.lang.ref.WeakReference;
 import java.lang.reflect.Method;
 
+import androidx.appcompat.widget.Toolbar;
 import io.github.inflationx.viewpump.ReflectionUtils;
 
 class Calligraphy {
@@ -57,7 +58,7 @@
     protected static boolean isActionBarTitle(TextView view) {
         if (matchesResourceIdName(view, ACTION_BAR_TITLE)) return true;
         if (parentIsToolbarV7(view)) {
-            final android.support.v7.widget.Toolbar parent = (android.support.v7.widget.Toolbar) view.getParent();
+            final Toolbar parent = (Toolbar) view.getParent();
             return TextUtils.equals(parent.getTitle(), view.getText());
         }
         return false;
@@ -73,14 +74,14 @@ protected static boolean isActionBarTitle(TextView view) {
     protected static boolean isActionBarSubTitle(TextView view) {
         if (matchesResourceIdName(view, ACTION_BAR_SUBTITLE)) return true;
         if (parentIsToolbarV7(view)) {
-            final android.support.v7.widget.Toolbar parent = (android.support.v7.widget.Toolbar) view.getParent();
+            final Toolbar parent = (Toolbar) view.getParent();
             return TextUtils.equals(parent.getSubtitle(), view.getText());
         }
         return false;
     }
 
     protected static boolean parentIsToolbarV7(View view) {
-        return CalligraphyUtils.canCheckForV7Toolbar() && view.getParent() != null && (view.getParent() instanceof android.support.v7.widget.Toolbar);
+        return CalligraphyUtils.canCheckForV7Toolbar() && view.getParent() != null && (view.getParent() instanceof Toolbar);
     }
 
     /**
@@ -154,7 +155,7 @@ void onViewCreatedInternal(View view, final Context context, AttributeSet attrs)
 
         // AppCompat API21+ The ActionBar doesn't inflate default Title/SubTitle, we need to scan the
         // Toolbar(Which underlies the ActionBar) for its children.
-        if (CalligraphyUtils.canCheckForV7Toolbar() && view instanceof android.support.v7.widget.Toolbar) {
+        if (CalligraphyUtils.canCheckForV7Toolbar() && view instanceof Toolbar) {
             final Toolbar toolbar = (Toolbar) view;
             toolbar.getViewTreeObserver().addOnGlobalLayoutListener(new ToolbarLayoutListener(this, context, toolbar));
         }
@@ -233,7 +234,8 @@ private ToolbarLayoutListener(final Calligraphy calligraphy,
         }
 
         @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
-        @Override public void onGlobalLayout() {
+        @Override
+        public void onGlobalLayout() {
             final Toolbar toolbar = mToolbarReference.get();
             final Context context = mContextRef.get();
             final Calligraphy factory = mCalligraphyFactory.get();
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyConfig.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyConfig.java
index 4231f1d..9d8900e 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyConfig.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyConfig.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3;
 
+
 import android.text.TextUtils;
 import android.view.View;
 import android.widget.AutoCompleteTextView;
@@ -17,6 +18,15 @@
 import java.util.Map;
 import java.util.Set;
 
+import androidx.appcompat.widget.AppCompatAutoCompleteTextView;
+import androidx.appcompat.widget.AppCompatButton;
+import androidx.appcompat.widget.AppCompatCheckBox;
+import androidx.appcompat.widget.AppCompatCheckedTextView;
+import androidx.appcompat.widget.AppCompatEditText;
+import androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView;
+import androidx.appcompat.widget.AppCompatRadioButton;
+import androidx.appcompat.widget.AppCompatTextView;
+
 /**
  * Created by chris on 20/12/2013
  * Project: Calligraphy
@@ -50,14 +60,14 @@
      * this adds those classes to the style lookup map
      */
     private static void addAppCompatViews() {
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatTextView.class, android.R.attr.textViewStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatButton.class, android.R.attr.buttonStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatEditText.class, android.R.attr.editTextStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatAutoCompleteTextView.class, android.R.attr.autoCompleteTextViewStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatMultiAutoCompleteTextView.class, android.R.attr.autoCompleteTextViewStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatCheckBox.class, android.R.attr.checkboxStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatRadioButton.class, android.R.attr.radioButtonStyle);
-        DEFAULT_STYLES.put(android.support.v7.widget.AppCompatCheckedTextView.class, android.R.attr.checkedTextViewStyle);
+        DEFAULT_STYLES.put(AppCompatTextView.class, android.R.attr.textViewStyle);
+        DEFAULT_STYLES.put(AppCompatButton.class, android.R.attr.buttonStyle);
+        DEFAULT_STYLES.put(AppCompatEditText.class, android.R.attr.editTextStyle);
+        DEFAULT_STYLES.put(AppCompatAutoCompleteTextView.class, android.R.attr.autoCompleteTextViewStyle);
+        DEFAULT_STYLES.put(AppCompatMultiAutoCompleteTextView.class, android.R.attr.autoCompleteTextViewStyle);
+        DEFAULT_STYLES.put(AppCompatCheckBox.class, android.R.attr.checkboxStyle);
+        DEFAULT_STYLES.put(AppCompatRadioButton.class, android.R.attr.radioButtonStyle);
+        DEFAULT_STYLES.put(AppCompatCheckedTextView.class, android.R.attr.checkedTextViewStyle);
     }
 
     /**
@@ -82,6 +92,7 @@ private static void addAppCompatViews() {
     private final Map<Class<? extends TextView>, Integer> mClassStyleAttributeMap;
     /**
      * Collection of custom non-{@code TextView}'s registered for applying typeface during inflation
+     *
      * @see CalligraphyConfig.Builder#addCustomViewWithSetTypeface(Class)
      */
     private final Set<Class<?>> hasTypefaceViews;
@@ -196,13 +207,13 @@ public Builder setDefaultFontPath(String defaultFontAssetPath) {
         /**
          * Add a custom style to get looked up. If you use a custom class that has a parent style
          * which is not part of the default android styles you will need to add it here.
-         *
+         * <p>
          * The Calligraphy inflater is unaware of custom styles in your custom classes. We use
          * the class type to look up the style attribute in the theme resources.
-         *
+         * <p>
          * So if you had a {@code MyTextField.class} which looked up it's default style as
          * {@code R.attr.textFieldStyle} you would add those here.
-         *
+         * <p>
          * {@code builder.addCustomStyle(MyTextField.class,R.attr.textFieldStyle}
          *
          * @param styleClass             the class that related to the parent styleResource. null is ignored.
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyInterceptor.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyInterceptor.java
index 6bcdee3..9209b0a 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyInterceptor.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyInterceptor.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3;
 
+
 import android.view.View;
 
 import io.github.inflationx.viewpump.InflateResult;
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyTypefaceSpan.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyTypefaceSpan.java
index a7a9ee5..a66c15f 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyTypefaceSpan.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyTypefaceSpan.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3;
 
+
 import android.graphics.Paint;
 import android.graphics.Typeface;
 import android.text.TextPaint;
@@ -12,7 +13,7 @@ public CalligraphyTypefaceSpan(final Typeface typeface) {
         if (typeface == null) {
             throw new IllegalArgumentException("typeface is null");
         }
-        
+
         this.typeface = typeface;
     }
 
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyUtils.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyUtils.java
index 2288107..14cba6d 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyUtils.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/CalligraphyUtils.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3;
 
+
 import android.content.Context;
 import android.content.res.AssetManager;
 import android.content.res.Resources;
@@ -59,7 +60,7 @@ public static boolean applyFontToTextView(final TextView textView, final Typefac
     /**
      * Applies a Typeface to a TextView, if deferred,its recommend you don't call this multiple
      * times, as this adds a TextWatcher.
-     *
+     * <p>
      * Deferring should really only be used on tricky views which get Typeface set by the system at
      * weird times.
      *
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/HasTypeface.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/HasTypeface.java
index 310cfc5..d31e685 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/HasTypeface.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/HasTypeface.java
@@ -5,10 +5,10 @@
 /**
  * There are two ways to set typeface for custom views:
  * <ul>
- *     <li>Implementing this interface. You should only implements {@link #setTypeface(Typeface)} method.</li>
- *     <li>Or via reflection. If custom view already has setTypeface method you can
- *     register it during Calligraphy configuration
- *     {@link CalligraphyConfig.Builder#addCustomViewWithSetTypeface(Class)}</li>
+ * <li>Implementing this interface. You should only implements {@link #setTypeface(Typeface)} method.</li>
+ * <li>Or via reflection. If custom view already has setTypeface method you can
+ * register it during Calligraphy configuration
+ * {@link CalligraphyConfig.Builder#addCustomViewWithSetTypeface(Class)}</li>
  * </ul>
  * First way is faster but encourage more effort from the developer to implements interface. Second one
  * requires less effort but works slowly cause reflection calls.
diff --git a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/TypefaceUtils.java b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/TypefaceUtils.java
index d88e7e0..2334ae3 100644
--- a/calligraphy/src/main/java/io/github/inflationx/calligraphy3/TypefaceUtils.java
+++ b/calligraphy/src/main/java/io/github/inflationx/calligraphy3/TypefaceUtils.java
@@ -1,5 +1,6 @@
 package io.github.inflationx.calligraphy3;
 
+
 import android.content.res.AssetManager;
 import android.graphics.Typeface;
 import android.util.Log;
diff --git a/gradle.properties b/gradle.properties
index 6429b75..f10e6a8 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -33,3 +33,8 @@ POM_LICENCE_DIST=repo
 POM_DEVELOPER_ID=chrisjenx
 POM_DEVELOPER_NAME=Christopher Jenkins
 POM_DEVELOPER_EMAIL=chris.mark.jenkins@gmail.com
+
+
+# https://developer.android.com/topic/libraries/support-library/androidx-overview
+android.useAndroidX=true
+android.enableJetifier=true
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 7db8d7e..29953ea 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index ce4ba66..e0b3fb8 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,5 @@
-#Thu Feb 09 20:44:47 PST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-bin.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/gradlew b/gradlew
index 4453cce..cccdd3d 100755
--- a/gradlew
+++ b/gradlew
@@ -33,11 +33,11 @@ DEFAULT_JVM_OPTS=""
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -155,7 +155,7 @@ if $cygwin ; then
 fi
 
 # Escape application args
-save ( ) {
+save () {
     for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
     echo " "
 }
