diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
index 47eca18..277144e 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
@@ -13,6 +13,7 @@
 import android.text.TextUtils;
 import android.text.TextWatcher;
 import android.util.AttributeSet;
+import android.util.SparseArray;
 import android.util.TypedValue;
 import android.widget.TextView;
 
@@ -22,6 +23,8 @@
  */
 public final class CalligraphyUtils {
 
+    private static final SparseArray<int[]> ATTRIBUTE_ARRAY_CACHE = new SparseArray<>(10);
+
     /**
      * Applies a custom typeface span to the text.
      *
@@ -57,7 +60,7 @@ public static boolean applyFontToTextView(final TextView textView, final Typefac
     /**
      * Applies a Typeface to a TextView, if deferred,its recommend you don't call this multiple
      * times, as this adds a TextWatcher.
-     *
+     * <p/>
      * Deferring should really only be used on tricky views which get Typeface set by the system at
      * weird times.
      *
@@ -158,7 +161,8 @@ static String pullFontPathFromView(Context context, AttributeSet attrs, int attr
 
         final String attributeName;
         try {
-            attributeName = context.getResources().getResourceEntryName(attributeId);
+            attributeName = context.getResources()
+                                   .getResourceEntryName(attributeId);
         } catch (Resources.NotFoundException e) {
             // invalid attribute ID
             return null;
@@ -182,7 +186,7 @@ static String pullFontPathFromView(Context context, AttributeSet attrs, int attr
     static String pullFontPathFromStyle(Context context, AttributeSet attrs, int attributeId) {
         if (attributeId == -1 || attrs == null)
             return null;
-        final TypedArray typedArray = context.obtainStyledAttributes(attrs, new int[]{attributeId});
+        final TypedArray typedArray = context.obtainStyledAttributes(attrs, getAttributeArray(attributeId));
         if (typedArray != null) {
             try {
                 // First defined attribute
@@ -213,7 +217,7 @@ static String pullFontPathFromTextAppearance(final Context context, AttributeSet
         }
 
         int textAppearanceId = -1;
-        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, new int[]{android.R.attr.textAppearance});
+        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, getAttributeArray(android.R.attr.textAppearance));
         if (typedArrayAttr != null) {
             try {
                 textAppearanceId = typedArrayAttr.getResourceId(0, -1);
@@ -225,7 +229,7 @@ static String pullFontPathFromTextAppearance(final Context context, AttributeSet
             }
         }
 
-        final TypedArray textAppearanceAttrs = context.obtainStyledAttributes(textAppearanceId, new int[]{attributeId});
+        final TypedArray textAppearanceAttrs = context.obtainStyledAttributes(textAppearanceId, getAttributeArray(attributeId));
         if (textAppearanceAttrs != null) {
             try {
                 return textAppearanceAttrs.getString(0);
@@ -255,7 +259,7 @@ static String pullFontPathFromTheme(Context context, int styleAttrId, int attrib
         final TypedValue value = new TypedValue();
 
         theme.resolveAttribute(styleAttrId, value, true);
-        final TypedArray typedArray = theme.obtainStyledAttributes(value.resourceId, new int[]{attributeId});
+        final TypedArray typedArray = theme.obtainStyledAttributes(value.resourceId, getAttributeArray(attributeId));
         try {
             String font = typedArray.getString(0);
             return font;
@@ -285,7 +289,7 @@ static String pullFontPathFromTheme(Context context, int styleAttrId, int subSty
 
         theme.resolveAttribute(styleAttrId, value, true);
         int subStyleResId = -1;
-        final TypedArray parentTypedArray = theme.obtainStyledAttributes(value.resourceId, new int[]{subStyleAttrId});
+        final TypedArray parentTypedArray = theme.obtainStyledAttributes(value.resourceId, getAttributeArray(subStyleAttrId));
         try {
             subStyleResId = parentTypedArray.getResourceId(0, -1);
         } catch (Exception ignore) {
@@ -296,7 +300,7 @@ static String pullFontPathFromTheme(Context context, int styleAttrId, int subSty
         }
 
         if (subStyleResId == -1) return null;
-        final TypedArray subTypedArray = context.obtainStyledAttributes(subStyleResId, new int[]{attributeId});
+        final TypedArray subTypedArray = context.obtainStyledAttributes(subStyleResId, getAttributeArray(attributeId));
         if (subTypedArray != null) {
             try {
                 return subTypedArray.getString(0);
@@ -347,6 +351,16 @@ static boolean canAddV7AppCompatViews() {
         return sAppCompatViewCheck;
     }
 
+    private static int[] getAttributeArray(int attributeId) {
+        int[] array = ATTRIBUTE_ARRAY_CACHE.get(attributeId);
+
+        if (array == null) {
+            array = new int[]{attributeId};
+            ATTRIBUTE_ARRAY_CACHE.put(attributeId, array);
+        }
+
+        return array;
+    }
 
     private CalligraphyUtils() {
     }
