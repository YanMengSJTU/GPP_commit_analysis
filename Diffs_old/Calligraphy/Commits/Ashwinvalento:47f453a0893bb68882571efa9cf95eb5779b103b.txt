diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
index 3a9caa1..efe08a9 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyFactory.java
@@ -94,10 +94,10 @@ protected static boolean matchesResourceIdName(View view, String matches) {
         return resourceEntryName.equalsIgnoreCase(matches);
     }
 
-    private final int mAttributeId;
+    private final int[] mAttributeId;
 
     public CalligraphyFactory(int attributeId) {
-        this.mAttributeId = attributeId;
+        this.mAttributeId = new int[]{attributeId};
     }
 
     /**
diff --git a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
index 47eca18..ab71cd9 100644
--- a/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
+++ b/calligraphy/src/main/java/uk/co/chrisjenx/calligraphy/CalligraphyUtils.java
@@ -22,6 +22,8 @@
  */
 public final class CalligraphyUtils {
 
+    public static final int[] ANDROID_ATTR_TEXT_APPEARANCE = new int[]{android.R.attr.textAppearance};
+
     /**
      * Applies a custom typeface span to the text.
      *
@@ -152,13 +154,13 @@ static void applyFontToTextView(final Context context, final TextView textView,
      * @param attributeId if -1 returns null.
      * @return null if attribute is not defined or added to View
      */
-    static String pullFontPathFromView(Context context, AttributeSet attrs, int attributeId) {
-        if (attributeId == -1 || attrs == null)
+    static String pullFontPathFromView(Context context, AttributeSet attrs, int[] attributeId) {
+        if (attributeId == null || attrs == null)
             return null;
 
         final String attributeName;
         try {
-            attributeName = context.getResources().getResourceEntryName(attributeId);
+            attributeName = context.getResources().getResourceEntryName(attributeId[0]);
         } catch (Resources.NotFoundException e) {
             // invalid attribute ID
             return null;
@@ -179,10 +181,10 @@ static String pullFontPathFromView(Context context, AttributeSet attrs, int attr
      * @param attributeId if -1 returns null.
      * @return null if attribute is not defined or found in the Style
      */
-    static String pullFontPathFromStyle(Context context, AttributeSet attrs, int attributeId) {
-        if (attributeId == -1 || attrs == null)
+    static String pullFontPathFromStyle(Context context, AttributeSet attrs, int[] attributeId) {
+        if (attributeId == null || attrs == null)
             return null;
-        final TypedArray typedArray = context.obtainStyledAttributes(attrs, new int[]{attributeId});
+        final TypedArray typedArray = context.obtainStyledAttributes(attrs, attributeId);
         if (typedArray != null) {
             try {
                 // First defined attribute
@@ -207,13 +209,13 @@ static String pullFontPathFromStyle(Context context, AttributeSet attrs, int att
      * @param attributeId if -1 returns null.
      * @return returns null if attribute is not defined or if no TextAppearance is found.
      */
-    static String pullFontPathFromTextAppearance(final Context context, AttributeSet attrs, int attributeId) {
-        if (attributeId == -1 || attrs == null) {
+    static String pullFontPathFromTextAppearance(final Context context, AttributeSet attrs, int[] attributeId) {
+        if (attributeId == null || attrs == null) {
             return null;
         }
 
         int textAppearanceId = -1;
-        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, new int[]{android.R.attr.textAppearance});
+        final TypedArray typedArrayAttr = context.obtainStyledAttributes(attrs, ANDROID_ATTR_TEXT_APPEARANCE);
         if (typedArrayAttr != null) {
             try {
                 textAppearanceId = typedArrayAttr.getResourceId(0, -1);
@@ -225,7 +227,7 @@ static String pullFontPathFromTextAppearance(final Context context, AttributeSet
             }
         }
 
-        final TypedArray textAppearanceAttrs = context.obtainStyledAttributes(textAppearanceId, new int[]{attributeId});
+        final TypedArray textAppearanceAttrs = context.obtainStyledAttributes(textAppearanceId, attributeId);
         if (textAppearanceAttrs != null) {
             try {
                 return textAppearanceAttrs.getString(0);
@@ -247,15 +249,15 @@ static String pullFontPathFromTextAppearance(final Context context, AttributeSet
      * @param attributeId if -1 returns null.
      * @return null if no theme or attribute defined.
      */
-    static String pullFontPathFromTheme(Context context, int styleAttrId, int attributeId) {
-        if (styleAttrId == -1 || attributeId == -1)
+    static String pullFontPathFromTheme(Context context, int styleAttrId, int[] attributeId) {
+        if (styleAttrId == -1 || attributeId == null)
             return null;
 
         final Resources.Theme theme = context.getTheme();
         final TypedValue value = new TypedValue();
 
         theme.resolveAttribute(styleAttrId, value, true);
-        final TypedArray typedArray = theme.obtainStyledAttributes(value.resourceId, new int[]{attributeId});
+        final TypedArray typedArray = theme.obtainStyledAttributes(value.resourceId, attributeId);
         try {
             String font = typedArray.getString(0);
             return font;
@@ -276,8 +278,8 @@ static String pullFontPathFromTheme(Context context, int styleAttrId, int attrib
      * @param attributeId    if -1 returns null.
      * @return null if no theme or attribute defined.
      */
-    static String pullFontPathFromTheme(Context context, int styleAttrId, int subStyleAttrId, int attributeId) {
-        if (styleAttrId == -1 || attributeId == -1)
+    static String pullFontPathFromTheme(Context context, int styleAttrId, int subStyleAttrId, int[] attributeId) {
+        if (styleAttrId == -1 || attributeId == null)
             return null;
 
         final Resources.Theme theme = context.getTheme();
@@ -296,7 +298,7 @@ static String pullFontPathFromTheme(Context context, int styleAttrId, int subSty
         }
 
         if (subStyleResId == -1) return null;
-        final TypedArray subTypedArray = context.obtainStyledAttributes(subStyleResId, new int[]{attributeId});
+        final TypedArray subTypedArray = context.obtainStyledAttributes(subStyleResId, attributeId);
         if (subTypedArray != null) {
             try {
                 return subTypedArray.getString(0);
@@ -347,7 +349,6 @@ static boolean canAddV7AppCompatViews() {
         return sAppCompatViewCheck;
     }
 
-
     private CalligraphyUtils() {
     }
 
